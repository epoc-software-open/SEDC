/*
               File: B402_PC19_STUDY_DEL
        Description: 試験関連データ全物理削除
             Author: GeneXus Java Generator version 10_3_3-92797
       Generated on: July 15, 2020 13:19:12.0
       Program type: Callable routine
          Main DBMS: mysql
*/
import java.sql.*;
import com.genexus.db.*;
import com.genexus.*;
import com.genexus.distributed.*;
import com.genexus.search.*;

public final  class b402_pc19_study_del extends GXProcedure
{
   public b402_pc19_study_del( int remoteHandle )
   {
      super( remoteHandle , new ModelContext( b402_pc19_study_del.class ), "" );
   }

   public b402_pc19_study_del( int remoteHandle ,
                               ModelContext context )
   {
      super( remoteHandle , context, "" );
   }

   public String executeUdp( SdtTBM21_STUDY aP0 ,
                             short[] aP1 )
   {
      b402_pc19_study_del.this.AV9P_BC_STUDY = aP0;
      b402_pc19_study_del.this.aP1 = aP1;
      b402_pc19_study_del.this.aP2 = aP2;
      b402_pc19_study_del.this.aP2 = new String[] {""};
      initialize();
      privateExecute();
      return aP2[0];
   }

   public void execute( SdtTBM21_STUDY aP0 ,
                        short[] aP1 ,
                        String[] aP2 )
   {
      execute_int(aP0, aP1, aP2);
   }

   private void execute_int( SdtTBM21_STUDY aP0 ,
                             short[] aP1 ,
                             String[] aP2 )
   {
      b402_pc19_study_del.this.AV9P_BC_STUDY = aP0;
      b402_pc19_study_del.this.aP1 = aP1;
      b402_pc19_study_del.this.aP2 = aP2;
      initialize();
      /* GeneXus formulas */
      /* Output device settings */
      privateExecute();
   }

   private void privateExecute( )
   {
      AV8C_APP_ID = "B402" ;
      /* Execute user subroutine: S111 */
      S111 ();
      if ( returnInSub )
      {
         returnInSub = true;
         cleanup();
         if (true) return;
      }
      AV13W_RTN_CD = (short)(0) ;
      AV14W_RTN_MSG = "" ;
      /* Optimized DELETE. */
      /* Using cursor P00572 */
      pr_default.execute(0, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT13_CRF_RES_HIS") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00573 */
      pr_default.execute(1, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT12_CRF_RESULT") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00574 */
      pr_default.execute(2, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT11_CRF_HISTORY") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00575 */
      pr_default.execute(3, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT15_CRF_MEMO_LOC") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00576 */
      pr_default.execute(4, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT14_CRF_MEMO") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00577 */
      pr_default.execute(5, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT02_CRF") ;
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00578 */
      pr_default.execute(6, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      Application.getSmartCacheProvider(remoteHandle).setUpdated("TBT01_SUBJECT") ;
      /* End optimized DELETE. */
      /* Using cursor P00579 */
      pr_default.execute(7, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(7) != 101) )
      {
         A31TBM35_STUDY_ID = P00579_A31TBM35_STUDY_ID[0] ;
         A32TBM35_CRF_ID = P00579_A32TBM35_CRF_ID[0] ;
         A33TBM35_CRF_ITEM_CD = P00579_A33TBM35_CRF_ITEM_CD[0] ;
         A34TBM35_STUDY_AUTH_CD = P00579_A34TBM35_STUDY_AUTH_CD[0] ;
         A580TBM35_DISPLAY_FLG = P00579_A580TBM35_DISPLAY_FLG[0] ;
         n580TBM35_DISPLAY_FLG = P00579_n580TBM35_DISPLAY_FLG[0] ;
         A581TBM35_DEL_FLG = P00579_A581TBM35_DEL_FLG[0] ;
         n581TBM35_DEL_FLG = P00579_n581TBM35_DEL_FLG[0] ;
         A582TBM35_CRT_DATETIME = P00579_A582TBM35_CRT_DATETIME[0] ;
         n582TBM35_CRT_DATETIME = P00579_n582TBM35_CRT_DATETIME[0] ;
         A583TBM35_CRT_USER_ID = P00579_A583TBM35_CRT_USER_ID[0] ;
         n583TBM35_CRT_USER_ID = P00579_n583TBM35_CRT_USER_ID[0] ;
         A584TBM35_CRT_PROG_NM = P00579_A584TBM35_CRT_PROG_NM[0] ;
         n584TBM35_CRT_PROG_NM = P00579_n584TBM35_CRT_PROG_NM[0] ;
         A585TBM35_UPD_DATETIME = P00579_A585TBM35_UPD_DATETIME[0] ;
         n585TBM35_UPD_DATETIME = P00579_n585TBM35_UPD_DATETIME[0] ;
         A586TBM35_UPD_USER_ID = P00579_A586TBM35_UPD_USER_ID[0] ;
         n586TBM35_UPD_USER_ID = P00579_n586TBM35_UPD_USER_ID[0] ;
         A587TBM35_UPD_PROG_NM = P00579_A587TBM35_UPD_PROG_NM[0] ;
         n587TBM35_UPD_PROG_NM = P00579_n587TBM35_UPD_PROG_NM[0] ;
         A588TBM35_UPD_CNT = P00579_A588TBM35_UPD_CNT[0] ;
         n588TBM35_UPD_CNT = P00579_n588TBM35_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A31TBM35_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A32TBM35_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A33TBM35_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A34TBM35_STUDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A580TBM35_DISPLAY_FLG, 0);
         AV12W_ITEMS.add(A581TBM35_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM35_CRF_ITEM_AUTH", AV12W_ITEMS, A582TBM35_CRT_DATETIME, A583TBM35_CRT_USER_ID, A584TBM35_CRT_PROG_NM, A585TBM35_UPD_DATETIME, A586TBM35_UPD_USER_ID, A587TBM35_UPD_PROG_NM, A588TBM35_UPD_CNT) ;
         /* Using cursor P005710 */
         pr_default.execute(8, new Object[] {new Long(A31TBM35_STUDY_ID), new Short(A32TBM35_CRF_ID), A33TBM35_CRF_ITEM_CD, A34TBM35_STUDY_AUTH_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM35_CRF_ITEM_AUTH") ;
         pr_default.readNext(7);
      }
      pr_default.close(7);
      /* Using cursor P005711 */
      pr_default.execute(9, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(9) != 101) )
      {
         A19TBM41_STUDY_ID = P005711_A19TBM41_STUDY_ID[0] ;
         A20TBM41_CRF_ID = P005711_A20TBM41_CRF_ID[0] ;
         A21TBM41_CRF_ITEM_GRP_DIV = P005711_A21TBM41_CRF_ITEM_GRP_DIV[0] ;
         A22TBM41_CRF_ITEM_GRP_CD = P005711_A22TBM41_CRF_ITEM_GRP_CD[0] ;
         A424TBM41_NCM_METADATA_ID = P005711_A424TBM41_NCM_METADATA_ID[0] ;
         n424TBM41_NCM_METADATA_ID = P005711_n424TBM41_NCM_METADATA_ID[0] ;
         A425TBM41_DEL_FLG = P005711_A425TBM41_DEL_FLG[0] ;
         n425TBM41_DEL_FLG = P005711_n425TBM41_DEL_FLG[0] ;
         A426TBM41_CRT_DATETIME = P005711_A426TBM41_CRT_DATETIME[0] ;
         n426TBM41_CRT_DATETIME = P005711_n426TBM41_CRT_DATETIME[0] ;
         A427TBM41_CRT_USER_ID = P005711_A427TBM41_CRT_USER_ID[0] ;
         n427TBM41_CRT_USER_ID = P005711_n427TBM41_CRT_USER_ID[0] ;
         A428TBM41_CRT_PROG_NM = P005711_A428TBM41_CRT_PROG_NM[0] ;
         n428TBM41_CRT_PROG_NM = P005711_n428TBM41_CRT_PROG_NM[0] ;
         A429TBM41_UPD_DATETIME = P005711_A429TBM41_UPD_DATETIME[0] ;
         n429TBM41_UPD_DATETIME = P005711_n429TBM41_UPD_DATETIME[0] ;
         A430TBM41_UPD_USER_ID = P005711_A430TBM41_UPD_USER_ID[0] ;
         n430TBM41_UPD_USER_ID = P005711_n430TBM41_UPD_USER_ID[0] ;
         A431TBM41_UPD_PROG_NM = P005711_A431TBM41_UPD_PROG_NM[0] ;
         n431TBM41_UPD_PROG_NM = P005711_n431TBM41_UPD_PROG_NM[0] ;
         A432TBM41_UPD_CNT = P005711_A432TBM41_UPD_CNT[0] ;
         n432TBM41_UPD_CNT = P005711_n432TBM41_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A19TBM41_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A20TBM41_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A21TBM41_CRF_ITEM_GRP_DIV, 0);
         AV12W_ITEMS.add(A22TBM41_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(A424TBM41_NCM_METADATA_ID, 0);
         AV12W_ITEMS.add(A425TBM41_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM41_CRF_NCM_MAP", AV12W_ITEMS, A426TBM41_CRT_DATETIME, A427TBM41_CRT_USER_ID, A428TBM41_CRT_PROG_NM, A429TBM41_UPD_DATETIME, A430TBM41_UPD_USER_ID, A431TBM41_UPD_PROG_NM, A432TBM41_UPD_CNT) ;
         /* Using cursor P005712 */
         pr_default.execute(10, new Object[] {new Long(A19TBM41_STUDY_ID), new Short(A20TBM41_CRF_ID), A21TBM41_CRF_ITEM_GRP_DIV, A22TBM41_CRF_ITEM_GRP_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM41_CRF_NCM_MAP") ;
         pr_default.readNext(9);
      }
      pr_default.close(9);
      /* Using cursor P005713 */
      pr_default.execute(11, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(11) != 101) )
      {
         A200TBM43_STUDY_ID = P005713_A200TBM43_STUDY_ID[0] ;
         A201TBM43_DOM_CD = P005713_A201TBM43_DOM_CD[0] ;
         A202TBM43_DOM_VAR_NM = P005713_A202TBM43_DOM_VAR_NM[0] ;
         A910TBM43_VAR_DESC = P005713_A910TBM43_VAR_DESC[0] ;
         n910TBM43_VAR_DESC = P005713_n910TBM43_VAR_DESC[0] ;
         A911TBM43_SDTM_FLG = P005713_A911TBM43_SDTM_FLG[0] ;
         n911TBM43_SDTM_FLG = P005713_n911TBM43_SDTM_FLG[0] ;
         A912TBM43_CDASH_FLG = P005713_A912TBM43_CDASH_FLG[0] ;
         n912TBM43_CDASH_FLG = P005713_n912TBM43_CDASH_FLG[0] ;
         A913TBM43_INPUT_TYPE_DIV = P005713_A913TBM43_INPUT_TYPE_DIV[0] ;
         n913TBM43_INPUT_TYPE_DIV = P005713_n913TBM43_INPUT_TYPE_DIV[0] ;
         A914TBM43_REQUIRED_FLG = P005713_A914TBM43_REQUIRED_FLG[0] ;
         n914TBM43_REQUIRED_FLG = P005713_n914TBM43_REQUIRED_FLG[0] ;
         A915TBM43_SAS_FIELD_NM = P005713_A915TBM43_SAS_FIELD_NM[0] ;
         n915TBM43_SAS_FIELD_NM = P005713_n915TBM43_SAS_FIELD_NM[0] ;
         A916TBM43_ODM_DATA_TYPE = P005713_A916TBM43_ODM_DATA_TYPE[0] ;
         n916TBM43_ODM_DATA_TYPE = P005713_n916TBM43_ODM_DATA_TYPE[0] ;
         A917TBM43_NOTE = P005713_A917TBM43_NOTE[0] ;
         n917TBM43_NOTE = P005713_n917TBM43_NOTE[0] ;
         A918TBM43_ORDER = P005713_A918TBM43_ORDER[0] ;
         n918TBM43_ORDER = P005713_n918TBM43_ORDER[0] ;
         A919TBM43_DEL_FLG = P005713_A919TBM43_DEL_FLG[0] ;
         n919TBM43_DEL_FLG = P005713_n919TBM43_DEL_FLG[0] ;
         A920TBM43_CRT_DATETIME = P005713_A920TBM43_CRT_DATETIME[0] ;
         n920TBM43_CRT_DATETIME = P005713_n920TBM43_CRT_DATETIME[0] ;
         A921TBM43_CRT_USER_ID = P005713_A921TBM43_CRT_USER_ID[0] ;
         n921TBM43_CRT_USER_ID = P005713_n921TBM43_CRT_USER_ID[0] ;
         A922TBM43_CRT_PROG_NM = P005713_A922TBM43_CRT_PROG_NM[0] ;
         n922TBM43_CRT_PROG_NM = P005713_n922TBM43_CRT_PROG_NM[0] ;
         A923TBM43_UPD_DATETIME = P005713_A923TBM43_UPD_DATETIME[0] ;
         n923TBM43_UPD_DATETIME = P005713_n923TBM43_UPD_DATETIME[0] ;
         A924TBM43_UPD_USER_ID = P005713_A924TBM43_UPD_USER_ID[0] ;
         n924TBM43_UPD_USER_ID = P005713_n924TBM43_UPD_USER_ID[0] ;
         A925TBM43_UPD_PROG_NM = P005713_A925TBM43_UPD_PROG_NM[0] ;
         n925TBM43_UPD_PROG_NM = P005713_n925TBM43_UPD_PROG_NM[0] ;
         A926TBM43_UPD_CNT = P005713_A926TBM43_UPD_CNT[0] ;
         n926TBM43_UPD_CNT = P005713_n926TBM43_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A200TBM43_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A201TBM43_DOM_CD, 0);
         AV12W_ITEMS.add(A202TBM43_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A910TBM43_VAR_DESC, 0);
         AV12W_ITEMS.add(A911TBM43_SDTM_FLG, 0);
         AV12W_ITEMS.add(A912TBM43_CDASH_FLG, 0);
         AV12W_ITEMS.add(A913TBM43_INPUT_TYPE_DIV, 0);
         AV12W_ITEMS.add(A914TBM43_REQUIRED_FLG, 0);
         AV12W_ITEMS.add(A915TBM43_SAS_FIELD_NM, 0);
         AV12W_ITEMS.add(A916TBM43_ODM_DATA_TYPE, 0);
         AV12W_ITEMS.add(A917TBM43_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A918TBM43_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A919TBM43_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM43_STUDY_CDISC_ITEM", AV12W_ITEMS, A920TBM43_CRT_DATETIME, A921TBM43_CRT_USER_ID, A922TBM43_CRT_PROG_NM, A923TBM43_UPD_DATETIME, A924TBM43_UPD_USER_ID, A925TBM43_UPD_PROG_NM, A926TBM43_UPD_CNT) ;
         /* Using cursor P005714 */
         pr_default.execute(12, new Object[] {new Long(A200TBM43_STUDY_ID), A201TBM43_DOM_CD, A202TBM43_DOM_VAR_NM});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM43_STUDY_CDISC_ITEM") ;
         pr_default.readNext(11);
      }
      pr_default.close(11);
      /* Using cursor P005715 */
      pr_default.execute(13, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(13) != 101) )
      {
         A203TBM42_STUDY_ID = P005715_A203TBM42_STUDY_ID[0] ;
         A204TBM42_DOM_CD = P005715_A204TBM42_DOM_CD[0] ;
         A905TBM42_DOM_ENM = P005715_A905TBM42_DOM_ENM[0] ;
         n905TBM42_DOM_ENM = P005715_n905TBM42_DOM_ENM[0] ;
         A906TBM42_DOM_JNM = P005715_A906TBM42_DOM_JNM[0] ;
         n906TBM42_DOM_JNM = P005715_n906TBM42_DOM_JNM[0] ;
         A907TBM42_DOM_GRP_NM = P005715_A907TBM42_DOM_GRP_NM[0] ;
         n907TBM42_DOM_GRP_NM = P005715_n907TBM42_DOM_GRP_NM[0] ;
         A908TBM42_NOTE = P005715_A908TBM42_NOTE[0] ;
         n908TBM42_NOTE = P005715_n908TBM42_NOTE[0] ;
         A909TBM42_ORDER = P005715_A909TBM42_ORDER[0] ;
         n909TBM42_ORDER = P005715_n909TBM42_ORDER[0] ;
         A893TBM42_DEL_FLG = P005715_A893TBM42_DEL_FLG[0] ;
         n893TBM42_DEL_FLG = P005715_n893TBM42_DEL_FLG[0] ;
         A894TBM42_CRT_DATETIME = P005715_A894TBM42_CRT_DATETIME[0] ;
         n894TBM42_CRT_DATETIME = P005715_n894TBM42_CRT_DATETIME[0] ;
         A895TBM42_CRT_USER_ID = P005715_A895TBM42_CRT_USER_ID[0] ;
         n895TBM42_CRT_USER_ID = P005715_n895TBM42_CRT_USER_ID[0] ;
         A896TBM42_CRT_PROG_NM = P005715_A896TBM42_CRT_PROG_NM[0] ;
         n896TBM42_CRT_PROG_NM = P005715_n896TBM42_CRT_PROG_NM[0] ;
         A897TBM42_UPD_DATETIME = P005715_A897TBM42_UPD_DATETIME[0] ;
         n897TBM42_UPD_DATETIME = P005715_n897TBM42_UPD_DATETIME[0] ;
         A898TBM42_UPD_USER_ID = P005715_A898TBM42_UPD_USER_ID[0] ;
         n898TBM42_UPD_USER_ID = P005715_n898TBM42_UPD_USER_ID[0] ;
         A899TBM42_UPD_PROG_NM = P005715_A899TBM42_UPD_PROG_NM[0] ;
         n899TBM42_UPD_PROG_NM = P005715_n899TBM42_UPD_PROG_NM[0] ;
         A900TBM42_UPD_CNT = P005715_A900TBM42_UPD_CNT[0] ;
         n900TBM42_UPD_CNT = P005715_n900TBM42_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A203TBM42_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A204TBM42_DOM_CD, 0);
         AV12W_ITEMS.add(A905TBM42_DOM_ENM, 0);
         AV12W_ITEMS.add(A906TBM42_DOM_JNM, 0);
         AV12W_ITEMS.add(A907TBM42_DOM_GRP_NM, 0);
         AV12W_ITEMS.add(A908TBM42_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A909TBM42_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A893TBM42_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM42_STUDY_CDISC_DOMAIN", AV12W_ITEMS, A894TBM42_CRT_DATETIME, A895TBM42_CRT_USER_ID, A896TBM42_CRT_PROG_NM, A897TBM42_UPD_DATETIME, A898TBM42_UPD_USER_ID, A899TBM42_UPD_PROG_NM, A900TBM42_UPD_CNT) ;
         /* Using cursor P005716 */
         pr_default.execute(14, new Object[] {new Long(A203TBM42_STUDY_ID), A204TBM42_DOM_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM42_STUDY_CDISC_DOMAIN") ;
         pr_default.readNext(13);
      }
      pr_default.close(13);
      /* Using cursor P005717 */
      pr_default.execute(15, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(15) != 101) )
      {
         A945TBM44_STUDY_ID = P005717_A945TBM44_STUDY_ID[0] ;
         A946TBM44_CRF_ID = P005717_A946TBM44_CRF_ID[0] ;
         A947TBM44_CRF_EDA_NO = P005717_A947TBM44_CRF_EDA_NO[0] ;
         A948TBM44_VISIT_NO = P005717_A948TBM44_VISIT_NO[0] ;
         n948TBM44_VISIT_NO = P005717_n948TBM44_VISIT_NO[0] ;
         A949TBM44_DEL_FLG = P005717_A949TBM44_DEL_FLG[0] ;
         n949TBM44_DEL_FLG = P005717_n949TBM44_DEL_FLG[0] ;
         A950TBM44_CRT_DATETIME = P005717_A950TBM44_CRT_DATETIME[0] ;
         n950TBM44_CRT_DATETIME = P005717_n950TBM44_CRT_DATETIME[0] ;
         A951TBM44_CRT_USER_ID = P005717_A951TBM44_CRT_USER_ID[0] ;
         n951TBM44_CRT_USER_ID = P005717_n951TBM44_CRT_USER_ID[0] ;
         A952TBM44_CRT_PROG_NM = P005717_A952TBM44_CRT_PROG_NM[0] ;
         n952TBM44_CRT_PROG_NM = P005717_n952TBM44_CRT_PROG_NM[0] ;
         A953TBM44_UPD_DATETIME = P005717_A953TBM44_UPD_DATETIME[0] ;
         n953TBM44_UPD_DATETIME = P005717_n953TBM44_UPD_DATETIME[0] ;
         A954TBM44_UPD_USER_ID = P005717_A954TBM44_UPD_USER_ID[0] ;
         n954TBM44_UPD_USER_ID = P005717_n954TBM44_UPD_USER_ID[0] ;
         A955TBM44_UPD_PROG_NM = P005717_A955TBM44_UPD_PROG_NM[0] ;
         n955TBM44_UPD_PROG_NM = P005717_n955TBM44_UPD_PROG_NM[0] ;
         A956TBM44_UPD_CNT = P005717_A956TBM44_UPD_CNT[0] ;
         n956TBM44_UPD_CNT = P005717_n956TBM44_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A945TBM44_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A946TBM44_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A947TBM44_CRF_EDA_NO, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A948TBM44_VISIT_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A949TBM44_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM44_CRF_VISIT", AV12W_ITEMS, A950TBM44_CRT_DATETIME, A951TBM44_CRT_USER_ID, A952TBM44_CRT_PROG_NM, A953TBM44_UPD_DATETIME, A954TBM44_UPD_USER_ID, A955TBM44_UPD_PROG_NM, A956TBM44_UPD_CNT) ;
         /* Using cursor P005718 */
         pr_default.execute(16, new Object[] {new Long(A945TBM44_STUDY_ID), new Short(A946TBM44_CRF_ID), new Byte(A947TBM44_CRF_EDA_NO)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM44_CRF_VISIT") ;
         pr_default.readNext(15);
      }
      pr_default.close(15);
      /* Using cursor P005719 */
      pr_default.execute(17, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(17) != 101) )
      {
         A977TBM45_STUDY_ID = P005719_A977TBM45_STUDY_ID[0] ;
         A978TBM45_FILTER_NO = P005719_A978TBM45_FILTER_NO[0] ;
         A980TBM45_FILETR_NM = P005719_A980TBM45_FILETR_NM[0] ;
         n980TBM45_FILETR_NM = P005719_n980TBM45_FILETR_NM[0] ;
         A981TBM45_IN_CRF_ID = P005719_A981TBM45_IN_CRF_ID[0] ;
         n981TBM45_IN_CRF_ID = P005719_n981TBM45_IN_CRF_ID[0] ;
         A982TBM45_DEL_FLG = P005719_A982TBM45_DEL_FLG[0] ;
         n982TBM45_DEL_FLG = P005719_n982TBM45_DEL_FLG[0] ;
         A983TBM45_CRT_DATETIME = P005719_A983TBM45_CRT_DATETIME[0] ;
         n983TBM45_CRT_DATETIME = P005719_n983TBM45_CRT_DATETIME[0] ;
         A984TBM45_CRT_USER_ID = P005719_A984TBM45_CRT_USER_ID[0] ;
         n984TBM45_CRT_USER_ID = P005719_n984TBM45_CRT_USER_ID[0] ;
         A985TBM45_CRT_PROG_NM = P005719_A985TBM45_CRT_PROG_NM[0] ;
         n985TBM45_CRT_PROG_NM = P005719_n985TBM45_CRT_PROG_NM[0] ;
         A986TBM45_UPD_DATETIME = P005719_A986TBM45_UPD_DATETIME[0] ;
         n986TBM45_UPD_DATETIME = P005719_n986TBM45_UPD_DATETIME[0] ;
         A987TBM45_UPD_USER_ID = P005719_A987TBM45_UPD_USER_ID[0] ;
         n987TBM45_UPD_USER_ID = P005719_n987TBM45_UPD_USER_ID[0] ;
         A988TBM45_UPD_PROG_NM = P005719_A988TBM45_UPD_PROG_NM[0] ;
         n988TBM45_UPD_PROG_NM = P005719_n988TBM45_UPD_PROG_NM[0] ;
         A989TBM45_UPD_CNT = P005719_A989TBM45_UPD_CNT[0] ;
         n989TBM45_UPD_CNT = P005719_n989TBM45_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A977TBM45_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A978TBM45_FILTER_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A980TBM45_FILETR_NM, 0);
         AV12W_ITEMS.add(A981TBM45_IN_CRF_ID, 0);
         AV12W_ITEMS.add(A982TBM45_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM45_CRF_FILTER", AV12W_ITEMS, A983TBM45_CRT_DATETIME, A984TBM45_CRT_USER_ID, A985TBM45_CRT_PROG_NM, A986TBM45_UPD_DATETIME, A987TBM45_UPD_USER_ID, A988TBM45_UPD_PROG_NM, A989TBM45_UPD_CNT) ;
         /* Using cursor P005720 */
         pr_default.execute(18, new Object[] {new Long(A977TBM45_STUDY_ID), new Short(A978TBM45_FILTER_NO)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM45_CRF_FILETR") ;
         pr_default.readNext(17);
      }
      pr_default.close(17);
      /* Using cursor P005721 */
      pr_default.execute(19, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(19) != 101) )
      {
         A79TBM37_STUDY_ID = P005721_A79TBM37_STUDY_ID[0] ;
         A80TBM37_CRF_ID = P005721_A80TBM37_CRF_ID[0] ;
         A81TBM37_CRF_ITEM_GRP_DIV = P005721_A81TBM37_CRF_ITEM_GRP_DIV[0] ;
         A82TBM37_CRF_ITEM_GRP_CD = P005721_A82TBM37_CRF_ITEM_GRP_CD[0] ;
         A83TBM37_VISIT_NO = P005721_A83TBM37_VISIT_NO[0] ;
         n83TBM37_VISIT_NO = P005721_n83TBM37_VISIT_NO[0] ;
         A84TBM37_DOM_CD = P005721_A84TBM37_DOM_CD[0] ;
         n84TBM37_DOM_CD = P005721_n84TBM37_DOM_CD[0] ;
         A500TBM37_DOM_VAR_NM = P005721_A500TBM37_DOM_VAR_NM[0] ;
         n500TBM37_DOM_VAR_NM = P005721_n500TBM37_DOM_VAR_NM[0] ;
         A85TBM37_DOM_ITM_GRP_OID = P005721_A85TBM37_DOM_ITM_GRP_OID[0] ;
         n85TBM37_DOM_ITM_GRP_OID = P005721_n85TBM37_DOM_ITM_GRP_OID[0] ;
         A501TBM37_DOM_ITM_GRP_ATTR_SEQ = P005721_A501TBM37_DOM_ITM_GRP_ATTR_SEQ[0] ;
         n501TBM37_DOM_ITM_GRP_ATTR_SEQ = P005721_n501TBM37_DOM_ITM_GRP_ATTR_SEQ[0] ;
         A86TBM37_DOM_ITM_GRP_ROWNO = P005721_A86TBM37_DOM_ITM_GRP_ROWNO[0] ;
         n86TBM37_DOM_ITM_GRP_ROWNO = P005721_n86TBM37_DOM_ITM_GRP_ROWNO[0] ;
         A433TBM37_DEL_FLG = P005721_A433TBM37_DEL_FLG[0] ;
         n433TBM37_DEL_FLG = P005721_n433TBM37_DEL_FLG[0] ;
         A434TBM37_CRT_DATETIME = P005721_A434TBM37_CRT_DATETIME[0] ;
         n434TBM37_CRT_DATETIME = P005721_n434TBM37_CRT_DATETIME[0] ;
         A435TBM37_CRT_USER_ID = P005721_A435TBM37_CRT_USER_ID[0] ;
         n435TBM37_CRT_USER_ID = P005721_n435TBM37_CRT_USER_ID[0] ;
         A436TBM37_CRT_PROG_NM = P005721_A436TBM37_CRT_PROG_NM[0] ;
         n436TBM37_CRT_PROG_NM = P005721_n436TBM37_CRT_PROG_NM[0] ;
         A437TBM37_UPD_DATETIME = P005721_A437TBM37_UPD_DATETIME[0] ;
         n437TBM37_UPD_DATETIME = P005721_n437TBM37_UPD_DATETIME[0] ;
         A438TBM37_UPD_USER_ID = P005721_A438TBM37_UPD_USER_ID[0] ;
         n438TBM37_UPD_USER_ID = P005721_n438TBM37_UPD_USER_ID[0] ;
         A439TBM37_UPD_PROG_NM = P005721_A439TBM37_UPD_PROG_NM[0] ;
         n439TBM37_UPD_PROG_NM = P005721_n439TBM37_UPD_PROG_NM[0] ;
         A440TBM37_UPD_CNT = P005721_A440TBM37_UPD_CNT[0] ;
         n440TBM37_UPD_CNT = P005721_n440TBM37_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A79TBM37_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A80TBM37_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A81TBM37_CRF_ITEM_GRP_DIV, 0);
         AV12W_ITEMS.add(A82TBM37_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A83TBM37_VISIT_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A84TBM37_DOM_CD, 0);
         AV12W_ITEMS.add(A500TBM37_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A85TBM37_DOM_ITM_GRP_OID, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A501TBM37_DOM_ITM_GRP_ATTR_SEQ, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A86TBM37_DOM_ITM_GRP_ROWNO, 10, 0)), 0);
         AV12W_ITEMS.add(A433TBM37_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM37_CRF_DOM_MAP", AV12W_ITEMS, A434TBM37_CRT_DATETIME, A435TBM37_CRT_USER_ID, A436TBM37_CRT_PROG_NM, A437TBM37_UPD_DATETIME, A438TBM37_UPD_USER_ID, A439TBM37_UPD_PROG_NM, A440TBM37_UPD_CNT) ;
         /* Using cursor P005722 */
         pr_default.execute(20, new Object[] {new Long(A79TBM37_STUDY_ID), new Short(A80TBM37_CRF_ID), A81TBM37_CRF_ITEM_GRP_DIV, A82TBM37_CRF_ITEM_GRP_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM37_CRF_DOM_MAP") ;
         pr_default.readNext(19);
      }
      pr_default.close(19);
      /* Using cursor P005723 */
      pr_default.execute(21, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(21) != 101) )
      {
         A606TBM11_STUDY_ID = P005723_A606TBM11_STUDY_ID[0] ;
         n606TBM11_STUDY_ID = P005723_n606TBM11_STUDY_ID[0] ;
         A62TBM11_IMAGE_CD = P005723_A62TBM11_IMAGE_CD[0] ;
         A634TBM11_IMAGE_NM = P005723_A634TBM11_IMAGE_NM[0] ;
         n634TBM11_IMAGE_NM = P005723_n634TBM11_IMAGE_NM[0] ;
         A534TBM11_FILE_NAME = P005723_A534TBM11_FILE_NAME[0] ;
         n534TBM11_FILE_NAME = P005723_n534TBM11_FILE_NAME[0] ;
         A535TBM11_DEL_FLG = P005723_A535TBM11_DEL_FLG[0] ;
         n535TBM11_DEL_FLG = P005723_n535TBM11_DEL_FLG[0] ;
         A536TBM11_CRT_DATETIME = P005723_A536TBM11_CRT_DATETIME[0] ;
         n536TBM11_CRT_DATETIME = P005723_n536TBM11_CRT_DATETIME[0] ;
         A537TBM11_CRT_USER_ID = P005723_A537TBM11_CRT_USER_ID[0] ;
         n537TBM11_CRT_USER_ID = P005723_n537TBM11_CRT_USER_ID[0] ;
         A538TBM11_CRT_PROG_NM = P005723_A538TBM11_CRT_PROG_NM[0] ;
         n538TBM11_CRT_PROG_NM = P005723_n538TBM11_CRT_PROG_NM[0] ;
         A539TBM11_UPD_DATETIME = P005723_A539TBM11_UPD_DATETIME[0] ;
         n539TBM11_UPD_DATETIME = P005723_n539TBM11_UPD_DATETIME[0] ;
         A540TBM11_UPD_USER_ID = P005723_A540TBM11_UPD_USER_ID[0] ;
         n540TBM11_UPD_USER_ID = P005723_n540TBM11_UPD_USER_ID[0] ;
         A541TBM11_UPD_PROG_NM = P005723_A541TBM11_UPD_PROG_NM[0] ;
         n541TBM11_UPD_PROG_NM = P005723_n541TBM11_UPD_PROG_NM[0] ;
         A542TBM11_UPD_CNT = P005723_A542TBM11_UPD_CNT[0] ;
         n542TBM11_UPD_CNT = P005723_n542TBM11_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(A62TBM11_IMAGE_CD, 0);
         AV12W_ITEMS.add(A634TBM11_IMAGE_NM, 0);
         AV12W_ITEMS.add(A534TBM11_FILE_NAME, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A606TBM11_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A535TBM11_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM11_IMAGE", AV12W_ITEMS, A536TBM11_CRT_DATETIME, A537TBM11_CRT_USER_ID, A538TBM11_CRT_PROG_NM, A539TBM11_UPD_DATETIME, A540TBM11_UPD_USER_ID, A541TBM11_UPD_PROG_NM, A542TBM11_UPD_CNT) ;
         /* Using cursor P005724 */
         pr_default.execute(22, new Object[] {A62TBM11_IMAGE_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM11_IMAGE") ;
         pr_default.readNext(21);
      }
      pr_default.close(21);
      /* Using cursor P005725 */
      pr_default.execute(23, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(23) != 101) )
      {
         A64TBM24_STUDY_ID = P005725_A64TBM24_STUDY_ID[0] ;
         A65TBM24_DOM_CD = P005725_A65TBM24_DOM_CD[0] ;
         A66TBM24_DOM_VAR_NM = P005725_A66TBM24_DOM_VAR_NM[0] ;
         A702TBM24_DOM_ITM_GRP_OID = P005725_A702TBM24_DOM_ITM_GRP_OID[0] ;
         n702TBM24_DOM_ITM_GRP_OID = P005725_n702TBM24_DOM_ITM_GRP_OID[0] ;
         A703TBM24_DOM_ITM_GRP_ATTR_SEQ = P005725_A703TBM24_DOM_ITM_GRP_ATTR_SEQ[0] ;
         n703TBM24_DOM_ITM_GRP_ATTR_SEQ = P005725_n703TBM24_DOM_ITM_GRP_ATTR_SEQ[0] ;
         A704TBM24_DOM_ITM_GRP_ROWNO = P005725_A704TBM24_DOM_ITM_GRP_ROWNO[0] ;
         n704TBM24_DOM_ITM_GRP_ROWNO = P005725_n704TBM24_DOM_ITM_GRP_ROWNO[0] ;
         A705TBM24_CRF_ITEM_NM = P005725_A705TBM24_CRF_ITEM_NM[0] ;
         n705TBM24_CRF_ITEM_NM = P005725_n705TBM24_CRF_ITEM_NM[0] ;
         A67TBM24_CRF_ITEM_DIV = P005725_A67TBM24_CRF_ITEM_DIV[0] ;
         A635TBM24_IDENTIFICATION_CD = P005725_A635TBM24_IDENTIFICATION_CD[0] ;
         n635TBM24_IDENTIFICATION_CD = P005725_n635TBM24_IDENTIFICATION_CD[0] ;
         A636TBM24_TEXT_MAXLENGTH = P005725_A636TBM24_TEXT_MAXLENGTH[0] ;
         n636TBM24_TEXT_MAXLENGTH = P005725_n636TBM24_TEXT_MAXLENGTH[0] ;
         A637TBM24_TEXT_MAXROWS = P005725_A637TBM24_TEXT_MAXROWS[0] ;
         n637TBM24_TEXT_MAXROWS = P005725_n637TBM24_TEXT_MAXROWS[0] ;
         A638TBM24_DECIMAL_DIGITS = P005725_A638TBM24_DECIMAL_DIGITS[0] ;
         n638TBM24_DECIMAL_DIGITS = P005725_n638TBM24_DECIMAL_DIGITS[0] ;
         A639TBM24_TEXT = P005725_A639TBM24_TEXT[0] ;
         n639TBM24_TEXT = P005725_n639TBM24_TEXT[0] ;
         A640TBM24_FIXED_VALUE = P005725_A640TBM24_FIXED_VALUE[0] ;
         n640TBM24_FIXED_VALUE = P005725_n640TBM24_FIXED_VALUE[0] ;
         A641TBM24_CHK_FALSE_INNER_VALUE = P005725_A641TBM24_CHK_FALSE_INNER_VALUE[0] ;
         n641TBM24_CHK_FALSE_INNER_VALUE = P005725_n641TBM24_CHK_FALSE_INNER_VALUE[0] ;
         A706TBM24_REQUIRED_INPUT_FLG = P005725_A706TBM24_REQUIRED_INPUT_FLG[0] ;
         n706TBM24_REQUIRED_INPUT_FLG = P005725_n706TBM24_REQUIRED_INPUT_FLG[0] ;
         A707TBM24_MIN_VALUE = P005725_A707TBM24_MIN_VALUE[0] ;
         n707TBM24_MIN_VALUE = P005725_n707TBM24_MIN_VALUE[0] ;
         A708TBM24_MAX_VALUE = P005725_A708TBM24_MAX_VALUE[0] ;
         n708TBM24_MAX_VALUE = P005725_n708TBM24_MAX_VALUE[0] ;
         A543TBM24_ORDER = P005725_A543TBM24_ORDER[0] ;
         n543TBM24_ORDER = P005725_n543TBM24_ORDER[0] ;
         A544TBM24_DEL_FLG = P005725_A544TBM24_DEL_FLG[0] ;
         n544TBM24_DEL_FLG = P005725_n544TBM24_DEL_FLG[0] ;
         A545TBM24_CRT_DATETIME = P005725_A545TBM24_CRT_DATETIME[0] ;
         n545TBM24_CRT_DATETIME = P005725_n545TBM24_CRT_DATETIME[0] ;
         A546TBM24_CRT_USER_ID = P005725_A546TBM24_CRT_USER_ID[0] ;
         n546TBM24_CRT_USER_ID = P005725_n546TBM24_CRT_USER_ID[0] ;
         A547TBM24_CRT_PROG_NM = P005725_A547TBM24_CRT_PROG_NM[0] ;
         n547TBM24_CRT_PROG_NM = P005725_n547TBM24_CRT_PROG_NM[0] ;
         A548TBM24_UPD_DATETIME = P005725_A548TBM24_UPD_DATETIME[0] ;
         n548TBM24_UPD_DATETIME = P005725_n548TBM24_UPD_DATETIME[0] ;
         A549TBM24_UPD_USER_ID = P005725_A549TBM24_UPD_USER_ID[0] ;
         n549TBM24_UPD_USER_ID = P005725_n549TBM24_UPD_USER_ID[0] ;
         A550TBM24_UPD_PROG_NM = P005725_A550TBM24_UPD_PROG_NM[0] ;
         n550TBM24_UPD_PROG_NM = P005725_n550TBM24_UPD_PROG_NM[0] ;
         A551TBM24_UPD_CNT = P005725_A551TBM24_UPD_CNT[0] ;
         n551TBM24_UPD_CNT = P005725_n551TBM24_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A64TBM24_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A65TBM24_DOM_CD, 0);
         AV12W_ITEMS.add(A66TBM24_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A702TBM24_DOM_ITM_GRP_OID, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A703TBM24_DOM_ITM_GRP_ATTR_SEQ, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A704TBM24_DOM_ITM_GRP_ROWNO, 10, 0)), 0);
         AV12W_ITEMS.add(A705TBM24_CRF_ITEM_NM, 0);
         AV12W_ITEMS.add(A67TBM24_CRF_ITEM_DIV, 0);
         AV12W_ITEMS.add(A635TBM24_IDENTIFICATION_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A636TBM24_TEXT_MAXLENGTH, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A637TBM24_TEXT_MAXROWS, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A638TBM24_DECIMAL_DIGITS, 10, 0)), 0);
         AV12W_ITEMS.add(A639TBM24_TEXT, 0);
         AV12W_ITEMS.add(A640TBM24_FIXED_VALUE, 0);
         AV12W_ITEMS.add(A641TBM24_CHK_FALSE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A706TBM24_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A707TBM24_MIN_VALUE, 0);
         AV12W_ITEMS.add(A708TBM24_MAX_VALUE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A543TBM24_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A544TBM24_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM24_MAP_ITEM", AV12W_ITEMS, A545TBM24_CRT_DATETIME, A546TBM24_CRT_USER_ID, A547TBM24_CRT_PROG_NM, A548TBM24_UPD_DATETIME, A549TBM24_UPD_USER_ID, A550TBM24_UPD_PROG_NM, A551TBM24_UPD_CNT) ;
         /* Using cursor P005726 */
         pr_default.execute(24, new Object[] {new Long(A64TBM24_STUDY_ID), A65TBM24_DOM_CD, A66TBM24_DOM_VAR_NM, A67TBM24_CRF_ITEM_DIV});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM24_MAP_ITEM") ;
         pr_default.readNext(23);
      }
      pr_default.close(23);
      /* Using cursor P005727 */
      pr_default.execute(25, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(25) != 101) )
      {
         A107TBM23_STUDY_ID = P005727_A107TBM23_STUDY_ID[0] ;
         A108TBM23_USER_ID = P005727_A108TBM23_USER_ID[0] ;
         A109TBM23_STYDY_AUTH_CD = P005727_A109TBM23_STYDY_AUTH_CD[0] ;
         A385TBM23_DEL_FLG = P005727_A385TBM23_DEL_FLG[0] ;
         n385TBM23_DEL_FLG = P005727_n385TBM23_DEL_FLG[0] ;
         A386TBM23_CRT_DATETIME = P005727_A386TBM23_CRT_DATETIME[0] ;
         n386TBM23_CRT_DATETIME = P005727_n386TBM23_CRT_DATETIME[0] ;
         A387TBM23_CRT_USER_ID = P005727_A387TBM23_CRT_USER_ID[0] ;
         n387TBM23_CRT_USER_ID = P005727_n387TBM23_CRT_USER_ID[0] ;
         A388TBM23_CRT_PROG_NM = P005727_A388TBM23_CRT_PROG_NM[0] ;
         n388TBM23_CRT_PROG_NM = P005727_n388TBM23_CRT_PROG_NM[0] ;
         A389TBM23_UPD_DATETIME = P005727_A389TBM23_UPD_DATETIME[0] ;
         n389TBM23_UPD_DATETIME = P005727_n389TBM23_UPD_DATETIME[0] ;
         A390TBM23_UPD_USER_ID = P005727_A390TBM23_UPD_USER_ID[0] ;
         n390TBM23_UPD_USER_ID = P005727_n390TBM23_UPD_USER_ID[0] ;
         A391TBM23_UPD_PROG_NM = P005727_A391TBM23_UPD_PROG_NM[0] ;
         n391TBM23_UPD_PROG_NM = P005727_n391TBM23_UPD_PROG_NM[0] ;
         A392TBM23_UPD_CNT = P005727_A392TBM23_UPD_CNT[0] ;
         n392TBM23_UPD_CNT = P005727_n392TBM23_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A107TBM23_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A108TBM23_USER_ID, 0);
         AV12W_ITEMS.add(A109TBM23_STYDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A385TBM23_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM23_STUDY_STAFF", AV12W_ITEMS, A386TBM23_CRT_DATETIME, A387TBM23_CRT_USER_ID, A388TBM23_CRT_PROG_NM, A389TBM23_UPD_DATETIME, A390TBM23_UPD_USER_ID, A391TBM23_UPD_PROG_NM, A392TBM23_UPD_CNT) ;
         /* Using cursor P005728 */
         pr_default.execute(26, new Object[] {new Long(A107TBM23_STUDY_ID), A108TBM23_USER_ID, A109TBM23_STYDY_AUTH_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM23_STUDY_STAFF") ;
         pr_default.readNext(25);
      }
      pr_default.close(25);
      /* Using cursor P005729 */
      pr_default.execute(27, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(27) != 101) )
      {
         A17TBM22_STUDY_ID = P005729_A17TBM22_STUDY_ID[0] ;
         A18TBM22_SITE_ID = P005729_A18TBM22_SITE_ID[0] ;
         A377TBM22_DEL_FLG = P005729_A377TBM22_DEL_FLG[0] ;
         n377TBM22_DEL_FLG = P005729_n377TBM22_DEL_FLG[0] ;
         A378TBM22_CRT_DATETIME = P005729_A378TBM22_CRT_DATETIME[0] ;
         n378TBM22_CRT_DATETIME = P005729_n378TBM22_CRT_DATETIME[0] ;
         A379TBM22_CRT_USER_ID = P005729_A379TBM22_CRT_USER_ID[0] ;
         n379TBM22_CRT_USER_ID = P005729_n379TBM22_CRT_USER_ID[0] ;
         A380TBM22_CRT_PROG_NM = P005729_A380TBM22_CRT_PROG_NM[0] ;
         n380TBM22_CRT_PROG_NM = P005729_n380TBM22_CRT_PROG_NM[0] ;
         A381TBM22_UPD_DATETIME = P005729_A381TBM22_UPD_DATETIME[0] ;
         n381TBM22_UPD_DATETIME = P005729_n381TBM22_UPD_DATETIME[0] ;
         A382TBM22_UPD_USER_ID = P005729_A382TBM22_UPD_USER_ID[0] ;
         n382TBM22_UPD_USER_ID = P005729_n382TBM22_UPD_USER_ID[0] ;
         A383TBM22_UPD_PROG_NM = P005729_A383TBM22_UPD_PROG_NM[0] ;
         n383TBM22_UPD_PROG_NM = P005729_n383TBM22_UPD_PROG_NM[0] ;
         A384TBM22_UPD_CNT = P005729_A384TBM22_UPD_CNT[0] ;
         n384TBM22_UPD_CNT = P005729_n384TBM22_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A17TBM22_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A18TBM22_SITE_ID, 0);
         AV12W_ITEMS.add(A377TBM22_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM22_STUDY_SITE", AV12W_ITEMS, A378TBM22_CRT_DATETIME, A379TBM22_CRT_USER_ID, A380TBM22_CRT_PROG_NM, A381TBM22_UPD_DATETIME, A382TBM22_UPD_USER_ID, A383TBM22_UPD_PROG_NM, A384TBM22_UPD_CNT) ;
         /* Using cursor P005730 */
         pr_default.execute(28, new Object[] {new Long(A17TBM22_STUDY_ID), A18TBM22_SITE_ID});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM22_STUDY_SITE") ;
         pr_default.readNext(27);
      }
      pr_default.close(27);
      /* Using cursor P005731 */
      pr_default.execute(29, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(29) != 101) )
      {
         A25TBM26_STUDY_ID = P005731_A25TBM26_STUDY_ID[0] ;
         A26TBM26_LIST_CD = P005731_A26TBM26_LIST_CD[0] ;
         A27TBM26_LIST_ITEM_NO = P005731_A27TBM26_LIST_ITEM_NO[0] ;
         A561TBM26_LIST_ITEM_NAME = P005731_A561TBM26_LIST_ITEM_NAME[0] ;
         n561TBM26_LIST_ITEM_NAME = P005731_n561TBM26_LIST_ITEM_NAME[0] ;
         A562TBM26_INNER_VALUE = P005731_A562TBM26_INNER_VALUE[0] ;
         n562TBM26_INNER_VALUE = P005731_n562TBM26_INNER_VALUE[0] ;
         A563TBM26_DEL_FLG = P005731_A563TBM26_DEL_FLG[0] ;
         n563TBM26_DEL_FLG = P005731_n563TBM26_DEL_FLG[0] ;
         A564TBM26_CRT_DATETIME = P005731_A564TBM26_CRT_DATETIME[0] ;
         n564TBM26_CRT_DATETIME = P005731_n564TBM26_CRT_DATETIME[0] ;
         A565TBM26_CRT_USER_ID = P005731_A565TBM26_CRT_USER_ID[0] ;
         n565TBM26_CRT_USER_ID = P005731_n565TBM26_CRT_USER_ID[0] ;
         A566TBM26_CRT_PROG_NM = P005731_A566TBM26_CRT_PROG_NM[0] ;
         n566TBM26_CRT_PROG_NM = P005731_n566TBM26_CRT_PROG_NM[0] ;
         A567TBM26_UPD_DATETIME = P005731_A567TBM26_UPD_DATETIME[0] ;
         n567TBM26_UPD_DATETIME = P005731_n567TBM26_UPD_DATETIME[0] ;
         A568TBM26_UPD_USER_ID = P005731_A568TBM26_UPD_USER_ID[0] ;
         n568TBM26_UPD_USER_ID = P005731_n568TBM26_UPD_USER_ID[0] ;
         A569TBM26_UPD_PROG_NM = P005731_A569TBM26_UPD_PROG_NM[0] ;
         n569TBM26_UPD_PROG_NM = P005731_n569TBM26_UPD_PROG_NM[0] ;
         A570TBM26_UPD_CNT = P005731_A570TBM26_UPD_CNT[0] ;
         n570TBM26_UPD_CNT = P005731_n570TBM26_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A25TBM26_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A26TBM26_LIST_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A27TBM26_LIST_ITEM_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A561TBM26_LIST_ITEM_NAME, 0);
         AV12W_ITEMS.add(A562TBM26_INNER_VALUE, 0);
         AV12W_ITEMS.add(A563TBM26_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM26_SEL_LIST_ITEM", AV12W_ITEMS, A564TBM26_CRT_DATETIME, A565TBM26_CRT_USER_ID, A566TBM26_CRT_PROG_NM, A567TBM26_UPD_DATETIME, A568TBM26_UPD_USER_ID, A569TBM26_UPD_PROG_NM, A570TBM26_UPD_CNT) ;
         /* Using cursor P005732 */
         pr_default.execute(30, new Object[] {new Long(A25TBM26_STUDY_ID), A26TBM26_LIST_CD, new Short(A27TBM26_LIST_ITEM_NO)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM26_SEL_LIST_ITEM") ;
         pr_default.readNext(29);
      }
      pr_default.close(29);
      /* Using cursor P005733 */
      pr_default.execute(31, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(31) != 101) )
      {
         A23TBM25_STUDY_ID = P005733_A23TBM25_STUDY_ID[0] ;
         A24TBM25_LIST_CD = P005733_A24TBM25_LIST_CD[0] ;
         A552TBM25_LIST_NM = P005733_A552TBM25_LIST_NM[0] ;
         n552TBM25_LIST_NM = P005733_n552TBM25_LIST_NM[0] ;
         A553TBM25_DEL_FLG = P005733_A553TBM25_DEL_FLG[0] ;
         n553TBM25_DEL_FLG = P005733_n553TBM25_DEL_FLG[0] ;
         A554TBM25_CRT_DATETIME = P005733_A554TBM25_CRT_DATETIME[0] ;
         n554TBM25_CRT_DATETIME = P005733_n554TBM25_CRT_DATETIME[0] ;
         A555TBM25_CRT_USER_ID = P005733_A555TBM25_CRT_USER_ID[0] ;
         n555TBM25_CRT_USER_ID = P005733_n555TBM25_CRT_USER_ID[0] ;
         A556TBM25_CRT_PROG_NM = P005733_A556TBM25_CRT_PROG_NM[0] ;
         n556TBM25_CRT_PROG_NM = P005733_n556TBM25_CRT_PROG_NM[0] ;
         A557TBM25_UPD_DATETIME = P005733_A557TBM25_UPD_DATETIME[0] ;
         n557TBM25_UPD_DATETIME = P005733_n557TBM25_UPD_DATETIME[0] ;
         A558TBM25_UPD_USER_ID = P005733_A558TBM25_UPD_USER_ID[0] ;
         n558TBM25_UPD_USER_ID = P005733_n558TBM25_UPD_USER_ID[0] ;
         A559TBM25_UPD_PROG_NM = P005733_A559TBM25_UPD_PROG_NM[0] ;
         n559TBM25_UPD_PROG_NM = P005733_n559TBM25_UPD_PROG_NM[0] ;
         A560TBM25_UPD_CNT = P005733_A560TBM25_UPD_CNT[0] ;
         n560TBM25_UPD_CNT = P005733_n560TBM25_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A23TBM25_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A24TBM25_LIST_CD, 0);
         AV12W_ITEMS.add(A552TBM25_LIST_NM, 0);
         AV12W_ITEMS.add(A553TBM25_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM25_SEL_LIST", AV12W_ITEMS, A554TBM25_CRT_DATETIME, A555TBM25_CRT_USER_ID, A556TBM25_CRT_PROG_NM, A557TBM25_UPD_DATETIME, A558TBM25_UPD_USER_ID, A559TBM25_UPD_PROG_NM, A560TBM25_UPD_CNT) ;
         /* Using cursor P005734 */
         pr_default.execute(32, new Object[] {new Long(A23TBM25_STUDY_ID), A24TBM25_LIST_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM25_SEL_LIST") ;
         pr_default.readNext(31);
      }
      pr_default.close(31);
      /* Using cursor P005735 */
      pr_default.execute(33, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(33) != 101) )
      {
         A35TBM36_STUDY_ID = P005735_A35TBM36_STUDY_ID[0] ;
         A36TBM36_CRF_ID = P005735_A36TBM36_CRF_ID[0] ;
         A37TBM36_COND_NO = P005735_A37TBM36_COND_NO[0] ;
         A38TBM36_SELECT_CRF_ID = P005735_A38TBM36_SELECT_CRF_ID[0] ;
         A589TBM36_DEL_FLG = P005735_A589TBM36_DEL_FLG[0] ;
         n589TBM36_DEL_FLG = P005735_n589TBM36_DEL_FLG[0] ;
         A590TBM36_CRT_DATETIME = P005735_A590TBM36_CRT_DATETIME[0] ;
         n590TBM36_CRT_DATETIME = P005735_n590TBM36_CRT_DATETIME[0] ;
         A591TBM36_CRT_USER_ID = P005735_A591TBM36_CRT_USER_ID[0] ;
         n591TBM36_CRT_USER_ID = P005735_n591TBM36_CRT_USER_ID[0] ;
         A592TBM36_CRT_PROG_NM = P005735_A592TBM36_CRT_PROG_NM[0] ;
         n592TBM36_CRT_PROG_NM = P005735_n592TBM36_CRT_PROG_NM[0] ;
         A593TBM36_UPD_DATETIME = P005735_A593TBM36_UPD_DATETIME[0] ;
         n593TBM36_UPD_DATETIME = P005735_n593TBM36_UPD_DATETIME[0] ;
         A594TBM36_UPD_USER_ID = P005735_A594TBM36_UPD_USER_ID[0] ;
         n594TBM36_UPD_USER_ID = P005735_n594TBM36_UPD_USER_ID[0] ;
         A595TBM36_UPD_PROG_NM = P005735_A595TBM36_UPD_PROG_NM[0] ;
         n595TBM36_UPD_PROG_NM = P005735_n595TBM36_UPD_PROG_NM[0] ;
         A596TBM36_UPD_CNT = P005735_A596TBM36_UPD_CNT[0] ;
         n596TBM36_UPD_CNT = P005735_n596TBM36_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A35TBM36_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A36TBM36_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A37TBM36_COND_NO, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A38TBM36_SELECT_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A589TBM36_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM36_CRF_SELECT", AV12W_ITEMS, A590TBM36_CRT_DATETIME, A591TBM36_CRT_USER_ID, A592TBM36_CRT_PROG_NM, A593TBM36_UPD_DATETIME, A594TBM36_UPD_USER_ID, A595TBM36_UPD_PROG_NM, A596TBM36_UPD_CNT) ;
         /* Using cursor P005736 */
         pr_default.execute(34, new Object[] {new Long(A35TBM36_STUDY_ID), new Short(A36TBM36_CRF_ID), new Short(A37TBM36_COND_NO), new Short(A38TBM36_SELECT_CRF_ID)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM36_CRF_SELECT") ;
         pr_default.readNext(33);
      }
      pr_default.close(33);
      /* Using cursor P005737 */
      pr_default.execute(35, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(35) != 101) )
      {
         A76TBM33_STUDY_ID = P005737_A76TBM33_STUDY_ID[0] ;
         A77TBM33_CRF_ID = P005737_A77TBM33_CRF_ID[0] ;
         A78TBM33_COND_NO = P005737_A78TBM33_COND_NO[0] ;
         A502TBM33_COND_NM = P005737_A502TBM33_COND_NM[0] ;
         n502TBM33_COND_NM = P005737_n502TBM33_COND_NM[0] ;
         A414TBM33_EXPRESSION = P005737_A414TBM33_EXPRESSION[0] ;
         n414TBM33_EXPRESSION = P005737_n414TBM33_EXPRESSION[0] ;
         A503TBM33_COND_DIV = P005737_A503TBM33_COND_DIV[0] ;
         n503TBM33_COND_DIV = P005737_n503TBM33_COND_DIV[0] ;
         A504TBM33_CRF_ITEM_CD = P005737_A504TBM33_CRF_ITEM_CD[0] ;
         n504TBM33_CRF_ITEM_CD = P005737_n504TBM33_CRF_ITEM_CD[0] ;
         A415TBM33_PRIOR_NO = P005737_A415TBM33_PRIOR_NO[0] ;
         n415TBM33_PRIOR_NO = P005737_n415TBM33_PRIOR_NO[0] ;
         A505TBM33_ERR_DIV = P005737_A505TBM33_ERR_DIV[0] ;
         n505TBM33_ERR_DIV = P005737_n505TBM33_ERR_DIV[0] ;
         A506TBM33_ERR_MSG = P005737_A506TBM33_ERR_MSG[0] ;
         n506TBM33_ERR_MSG = P005737_n506TBM33_ERR_MSG[0] ;
         A646TBM33_ENABLED_FLG = P005737_A646TBM33_ENABLED_FLG[0] ;
         n646TBM33_ENABLED_FLG = P005737_n646TBM33_ENABLED_FLG[0] ;
         A696TBM33_REQUIRED_INPUT_FLG = P005737_A696TBM33_REQUIRED_INPUT_FLG[0] ;
         n696TBM33_REQUIRED_INPUT_FLG = P005737_n696TBM33_REQUIRED_INPUT_FLG[0] ;
         A697TBM33_NUMERIC_RANGE_FLG = P005737_A697TBM33_NUMERIC_RANGE_FLG[0] ;
         n697TBM33_NUMERIC_RANGE_FLG = P005737_n697TBM33_NUMERIC_RANGE_FLG[0] ;
         A416TBM33_DEL_FLG = P005737_A416TBM33_DEL_FLG[0] ;
         n416TBM33_DEL_FLG = P005737_n416TBM33_DEL_FLG[0] ;
         A417TBM33_CRT_DATETIME = P005737_A417TBM33_CRT_DATETIME[0] ;
         n417TBM33_CRT_DATETIME = P005737_n417TBM33_CRT_DATETIME[0] ;
         A418TBM33_CRT_USER_ID = P005737_A418TBM33_CRT_USER_ID[0] ;
         n418TBM33_CRT_USER_ID = P005737_n418TBM33_CRT_USER_ID[0] ;
         A419TBM33_CRT_PROG_NM = P005737_A419TBM33_CRT_PROG_NM[0] ;
         n419TBM33_CRT_PROG_NM = P005737_n419TBM33_CRT_PROG_NM[0] ;
         A420TBM33_UPD_DATETIME = P005737_A420TBM33_UPD_DATETIME[0] ;
         n420TBM33_UPD_DATETIME = P005737_n420TBM33_UPD_DATETIME[0] ;
         A421TBM33_UPD_USER_ID = P005737_A421TBM33_UPD_USER_ID[0] ;
         n421TBM33_UPD_USER_ID = P005737_n421TBM33_UPD_USER_ID[0] ;
         A422TBM33_UPD_PROG_NM = P005737_A422TBM33_UPD_PROG_NM[0] ;
         n422TBM33_UPD_PROG_NM = P005737_n422TBM33_UPD_PROG_NM[0] ;
         A423TBM33_UPD_CNT = P005737_A423TBM33_UPD_CNT[0] ;
         n423TBM33_UPD_CNT = P005737_n423TBM33_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A76TBM33_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A77TBM33_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A78TBM33_COND_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A502TBM33_COND_NM, 0);
         AV12W_ITEMS.add(A414TBM33_EXPRESSION, 0);
         AV12W_ITEMS.add(A503TBM33_COND_DIV, 0);
         AV12W_ITEMS.add(A504TBM33_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A415TBM33_PRIOR_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A505TBM33_ERR_DIV, 0);
         AV12W_ITEMS.add(A506TBM33_ERR_MSG, 0);
         AV12W_ITEMS.add(A646TBM33_ENABLED_FLG, 0);
         AV12W_ITEMS.add(A696TBM33_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A697TBM33_NUMERIC_RANGE_FLG, 0);
         AV12W_ITEMS.add(A416TBM33_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM33_CRF_COND", AV12W_ITEMS, A417TBM33_CRT_DATETIME, A418TBM33_CRT_USER_ID, A419TBM33_CRT_PROG_NM, A420TBM33_UPD_DATETIME, A421TBM33_UPD_USER_ID, A422TBM33_UPD_PROG_NM, A423TBM33_UPD_CNT) ;
         /* Using cursor P005738 */
         pr_default.execute(36, new Object[] {new Long(A76TBM33_STUDY_ID), new Short(A77TBM33_CRF_ID), new Short(A78TBM33_COND_NO)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM33_CRF_COND") ;
         pr_default.readNext(35);
      }
      pr_default.close(35);
      /* Using cursor P005739 */
      pr_default.execute(37, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(37) != 101) )
      {
         A70TBM32_STUDY_ID = P005739_A70TBM32_STUDY_ID[0] ;
         A71TBM32_CRF_ID = P005739_A71TBM32_CRF_ID[0] ;
         A72TBM32_CRF_ITEM_CD = P005739_A72TBM32_CRF_ITEM_CD[0] ;
         A405TBM32_CRF_ITEM_NM = P005739_A405TBM32_CRF_ITEM_NM[0] ;
         n405TBM32_CRF_ITEM_NM = P005739_n405TBM32_CRF_ITEM_NM[0] ;
         A74TBM32_CRF_ITEM_DIV = P005739_A74TBM32_CRF_ITEM_DIV[0] ;
         n74TBM32_CRF_ITEM_DIV = P005739_n74TBM32_CRF_ITEM_DIV[0] ;
         A73TBM32_CRF_ITEM_GRP_CD = P005739_A73TBM32_CRF_ITEM_GRP_CD[0] ;
         n73TBM32_CRF_ITEM_GRP_CD = P005739_n73TBM32_CRF_ITEM_GRP_CD[0] ;
         A507TBM32_CRF_ITEM_GRP_ORDER = P005739_A507TBM32_CRF_ITEM_GRP_ORDER[0] ;
         n507TBM32_CRF_ITEM_GRP_ORDER = P005739_n507TBM32_CRF_ITEM_GRP_ORDER[0] ;
         A508TBM32_LOCATION_X = P005739_A508TBM32_LOCATION_X[0] ;
         n508TBM32_LOCATION_X = P005739_n508TBM32_LOCATION_X[0] ;
         A509TBM32_LOCATION_Y = P005739_A509TBM32_LOCATION_Y[0] ;
         n509TBM32_LOCATION_Y = P005739_n509TBM32_LOCATION_Y[0] ;
         A510TBM32_LOCATION_X2 = P005739_A510TBM32_LOCATION_X2[0] ;
         n510TBM32_LOCATION_X2 = P005739_n510TBM32_LOCATION_X2[0] ;
         A511TBM32_LOCATION_Y2 = P005739_A511TBM32_LOCATION_Y2[0] ;
         n511TBM32_LOCATION_Y2 = P005739_n511TBM32_LOCATION_Y2[0] ;
         A512TBM32_TEXT_ALIGN_DIV = P005739_A512TBM32_TEXT_ALIGN_DIV[0] ;
         n512TBM32_TEXT_ALIGN_DIV = P005739_n512TBM32_TEXT_ALIGN_DIV[0] ;
         A516TBM32_TEXT_MAXROWS = P005739_A516TBM32_TEXT_MAXROWS[0] ;
         n516TBM32_TEXT_MAXROWS = P005739_n516TBM32_TEXT_MAXROWS[0] ;
         A517TBM32_TEXT_MAXLENGTH = P005739_A517TBM32_TEXT_MAXLENGTH[0] ;
         n517TBM32_TEXT_MAXLENGTH = P005739_n517TBM32_TEXT_MAXLENGTH[0] ;
         A518TBM32_DECIMAL_DIGITS = P005739_A518TBM32_DECIMAL_DIGITS[0] ;
         n518TBM32_DECIMAL_DIGITS = P005739_n518TBM32_DECIMAL_DIGITS[0] ;
         A522TBM32_CHK_TRUE_INNER_VALUE = P005739_A522TBM32_CHK_TRUE_INNER_VALUE[0] ;
         n522TBM32_CHK_TRUE_INNER_VALUE = P005739_n522TBM32_CHK_TRUE_INNER_VALUE[0] ;
         A523TBM32_CHK_FALSE_INNER_VALUE = P005739_A523TBM32_CHK_FALSE_INNER_VALUE[0] ;
         n523TBM32_CHK_FALSE_INNER_VALUE = P005739_n523TBM32_CHK_FALSE_INNER_VALUE[0] ;
         A527TBM32_FIXED_VALUE = P005739_A527TBM32_FIXED_VALUE[0] ;
         n527TBM32_FIXED_VALUE = P005739_n527TBM32_FIXED_VALUE[0] ;
         A525TBM32_LIST_CD = P005739_A525TBM32_LIST_CD[0] ;
         n525TBM32_LIST_CD = P005739_n525TBM32_LIST_CD[0] ;
         A526TBM32_IMAGE_CD = P005739_A526TBM32_IMAGE_CD[0] ;
         n526TBM32_IMAGE_CD = P005739_n526TBM32_IMAGE_CD[0] ;
         A524TBM32_TEXT = P005739_A524TBM32_TEXT[0] ;
         n524TBM32_TEXT = P005739_n524TBM32_TEXT[0] ;
         A513TBM32_FONT_SIZE = P005739_A513TBM32_FONT_SIZE[0] ;
         n513TBM32_FONT_SIZE = P005739_n513TBM32_FONT_SIZE[0] ;
         A514TBM32_FONT_UL_FLG = P005739_A514TBM32_FONT_UL_FLG[0] ;
         n514TBM32_FONT_UL_FLG = P005739_n514TBM32_FONT_UL_FLG[0] ;
         A515TBM32_FONT_COLOR_DIV = P005739_A515TBM32_FONT_COLOR_DIV[0] ;
         n515TBM32_FONT_COLOR_DIV = P005739_n515TBM32_FONT_COLOR_DIV[0] ;
         A521TBM32_LINE_SIZE_DIV = P005739_A521TBM32_LINE_SIZE_DIV[0] ;
         n521TBM32_LINE_SIZE_DIV = P005739_n521TBM32_LINE_SIZE_DIV[0] ;
         A689TBM32_LINE_COLOR_DIV = P005739_A689TBM32_LINE_COLOR_DIV[0] ;
         n689TBM32_LINE_COLOR_DIV = P005739_n689TBM32_LINE_COLOR_DIV[0] ;
         A519TBM32_LINE_START_POINT_DIV = P005739_A519TBM32_LINE_START_POINT_DIV[0] ;
         n519TBM32_LINE_START_POINT_DIV = P005739_n519TBM32_LINE_START_POINT_DIV[0] ;
         A520TBM32_LINE_END_POINT_DIV = P005739_A520TBM32_LINE_END_POINT_DIV[0] ;
         n520TBM32_LINE_END_POINT_DIV = P005739_n520TBM32_LINE_END_POINT_DIV[0] ;
         A690TBM32_LINE_ANGLE = P005739_A690TBM32_LINE_ANGLE[0] ;
         n690TBM32_LINE_ANGLE = P005739_n690TBM32_LINE_ANGLE[0] ;
         A644TBM32_AUTH_LVL_MIN = P005739_A644TBM32_AUTH_LVL_MIN[0] ;
         n644TBM32_AUTH_LVL_MIN = P005739_n644TBM32_AUTH_LVL_MIN[0] ;
         A645TBM32_ZORDER = P005739_A645TBM32_ZORDER[0] ;
         n645TBM32_ZORDER = P005739_n645TBM32_ZORDER[0] ;
         A691TBM32_TAB_ORDER = P005739_A691TBM32_TAB_ORDER[0] ;
         n691TBM32_TAB_ORDER = P005739_n691TBM32_TAB_ORDER[0] ;
         A692TBM32_TABSTOP_FLG = P005739_A692TBM32_TABSTOP_FLG[0] ;
         n692TBM32_TABSTOP_FLG = P005739_n692TBM32_TABSTOP_FLG[0] ;
         A693TBM32_REQUIRED_INPUT_FLG = P005739_A693TBM32_REQUIRED_INPUT_FLG[0] ;
         n693TBM32_REQUIRED_INPUT_FLG = P005739_n693TBM32_REQUIRED_INPUT_FLG[0] ;
         A694TBM32_MIN_VALUE = P005739_A694TBM32_MIN_VALUE[0] ;
         n694TBM32_MIN_VALUE = P005739_n694TBM32_MIN_VALUE[0] ;
         A695TBM32_MAX_VALUE = P005739_A695TBM32_MAX_VALUE[0] ;
         n695TBM32_MAX_VALUE = P005739_n695TBM32_MAX_VALUE[0] ;
         A406TBM32_CRF_ITEM_NOTE = P005739_A406TBM32_CRF_ITEM_NOTE[0] ;
         n406TBM32_CRF_ITEM_NOTE = P005739_n406TBM32_CRF_ITEM_NOTE[0] ;
         A774TBM32_REF_CRF_ID = P005739_A774TBM32_REF_CRF_ID[0] ;
         n774TBM32_REF_CRF_ID = P005739_n774TBM32_REF_CRF_ID[0] ;
         A775TBM32_REF_CRF_ITEM_CD = P005739_A775TBM32_REF_CRF_ITEM_CD[0] ;
         n775TBM32_REF_CRF_ITEM_CD = P005739_n775TBM32_REF_CRF_ITEM_CD[0] ;
         A75TBM32_DEL_FLG = P005739_A75TBM32_DEL_FLG[0] ;
         n75TBM32_DEL_FLG = P005739_n75TBM32_DEL_FLG[0] ;
         A407TBM32_CRT_DATETIME = P005739_A407TBM32_CRT_DATETIME[0] ;
         n407TBM32_CRT_DATETIME = P005739_n407TBM32_CRT_DATETIME[0] ;
         A408TBM32_CRT_USER_ID = P005739_A408TBM32_CRT_USER_ID[0] ;
         n408TBM32_CRT_USER_ID = P005739_n408TBM32_CRT_USER_ID[0] ;
         A409TBM32_CRT_PROG_NM = P005739_A409TBM32_CRT_PROG_NM[0] ;
         n409TBM32_CRT_PROG_NM = P005739_n409TBM32_CRT_PROG_NM[0] ;
         A410TBM32_UPD_DATETIME = P005739_A410TBM32_UPD_DATETIME[0] ;
         n410TBM32_UPD_DATETIME = P005739_n410TBM32_UPD_DATETIME[0] ;
         A411TBM32_UPD_USER_ID = P005739_A411TBM32_UPD_USER_ID[0] ;
         n411TBM32_UPD_USER_ID = P005739_n411TBM32_UPD_USER_ID[0] ;
         A412TBM32_UPD_PROG_NM = P005739_A412TBM32_UPD_PROG_NM[0] ;
         n412TBM32_UPD_PROG_NM = P005739_n412TBM32_UPD_PROG_NM[0] ;
         A413TBM32_UPD_CNT = P005739_A413TBM32_UPD_CNT[0] ;
         n413TBM32_UPD_CNT = P005739_n413TBM32_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A70TBM32_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A71TBM32_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A72TBM32_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A405TBM32_CRF_ITEM_NM, 0);
         AV12W_ITEMS.add(A74TBM32_CRF_ITEM_DIV, 0);
         AV12W_ITEMS.add(A73TBM32_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A507TBM32_CRF_ITEM_GRP_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A508TBM32_LOCATION_X, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A509TBM32_LOCATION_Y, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A510TBM32_LOCATION_X2, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A511TBM32_LOCATION_Y2, 10, 0)), 0);
         AV12W_ITEMS.add(A512TBM32_TEXT_ALIGN_DIV, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A516TBM32_TEXT_MAXROWS, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A517TBM32_TEXT_MAXLENGTH, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A518TBM32_DECIMAL_DIGITS, 10, 0)), 0);
         AV12W_ITEMS.add(A522TBM32_CHK_TRUE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A523TBM32_CHK_FALSE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A527TBM32_FIXED_VALUE, 0);
         AV12W_ITEMS.add(A525TBM32_LIST_CD, 0);
         AV12W_ITEMS.add(A526TBM32_IMAGE_CD, 0);
         AV12W_ITEMS.add(A524TBM32_TEXT, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A513TBM32_FONT_SIZE, 10, 0)), 0);
         AV12W_ITEMS.add(A514TBM32_FONT_UL_FLG, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A515TBM32_FONT_COLOR_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A521TBM32_LINE_SIZE_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A689TBM32_LINE_COLOR_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(A519TBM32_LINE_START_POINT_DIV, 0);
         AV12W_ITEMS.add(A520TBM32_LINE_END_POINT_DIV, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A690TBM32_LINE_ANGLE, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A644TBM32_AUTH_LVL_MIN, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A645TBM32_ZORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A691TBM32_TAB_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A692TBM32_TABSTOP_FLG, 0);
         AV12W_ITEMS.add(A693TBM32_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A694TBM32_MIN_VALUE, 0);
         AV12W_ITEMS.add(A695TBM32_MAX_VALUE, 0);
         AV12W_ITEMS.add(A406TBM32_CRF_ITEM_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A774TBM32_REF_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A775TBM32_REF_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A75TBM32_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM32_CRF_ITEM", AV12W_ITEMS, A407TBM32_CRT_DATETIME, A408TBM32_CRT_USER_ID, A409TBM32_CRT_PROG_NM, A410TBM32_UPD_DATETIME, A411TBM32_UPD_USER_ID, A412TBM32_UPD_PROG_NM, A413TBM32_UPD_CNT) ;
         /* Using cursor P005740 */
         pr_default.execute(38, new Object[] {new Long(A70TBM32_STUDY_ID), new Short(A71TBM32_CRF_ID), A72TBM32_CRF_ITEM_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM32_CRF_ITEM") ;
         pr_default.readNext(37);
      }
      pr_default.close(37);
      /* Using cursor P005741 */
      pr_default.execute(39, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(39) != 101) )
      {
         A28TBM34_STUDY_ID = P005741_A28TBM34_STUDY_ID[0] ;
         A29TBM34_CRF_ID = P005741_A29TBM34_CRF_ID[0] ;
         A30TBM34_STYDY_AUTH_CD = P005741_A30TBM34_STYDY_AUTH_CD[0] ;
         A571TBM34_DISPLAY_FLG = P005741_A571TBM34_DISPLAY_FLG[0] ;
         n571TBM34_DISPLAY_FLG = P005741_n571TBM34_DISPLAY_FLG[0] ;
         A572TBM34_DEL_FLG = P005741_A572TBM34_DEL_FLG[0] ;
         n572TBM34_DEL_FLG = P005741_n572TBM34_DEL_FLG[0] ;
         A573TBM34_CRT_DATETIME = P005741_A573TBM34_CRT_DATETIME[0] ;
         n573TBM34_CRT_DATETIME = P005741_n573TBM34_CRT_DATETIME[0] ;
         A574TBM34_CRT_USER_ID = P005741_A574TBM34_CRT_USER_ID[0] ;
         n574TBM34_CRT_USER_ID = P005741_n574TBM34_CRT_USER_ID[0] ;
         A575TBM34_CRT_PROG_NM = P005741_A575TBM34_CRT_PROG_NM[0] ;
         n575TBM34_CRT_PROG_NM = P005741_n575TBM34_CRT_PROG_NM[0] ;
         A576TBM34_UPD_DATETIME = P005741_A576TBM34_UPD_DATETIME[0] ;
         n576TBM34_UPD_DATETIME = P005741_n576TBM34_UPD_DATETIME[0] ;
         A577TBM34_UPD_USER_ID = P005741_A577TBM34_UPD_USER_ID[0] ;
         n577TBM34_UPD_USER_ID = P005741_n577TBM34_UPD_USER_ID[0] ;
         A578TBM34_UPD_PROG_NM = P005741_A578TBM34_UPD_PROG_NM[0] ;
         n578TBM34_UPD_PROG_NM = P005741_n578TBM34_UPD_PROG_NM[0] ;
         A579TBM34_UPD_CNT = P005741_A579TBM34_UPD_CNT[0] ;
         n579TBM34_UPD_CNT = P005741_n579TBM34_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A28TBM34_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A29TBM34_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A30TBM34_STYDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A571TBM34_DISPLAY_FLG, 0);
         AV12W_ITEMS.add(A572TBM34_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM34_CRF_AUTH", AV12W_ITEMS, A573TBM34_CRT_DATETIME, A574TBM34_CRT_USER_ID, A575TBM34_CRT_PROG_NM, A576TBM34_UPD_DATETIME, A577TBM34_UPD_USER_ID, A578TBM34_UPD_PROG_NM, A579TBM34_UPD_CNT) ;
         /* Using cursor P005742 */
         pr_default.execute(40, new Object[] {new Long(A28TBM34_STUDY_ID), new Short(A29TBM34_CRF_ID), A30TBM34_STYDY_AUTH_CD});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM34_CRF_AUTH") ;
         pr_default.readNext(39);
      }
      pr_default.close(39);
      /* Using cursor P005743 */
      pr_default.execute(41, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(41) != 101) )
      {
         A68TBM31_STUDY_ID = P005743_A68TBM31_STUDY_ID[0] ;
         A69TBM31_CRF_ID = P005743_A69TBM31_CRF_ID[0] ;
         A393TBM31_CRF_NM = P005743_A393TBM31_CRF_NM[0] ;
         n393TBM31_CRF_NM = P005743_n393TBM31_CRF_NM[0] ;
         A642TBM31_CRF_SNM = P005743_A642TBM31_CRF_SNM[0] ;
         n642TBM31_CRF_SNM = P005743_n642TBM31_CRF_SNM[0] ;
         A394TBM31_GRID_SIZE = P005743_A394TBM31_GRID_SIZE[0] ;
         n394TBM31_GRID_SIZE = P005743_n394TBM31_GRID_SIZE[0] ;
         A395TBM31_ORDER = P005743_A395TBM31_ORDER[0] ;
         n395TBM31_ORDER = P005743_n395TBM31_ORDER[0] ;
         A528TBM31_DEF_VISIT_NO = P005743_A528TBM31_DEF_VISIT_NO[0] ;
         n528TBM31_DEF_VISIT_NO = P005743_n528TBM31_DEF_VISIT_NO[0] ;
         A529TBM31_DEF_DOMAIN_CD = P005743_A529TBM31_DEF_DOMAIN_CD[0] ;
         n529TBM31_DEF_DOMAIN_CD = P005743_n529TBM31_DEF_DOMAIN_CD[0] ;
         A643TBM31_STATUS = P005743_A643TBM31_STATUS[0] ;
         n643TBM31_STATUS = P005743_n643TBM31_STATUS[0] ;
         A396TBM31_NOTE = P005743_A396TBM31_NOTE[0] ;
         n396TBM31_NOTE = P005743_n396TBM31_NOTE[0] ;
         A397TBM31_DEL_FLG = P005743_A397TBM31_DEL_FLG[0] ;
         n397TBM31_DEL_FLG = P005743_n397TBM31_DEL_FLG[0] ;
         A398TBM31_CRT_DATETIME = P005743_A398TBM31_CRT_DATETIME[0] ;
         n398TBM31_CRT_DATETIME = P005743_n398TBM31_CRT_DATETIME[0] ;
         A399TBM31_CRT_USER_ID = P005743_A399TBM31_CRT_USER_ID[0] ;
         n399TBM31_CRT_USER_ID = P005743_n399TBM31_CRT_USER_ID[0] ;
         A400TBM31_CRT_PROG_NM = P005743_A400TBM31_CRT_PROG_NM[0] ;
         n400TBM31_CRT_PROG_NM = P005743_n400TBM31_CRT_PROG_NM[0] ;
         A401TBM31_UPD_DATETIME = P005743_A401TBM31_UPD_DATETIME[0] ;
         n401TBM31_UPD_DATETIME = P005743_n401TBM31_UPD_DATETIME[0] ;
         A402TBM31_UPD_USER_ID = P005743_A402TBM31_UPD_USER_ID[0] ;
         n402TBM31_UPD_USER_ID = P005743_n402TBM31_UPD_USER_ID[0] ;
         A403TBM31_UPD_PROG_NM = P005743_A403TBM31_UPD_PROG_NM[0] ;
         n403TBM31_UPD_PROG_NM = P005743_n403TBM31_UPD_PROG_NM[0] ;
         A404TBM31_UPD_CNT = P005743_A404TBM31_UPD_CNT[0] ;
         n404TBM31_UPD_CNT = P005743_n404TBM31_UPD_CNT[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A68TBM31_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A69TBM31_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A393TBM31_CRF_NM, 0);
         AV12W_ITEMS.add(A642TBM31_CRF_SNM, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A394TBM31_GRID_SIZE, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A395TBM31_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A528TBM31_DEF_VISIT_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A529TBM31_DEF_DOMAIN_CD, 0);
         AV12W_ITEMS.add(A643TBM31_STATUS, 0);
         AV12W_ITEMS.add(A396TBM31_NOTE, 0);
         AV12W_ITEMS.add(A397TBM31_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM31_CRF", AV12W_ITEMS, A398TBM31_CRT_DATETIME, A399TBM31_CRT_USER_ID, A400TBM31_CRT_PROG_NM, A401TBM31_UPD_DATETIME, A402TBM31_UPD_USER_ID, A403TBM31_UPD_PROG_NM, A404TBM31_UPD_CNT) ;
         /* Using cursor P005744 */
         pr_default.execute(42, new Object[] {new Long(A68TBM31_STUDY_ID), new Short(A69TBM31_CRF_ID)});
         Application.getSmartCacheProvider(remoteHandle).setUpdated("TBM31_CRF") ;
         pr_default.readNext(41);
      }
      pr_default.close(41);
      AV9P_BC_STUDY.Delete();
      if ( AV9P_BC_STUDY.Fail() )
      {
         AV13W_RTN_CD = (short)(1) ;
         GXt_char1 = AV14W_RTN_MSG ;
         GXv_char2[0] = GXt_char1 ;
         new b803_pc01_get_bcmsg(remoteHandle, context).execute( AV9P_BC_STUDY.GetMessages(), (byte)(0), GXv_char2) ;
         b402_pc19_study_del.this.GXt_char1 = GXv_char2[0] ;
         AV14W_RTN_MSG = GXt_char1 ;
      }
      cleanup();
   }

   public void S111( )
   {
      /* 'SUB_INIT' Routine */
      GXActiveErrHndl = 1 ;
      GXv_SdtA_LOGIN_SDT3[0] = AV10W_A_LOGIN_SDT;
      GXv_char2[0] = AV11W_ERRCD ;
      new a401_pc01_login_check(remoteHandle, context).execute( GXv_SdtA_LOGIN_SDT3, GXv_char2) ;
      AV10W_A_LOGIN_SDT = GXv_SdtA_LOGIN_SDT3[0] ;
      b402_pc19_study_del.this.AV11W_ERRCD = GXv_char2[0] ;
      if ( GXutil.strcmp(AV11W_ERRCD, "0") != 0 )
      {
         GXKey = context.getSiteKey( ) ;
         GXEncryptionTmp = "a105_wp01_error"+GXutil.URLEncode(GXutil.rtrim("1")) ;
         httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
         httpContext.wjLocDisableFrm = (byte)(1) ;
      }
   }

   public void S121( )
   {
      /* 'SUB_ERROR' Routine */
      Application.rollback(context, remoteHandle, "DEFAULT", "b402_pc19_study_del");
      new a804_pc01_syslog(remoteHandle, context).execute( AV25Pgmname, "ERR", GXutil.trim( GXutil.str( context.globals.Gx_dbe, 10, 0))+":"+context.globals.Gx_dbt) ;
      GXKey = context.getSiteKey( ) ;
      GXEncryptionTmp = "a105_wp01_error"+GXutil.URLEncode(GXutil.rtrim("9")) ;
      httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
      httpContext.wjLocDisableFrm = (byte)(1) ;
   }

   protected void cleanup( )
   {
      this.aP1[0] = b402_pc19_study_del.this.AV13W_RTN_CD;
      this.aP2[0] = b402_pc19_study_del.this.AV14W_RTN_MSG;
      CloseOpenCursors();
      exitApplication();
   }

   protected void CloseOpenCursors( )
   {
   }

   /* Aggregate/select formulas */
   /* Error handler code */
   public void handleError( )
   {
      if ( context.globals.getErr( ) != 0 )
      {
         Gx_err = context.globals.getErr( ) ;
         Gx_emsg = context.globals.getErrMsg( ) ;
         switch ( GXActiveErrHndl )
         {
               case 1 :
                  /* Execute user subroutine: S121 */
                  S121 ();
                  if ( returnInSub )
                  {
                     returnInSub = true;
                     cleanup();
                     if (true) return;
                  }
                  break;
         }
      }
   }

   public void initialize( )
   {
      AV14W_RTN_MSG = "" ;
      AV8C_APP_ID = "" ;
      scmdbuf = "" ;
      P00579_A31TBM35_STUDY_ID = new long[1] ;
      P00579_A32TBM35_CRF_ID = new short[1] ;
      P00579_A33TBM35_CRF_ITEM_CD = new String[] {""} ;
      P00579_A34TBM35_STUDY_AUTH_CD = new String[] {""} ;
      P00579_A580TBM35_DISPLAY_FLG = new String[] {""} ;
      P00579_n580TBM35_DISPLAY_FLG = new boolean[] {false} ;
      P00579_A581TBM35_DEL_FLG = new String[] {""} ;
      P00579_n581TBM35_DEL_FLG = new boolean[] {false} ;
      P00579_A582TBM35_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P00579_n582TBM35_CRT_DATETIME = new boolean[] {false} ;
      P00579_A583TBM35_CRT_USER_ID = new String[] {""} ;
      P00579_n583TBM35_CRT_USER_ID = new boolean[] {false} ;
      P00579_A584TBM35_CRT_PROG_NM = new String[] {""} ;
      P00579_n584TBM35_CRT_PROG_NM = new boolean[] {false} ;
      P00579_A585TBM35_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P00579_n585TBM35_UPD_DATETIME = new boolean[] {false} ;
      P00579_A586TBM35_UPD_USER_ID = new String[] {""} ;
      P00579_n586TBM35_UPD_USER_ID = new boolean[] {false} ;
      P00579_A587TBM35_UPD_PROG_NM = new String[] {""} ;
      P00579_n587TBM35_UPD_PROG_NM = new boolean[] {false} ;
      P00579_A588TBM35_UPD_CNT = new long[1] ;
      P00579_n588TBM35_UPD_CNT = new boolean[] {false} ;
      A33TBM35_CRF_ITEM_CD = "" ;
      A34TBM35_STUDY_AUTH_CD = "" ;
      A580TBM35_DISPLAY_FLG = "" ;
      A581TBM35_DEL_FLG = "" ;
      A582TBM35_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A583TBM35_CRT_USER_ID = "" ;
      A584TBM35_CRT_PROG_NM = "" ;
      A585TBM35_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A586TBM35_UPD_USER_ID = "" ;
      A587TBM35_UPD_PROG_NM = "" ;
      AV12W_ITEMS = new GxObjectCollection(String.class, "internal", "");
      AV25Pgmname = "" ;
      P005711_A19TBM41_STUDY_ID = new long[1] ;
      P005711_A20TBM41_CRF_ID = new short[1] ;
      P005711_A21TBM41_CRF_ITEM_GRP_DIV = new String[] {""} ;
      P005711_A22TBM41_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005711_A424TBM41_NCM_METADATA_ID = new String[] {""} ;
      P005711_n424TBM41_NCM_METADATA_ID = new boolean[] {false} ;
      P005711_A425TBM41_DEL_FLG = new String[] {""} ;
      P005711_n425TBM41_DEL_FLG = new boolean[] {false} ;
      P005711_A426TBM41_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005711_n426TBM41_CRT_DATETIME = new boolean[] {false} ;
      P005711_A427TBM41_CRT_USER_ID = new String[] {""} ;
      P005711_n427TBM41_CRT_USER_ID = new boolean[] {false} ;
      P005711_A428TBM41_CRT_PROG_NM = new String[] {""} ;
      P005711_n428TBM41_CRT_PROG_NM = new boolean[] {false} ;
      P005711_A429TBM41_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005711_n429TBM41_UPD_DATETIME = new boolean[] {false} ;
      P005711_A430TBM41_UPD_USER_ID = new String[] {""} ;
      P005711_n430TBM41_UPD_USER_ID = new boolean[] {false} ;
      P005711_A431TBM41_UPD_PROG_NM = new String[] {""} ;
      P005711_n431TBM41_UPD_PROG_NM = new boolean[] {false} ;
      P005711_A432TBM41_UPD_CNT = new long[1] ;
      P005711_n432TBM41_UPD_CNT = new boolean[] {false} ;
      A21TBM41_CRF_ITEM_GRP_DIV = "" ;
      A22TBM41_CRF_ITEM_GRP_CD = "" ;
      A424TBM41_NCM_METADATA_ID = "" ;
      A425TBM41_DEL_FLG = "" ;
      A426TBM41_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A427TBM41_CRT_USER_ID = "" ;
      A428TBM41_CRT_PROG_NM = "" ;
      A429TBM41_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A430TBM41_UPD_USER_ID = "" ;
      A431TBM41_UPD_PROG_NM = "" ;
      P005713_A200TBM43_STUDY_ID = new long[1] ;
      P005713_A201TBM43_DOM_CD = new String[] {""} ;
      P005713_A202TBM43_DOM_VAR_NM = new String[] {""} ;
      P005713_A910TBM43_VAR_DESC = new String[] {""} ;
      P005713_n910TBM43_VAR_DESC = new boolean[] {false} ;
      P005713_A911TBM43_SDTM_FLG = new String[] {""} ;
      P005713_n911TBM43_SDTM_FLG = new boolean[] {false} ;
      P005713_A912TBM43_CDASH_FLG = new String[] {""} ;
      P005713_n912TBM43_CDASH_FLG = new boolean[] {false} ;
      P005713_A913TBM43_INPUT_TYPE_DIV = new String[] {""} ;
      P005713_n913TBM43_INPUT_TYPE_DIV = new boolean[] {false} ;
      P005713_A914TBM43_REQUIRED_FLG = new String[] {""} ;
      P005713_n914TBM43_REQUIRED_FLG = new boolean[] {false} ;
      P005713_A915TBM43_SAS_FIELD_NM = new String[] {""} ;
      P005713_n915TBM43_SAS_FIELD_NM = new boolean[] {false} ;
      P005713_A916TBM43_ODM_DATA_TYPE = new String[] {""} ;
      P005713_n916TBM43_ODM_DATA_TYPE = new boolean[] {false} ;
      P005713_A917TBM43_NOTE = new String[] {""} ;
      P005713_n917TBM43_NOTE = new boolean[] {false} ;
      P005713_A918TBM43_ORDER = new int[1] ;
      P005713_n918TBM43_ORDER = new boolean[] {false} ;
      P005713_A919TBM43_DEL_FLG = new String[] {""} ;
      P005713_n919TBM43_DEL_FLG = new boolean[] {false} ;
      P005713_A920TBM43_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005713_n920TBM43_CRT_DATETIME = new boolean[] {false} ;
      P005713_A921TBM43_CRT_USER_ID = new String[] {""} ;
      P005713_n921TBM43_CRT_USER_ID = new boolean[] {false} ;
      P005713_A922TBM43_CRT_PROG_NM = new String[] {""} ;
      P005713_n922TBM43_CRT_PROG_NM = new boolean[] {false} ;
      P005713_A923TBM43_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005713_n923TBM43_UPD_DATETIME = new boolean[] {false} ;
      P005713_A924TBM43_UPD_USER_ID = new String[] {""} ;
      P005713_n924TBM43_UPD_USER_ID = new boolean[] {false} ;
      P005713_A925TBM43_UPD_PROG_NM = new String[] {""} ;
      P005713_n925TBM43_UPD_PROG_NM = new boolean[] {false} ;
      P005713_A926TBM43_UPD_CNT = new long[1] ;
      P005713_n926TBM43_UPD_CNT = new boolean[] {false} ;
      A201TBM43_DOM_CD = "" ;
      A202TBM43_DOM_VAR_NM = "" ;
      A910TBM43_VAR_DESC = "" ;
      A911TBM43_SDTM_FLG = "" ;
      A912TBM43_CDASH_FLG = "" ;
      A913TBM43_INPUT_TYPE_DIV = "" ;
      A914TBM43_REQUIRED_FLG = "" ;
      A915TBM43_SAS_FIELD_NM = "" ;
      A916TBM43_ODM_DATA_TYPE = "" ;
      A917TBM43_NOTE = "" ;
      A919TBM43_DEL_FLG = "" ;
      A920TBM43_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A921TBM43_CRT_USER_ID = "" ;
      A922TBM43_CRT_PROG_NM = "" ;
      A923TBM43_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A924TBM43_UPD_USER_ID = "" ;
      A925TBM43_UPD_PROG_NM = "" ;
      P005715_A203TBM42_STUDY_ID = new long[1] ;
      P005715_A204TBM42_DOM_CD = new String[] {""} ;
      P005715_A905TBM42_DOM_ENM = new String[] {""} ;
      P005715_n905TBM42_DOM_ENM = new boolean[] {false} ;
      P005715_A906TBM42_DOM_JNM = new String[] {""} ;
      P005715_n906TBM42_DOM_JNM = new boolean[] {false} ;
      P005715_A907TBM42_DOM_GRP_NM = new String[] {""} ;
      P005715_n907TBM42_DOM_GRP_NM = new boolean[] {false} ;
      P005715_A908TBM42_NOTE = new String[] {""} ;
      P005715_n908TBM42_NOTE = new boolean[] {false} ;
      P005715_A909TBM42_ORDER = new int[1] ;
      P005715_n909TBM42_ORDER = new boolean[] {false} ;
      P005715_A893TBM42_DEL_FLG = new String[] {""} ;
      P005715_n893TBM42_DEL_FLG = new boolean[] {false} ;
      P005715_A894TBM42_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005715_n894TBM42_CRT_DATETIME = new boolean[] {false} ;
      P005715_A895TBM42_CRT_USER_ID = new String[] {""} ;
      P005715_n895TBM42_CRT_USER_ID = new boolean[] {false} ;
      P005715_A896TBM42_CRT_PROG_NM = new String[] {""} ;
      P005715_n896TBM42_CRT_PROG_NM = new boolean[] {false} ;
      P005715_A897TBM42_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005715_n897TBM42_UPD_DATETIME = new boolean[] {false} ;
      P005715_A898TBM42_UPD_USER_ID = new String[] {""} ;
      P005715_n898TBM42_UPD_USER_ID = new boolean[] {false} ;
      P005715_A899TBM42_UPD_PROG_NM = new String[] {""} ;
      P005715_n899TBM42_UPD_PROG_NM = new boolean[] {false} ;
      P005715_A900TBM42_UPD_CNT = new long[1] ;
      P005715_n900TBM42_UPD_CNT = new boolean[] {false} ;
      A204TBM42_DOM_CD = "" ;
      A905TBM42_DOM_ENM = "" ;
      A906TBM42_DOM_JNM = "" ;
      A907TBM42_DOM_GRP_NM = "" ;
      A908TBM42_NOTE = "" ;
      A893TBM42_DEL_FLG = "" ;
      A894TBM42_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A895TBM42_CRT_USER_ID = "" ;
      A896TBM42_CRT_PROG_NM = "" ;
      A897TBM42_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A898TBM42_UPD_USER_ID = "" ;
      A899TBM42_UPD_PROG_NM = "" ;
      P005717_A945TBM44_STUDY_ID = new long[1] ;
      P005717_A946TBM44_CRF_ID = new short[1] ;
      P005717_A947TBM44_CRF_EDA_NO = new byte[1] ;
      P005717_A948TBM44_VISIT_NO = new int[1] ;
      P005717_n948TBM44_VISIT_NO = new boolean[] {false} ;
      P005717_A949TBM44_DEL_FLG = new String[] {""} ;
      P005717_n949TBM44_DEL_FLG = new boolean[] {false} ;
      P005717_A950TBM44_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005717_n950TBM44_CRT_DATETIME = new boolean[] {false} ;
      P005717_A951TBM44_CRT_USER_ID = new String[] {""} ;
      P005717_n951TBM44_CRT_USER_ID = new boolean[] {false} ;
      P005717_A952TBM44_CRT_PROG_NM = new String[] {""} ;
      P005717_n952TBM44_CRT_PROG_NM = new boolean[] {false} ;
      P005717_A953TBM44_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005717_n953TBM44_UPD_DATETIME = new boolean[] {false} ;
      P005717_A954TBM44_UPD_USER_ID = new String[] {""} ;
      P005717_n954TBM44_UPD_USER_ID = new boolean[] {false} ;
      P005717_A955TBM44_UPD_PROG_NM = new String[] {""} ;
      P005717_n955TBM44_UPD_PROG_NM = new boolean[] {false} ;
      P005717_A956TBM44_UPD_CNT = new long[1] ;
      P005717_n956TBM44_UPD_CNT = new boolean[] {false} ;
      A949TBM44_DEL_FLG = "" ;
      A950TBM44_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A951TBM44_CRT_USER_ID = "" ;
      A952TBM44_CRT_PROG_NM = "" ;
      A953TBM44_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A954TBM44_UPD_USER_ID = "" ;
      A955TBM44_UPD_PROG_NM = "" ;
      P005719_A977TBM45_STUDY_ID = new long[1] ;
      P005719_A978TBM45_FILTER_NO = new short[1] ;
      P005719_A980TBM45_FILETR_NM = new String[] {""} ;
      P005719_n980TBM45_FILETR_NM = new boolean[] {false} ;
      P005719_A981TBM45_IN_CRF_ID = new String[] {""} ;
      P005719_n981TBM45_IN_CRF_ID = new boolean[] {false} ;
      P005719_A982TBM45_DEL_FLG = new String[] {""} ;
      P005719_n982TBM45_DEL_FLG = new boolean[] {false} ;
      P005719_A983TBM45_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005719_n983TBM45_CRT_DATETIME = new boolean[] {false} ;
      P005719_A984TBM45_CRT_USER_ID = new String[] {""} ;
      P005719_n984TBM45_CRT_USER_ID = new boolean[] {false} ;
      P005719_A985TBM45_CRT_PROG_NM = new String[] {""} ;
      P005719_n985TBM45_CRT_PROG_NM = new boolean[] {false} ;
      P005719_A986TBM45_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005719_n986TBM45_UPD_DATETIME = new boolean[] {false} ;
      P005719_A987TBM45_UPD_USER_ID = new String[] {""} ;
      P005719_n987TBM45_UPD_USER_ID = new boolean[] {false} ;
      P005719_A988TBM45_UPD_PROG_NM = new String[] {""} ;
      P005719_n988TBM45_UPD_PROG_NM = new boolean[] {false} ;
      P005719_A989TBM45_UPD_CNT = new long[1] ;
      P005719_n989TBM45_UPD_CNT = new boolean[] {false} ;
      A980TBM45_FILETR_NM = "" ;
      A981TBM45_IN_CRF_ID = "" ;
      A982TBM45_DEL_FLG = "" ;
      A983TBM45_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A984TBM45_CRT_USER_ID = "" ;
      A985TBM45_CRT_PROG_NM = "" ;
      A986TBM45_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A987TBM45_UPD_USER_ID = "" ;
      A988TBM45_UPD_PROG_NM = "" ;
      P005721_A79TBM37_STUDY_ID = new long[1] ;
      P005721_A80TBM37_CRF_ID = new short[1] ;
      P005721_A81TBM37_CRF_ITEM_GRP_DIV = new String[] {""} ;
      P005721_A82TBM37_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005721_A83TBM37_VISIT_NO = new int[1] ;
      P005721_n83TBM37_VISIT_NO = new boolean[] {false} ;
      P005721_A84TBM37_DOM_CD = new String[] {""} ;
      P005721_n84TBM37_DOM_CD = new boolean[] {false} ;
      P005721_A500TBM37_DOM_VAR_NM = new String[] {""} ;
      P005721_n500TBM37_DOM_VAR_NM = new boolean[] {false} ;
      P005721_A85TBM37_DOM_ITM_GRP_OID = new String[] {""} ;
      P005721_n85TBM37_DOM_ITM_GRP_OID = new boolean[] {false} ;
      P005721_A501TBM37_DOM_ITM_GRP_ATTR_SEQ = new short[1] ;
      P005721_n501TBM37_DOM_ITM_GRP_ATTR_SEQ = new boolean[] {false} ;
      P005721_A86TBM37_DOM_ITM_GRP_ROWNO = new short[1] ;
      P005721_n86TBM37_DOM_ITM_GRP_ROWNO = new boolean[] {false} ;
      P005721_A433TBM37_DEL_FLG = new String[] {""} ;
      P005721_n433TBM37_DEL_FLG = new boolean[] {false} ;
      P005721_A434TBM37_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005721_n434TBM37_CRT_DATETIME = new boolean[] {false} ;
      P005721_A435TBM37_CRT_USER_ID = new String[] {""} ;
      P005721_n435TBM37_CRT_USER_ID = new boolean[] {false} ;
      P005721_A436TBM37_CRT_PROG_NM = new String[] {""} ;
      P005721_n436TBM37_CRT_PROG_NM = new boolean[] {false} ;
      P005721_A437TBM37_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005721_n437TBM37_UPD_DATETIME = new boolean[] {false} ;
      P005721_A438TBM37_UPD_USER_ID = new String[] {""} ;
      P005721_n438TBM37_UPD_USER_ID = new boolean[] {false} ;
      P005721_A439TBM37_UPD_PROG_NM = new String[] {""} ;
      P005721_n439TBM37_UPD_PROG_NM = new boolean[] {false} ;
      P005721_A440TBM37_UPD_CNT = new long[1] ;
      P005721_n440TBM37_UPD_CNT = new boolean[] {false} ;
      A81TBM37_CRF_ITEM_GRP_DIV = "" ;
      A82TBM37_CRF_ITEM_GRP_CD = "" ;
      A84TBM37_DOM_CD = "" ;
      A500TBM37_DOM_VAR_NM = "" ;
      A85TBM37_DOM_ITM_GRP_OID = "" ;
      A433TBM37_DEL_FLG = "" ;
      A434TBM37_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A435TBM37_CRT_USER_ID = "" ;
      A436TBM37_CRT_PROG_NM = "" ;
      A437TBM37_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A438TBM37_UPD_USER_ID = "" ;
      A439TBM37_UPD_PROG_NM = "" ;
      P005723_A606TBM11_STUDY_ID = new long[1] ;
      P005723_n606TBM11_STUDY_ID = new boolean[] {false} ;
      P005723_A62TBM11_IMAGE_CD = new String[] {""} ;
      P005723_A634TBM11_IMAGE_NM = new String[] {""} ;
      P005723_n634TBM11_IMAGE_NM = new boolean[] {false} ;
      P005723_A534TBM11_FILE_NAME = new String[] {""} ;
      P005723_n534TBM11_FILE_NAME = new boolean[] {false} ;
      P005723_A535TBM11_DEL_FLG = new String[] {""} ;
      P005723_n535TBM11_DEL_FLG = new boolean[] {false} ;
      P005723_A536TBM11_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005723_n536TBM11_CRT_DATETIME = new boolean[] {false} ;
      P005723_A537TBM11_CRT_USER_ID = new String[] {""} ;
      P005723_n537TBM11_CRT_USER_ID = new boolean[] {false} ;
      P005723_A538TBM11_CRT_PROG_NM = new String[] {""} ;
      P005723_n538TBM11_CRT_PROG_NM = new boolean[] {false} ;
      P005723_A539TBM11_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005723_n539TBM11_UPD_DATETIME = new boolean[] {false} ;
      P005723_A540TBM11_UPD_USER_ID = new String[] {""} ;
      P005723_n540TBM11_UPD_USER_ID = new boolean[] {false} ;
      P005723_A541TBM11_UPD_PROG_NM = new String[] {""} ;
      P005723_n541TBM11_UPD_PROG_NM = new boolean[] {false} ;
      P005723_A542TBM11_UPD_CNT = new long[1] ;
      P005723_n542TBM11_UPD_CNT = new boolean[] {false} ;
      A62TBM11_IMAGE_CD = "" ;
      A634TBM11_IMAGE_NM = "" ;
      A534TBM11_FILE_NAME = "" ;
      A535TBM11_DEL_FLG = "" ;
      A536TBM11_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A537TBM11_CRT_USER_ID = "" ;
      A538TBM11_CRT_PROG_NM = "" ;
      A539TBM11_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A540TBM11_UPD_USER_ID = "" ;
      A541TBM11_UPD_PROG_NM = "" ;
      P005725_A64TBM24_STUDY_ID = new long[1] ;
      P005725_A65TBM24_DOM_CD = new String[] {""} ;
      P005725_A66TBM24_DOM_VAR_NM = new String[] {""} ;
      P005725_A702TBM24_DOM_ITM_GRP_OID = new String[] {""} ;
      P005725_n702TBM24_DOM_ITM_GRP_OID = new boolean[] {false} ;
      P005725_A703TBM24_DOM_ITM_GRP_ATTR_SEQ = new short[1] ;
      P005725_n703TBM24_DOM_ITM_GRP_ATTR_SEQ = new boolean[] {false} ;
      P005725_A704TBM24_DOM_ITM_GRP_ROWNO = new short[1] ;
      P005725_n704TBM24_DOM_ITM_GRP_ROWNO = new boolean[] {false} ;
      P005725_A705TBM24_CRF_ITEM_NM = new String[] {""} ;
      P005725_n705TBM24_CRF_ITEM_NM = new boolean[] {false} ;
      P005725_A67TBM24_CRF_ITEM_DIV = new String[] {""} ;
      P005725_A635TBM24_IDENTIFICATION_CD = new String[] {""} ;
      P005725_n635TBM24_IDENTIFICATION_CD = new boolean[] {false} ;
      P005725_A636TBM24_TEXT_MAXLENGTH = new short[1] ;
      P005725_n636TBM24_TEXT_MAXLENGTH = new boolean[] {false} ;
      P005725_A637TBM24_TEXT_MAXROWS = new byte[1] ;
      P005725_n637TBM24_TEXT_MAXROWS = new boolean[] {false} ;
      P005725_A638TBM24_DECIMAL_DIGITS = new byte[1] ;
      P005725_n638TBM24_DECIMAL_DIGITS = new boolean[] {false} ;
      P005725_A639TBM24_TEXT = new String[] {""} ;
      P005725_n639TBM24_TEXT = new boolean[] {false} ;
      P005725_A640TBM24_FIXED_VALUE = new String[] {""} ;
      P005725_n640TBM24_FIXED_VALUE = new boolean[] {false} ;
      P005725_A641TBM24_CHK_FALSE_INNER_VALUE = new String[] {""} ;
      P005725_n641TBM24_CHK_FALSE_INNER_VALUE = new boolean[] {false} ;
      P005725_A706TBM24_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005725_n706TBM24_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005725_A707TBM24_MIN_VALUE = new String[] {""} ;
      P005725_n707TBM24_MIN_VALUE = new boolean[] {false} ;
      P005725_A708TBM24_MAX_VALUE = new String[] {""} ;
      P005725_n708TBM24_MAX_VALUE = new boolean[] {false} ;
      P005725_A543TBM24_ORDER = new int[1] ;
      P005725_n543TBM24_ORDER = new boolean[] {false} ;
      P005725_A544TBM24_DEL_FLG = new String[] {""} ;
      P005725_n544TBM24_DEL_FLG = new boolean[] {false} ;
      P005725_A545TBM24_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005725_n545TBM24_CRT_DATETIME = new boolean[] {false} ;
      P005725_A546TBM24_CRT_USER_ID = new String[] {""} ;
      P005725_n546TBM24_CRT_USER_ID = new boolean[] {false} ;
      P005725_A547TBM24_CRT_PROG_NM = new String[] {""} ;
      P005725_n547TBM24_CRT_PROG_NM = new boolean[] {false} ;
      P005725_A548TBM24_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005725_n548TBM24_UPD_DATETIME = new boolean[] {false} ;
      P005725_A549TBM24_UPD_USER_ID = new String[] {""} ;
      P005725_n549TBM24_UPD_USER_ID = new boolean[] {false} ;
      P005725_A550TBM24_UPD_PROG_NM = new String[] {""} ;
      P005725_n550TBM24_UPD_PROG_NM = new boolean[] {false} ;
      P005725_A551TBM24_UPD_CNT = new long[1] ;
      P005725_n551TBM24_UPD_CNT = new boolean[] {false} ;
      A65TBM24_DOM_CD = "" ;
      A66TBM24_DOM_VAR_NM = "" ;
      A702TBM24_DOM_ITM_GRP_OID = "" ;
      A705TBM24_CRF_ITEM_NM = "" ;
      A67TBM24_CRF_ITEM_DIV = "" ;
      A635TBM24_IDENTIFICATION_CD = "" ;
      A639TBM24_TEXT = "" ;
      A640TBM24_FIXED_VALUE = "" ;
      A641TBM24_CHK_FALSE_INNER_VALUE = "" ;
      A706TBM24_REQUIRED_INPUT_FLG = "" ;
      A707TBM24_MIN_VALUE = "" ;
      A708TBM24_MAX_VALUE = "" ;
      A544TBM24_DEL_FLG = "" ;
      A545TBM24_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A546TBM24_CRT_USER_ID = "" ;
      A547TBM24_CRT_PROG_NM = "" ;
      A548TBM24_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A549TBM24_UPD_USER_ID = "" ;
      A550TBM24_UPD_PROG_NM = "" ;
      P005727_A107TBM23_STUDY_ID = new long[1] ;
      P005727_A108TBM23_USER_ID = new String[] {""} ;
      P005727_A109TBM23_STYDY_AUTH_CD = new String[] {""} ;
      P005727_A385TBM23_DEL_FLG = new String[] {""} ;
      P005727_n385TBM23_DEL_FLG = new boolean[] {false} ;
      P005727_A386TBM23_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005727_n386TBM23_CRT_DATETIME = new boolean[] {false} ;
      P005727_A387TBM23_CRT_USER_ID = new String[] {""} ;
      P005727_n387TBM23_CRT_USER_ID = new boolean[] {false} ;
      P005727_A388TBM23_CRT_PROG_NM = new String[] {""} ;
      P005727_n388TBM23_CRT_PROG_NM = new boolean[] {false} ;
      P005727_A389TBM23_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005727_n389TBM23_UPD_DATETIME = new boolean[] {false} ;
      P005727_A390TBM23_UPD_USER_ID = new String[] {""} ;
      P005727_n390TBM23_UPD_USER_ID = new boolean[] {false} ;
      P005727_A391TBM23_UPD_PROG_NM = new String[] {""} ;
      P005727_n391TBM23_UPD_PROG_NM = new boolean[] {false} ;
      P005727_A392TBM23_UPD_CNT = new long[1] ;
      P005727_n392TBM23_UPD_CNT = new boolean[] {false} ;
      A108TBM23_USER_ID = "" ;
      A109TBM23_STYDY_AUTH_CD = "" ;
      A385TBM23_DEL_FLG = "" ;
      A386TBM23_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A387TBM23_CRT_USER_ID = "" ;
      A388TBM23_CRT_PROG_NM = "" ;
      A389TBM23_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A390TBM23_UPD_USER_ID = "" ;
      A391TBM23_UPD_PROG_NM = "" ;
      P005729_A17TBM22_STUDY_ID = new long[1] ;
      P005729_A18TBM22_SITE_ID = new String[] {""} ;
      P005729_A377TBM22_DEL_FLG = new String[] {""} ;
      P005729_n377TBM22_DEL_FLG = new boolean[] {false} ;
      P005729_A378TBM22_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005729_n378TBM22_CRT_DATETIME = new boolean[] {false} ;
      P005729_A379TBM22_CRT_USER_ID = new String[] {""} ;
      P005729_n379TBM22_CRT_USER_ID = new boolean[] {false} ;
      P005729_A380TBM22_CRT_PROG_NM = new String[] {""} ;
      P005729_n380TBM22_CRT_PROG_NM = new boolean[] {false} ;
      P005729_A381TBM22_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005729_n381TBM22_UPD_DATETIME = new boolean[] {false} ;
      P005729_A382TBM22_UPD_USER_ID = new String[] {""} ;
      P005729_n382TBM22_UPD_USER_ID = new boolean[] {false} ;
      P005729_A383TBM22_UPD_PROG_NM = new String[] {""} ;
      P005729_n383TBM22_UPD_PROG_NM = new boolean[] {false} ;
      P005729_A384TBM22_UPD_CNT = new long[1] ;
      P005729_n384TBM22_UPD_CNT = new boolean[] {false} ;
      A18TBM22_SITE_ID = "" ;
      A377TBM22_DEL_FLG = "" ;
      A378TBM22_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A379TBM22_CRT_USER_ID = "" ;
      A380TBM22_CRT_PROG_NM = "" ;
      A381TBM22_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A382TBM22_UPD_USER_ID = "" ;
      A383TBM22_UPD_PROG_NM = "" ;
      P005731_A25TBM26_STUDY_ID = new long[1] ;
      P005731_A26TBM26_LIST_CD = new String[] {""} ;
      P005731_A27TBM26_LIST_ITEM_NO = new short[1] ;
      P005731_A561TBM26_LIST_ITEM_NAME = new String[] {""} ;
      P005731_n561TBM26_LIST_ITEM_NAME = new boolean[] {false} ;
      P005731_A562TBM26_INNER_VALUE = new String[] {""} ;
      P005731_n562TBM26_INNER_VALUE = new boolean[] {false} ;
      P005731_A563TBM26_DEL_FLG = new String[] {""} ;
      P005731_n563TBM26_DEL_FLG = new boolean[] {false} ;
      P005731_A564TBM26_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005731_n564TBM26_CRT_DATETIME = new boolean[] {false} ;
      P005731_A565TBM26_CRT_USER_ID = new String[] {""} ;
      P005731_n565TBM26_CRT_USER_ID = new boolean[] {false} ;
      P005731_A566TBM26_CRT_PROG_NM = new String[] {""} ;
      P005731_n566TBM26_CRT_PROG_NM = new boolean[] {false} ;
      P005731_A567TBM26_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005731_n567TBM26_UPD_DATETIME = new boolean[] {false} ;
      P005731_A568TBM26_UPD_USER_ID = new String[] {""} ;
      P005731_n568TBM26_UPD_USER_ID = new boolean[] {false} ;
      P005731_A569TBM26_UPD_PROG_NM = new String[] {""} ;
      P005731_n569TBM26_UPD_PROG_NM = new boolean[] {false} ;
      P005731_A570TBM26_UPD_CNT = new long[1] ;
      P005731_n570TBM26_UPD_CNT = new boolean[] {false} ;
      A26TBM26_LIST_CD = "" ;
      A561TBM26_LIST_ITEM_NAME = "" ;
      A562TBM26_INNER_VALUE = "" ;
      A563TBM26_DEL_FLG = "" ;
      A564TBM26_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A565TBM26_CRT_USER_ID = "" ;
      A566TBM26_CRT_PROG_NM = "" ;
      A567TBM26_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A568TBM26_UPD_USER_ID = "" ;
      A569TBM26_UPD_PROG_NM = "" ;
      P005733_A23TBM25_STUDY_ID = new long[1] ;
      P005733_A24TBM25_LIST_CD = new String[] {""} ;
      P005733_A552TBM25_LIST_NM = new String[] {""} ;
      P005733_n552TBM25_LIST_NM = new boolean[] {false} ;
      P005733_A553TBM25_DEL_FLG = new String[] {""} ;
      P005733_n553TBM25_DEL_FLG = new boolean[] {false} ;
      P005733_A554TBM25_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005733_n554TBM25_CRT_DATETIME = new boolean[] {false} ;
      P005733_A555TBM25_CRT_USER_ID = new String[] {""} ;
      P005733_n555TBM25_CRT_USER_ID = new boolean[] {false} ;
      P005733_A556TBM25_CRT_PROG_NM = new String[] {""} ;
      P005733_n556TBM25_CRT_PROG_NM = new boolean[] {false} ;
      P005733_A557TBM25_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005733_n557TBM25_UPD_DATETIME = new boolean[] {false} ;
      P005733_A558TBM25_UPD_USER_ID = new String[] {""} ;
      P005733_n558TBM25_UPD_USER_ID = new boolean[] {false} ;
      P005733_A559TBM25_UPD_PROG_NM = new String[] {""} ;
      P005733_n559TBM25_UPD_PROG_NM = new boolean[] {false} ;
      P005733_A560TBM25_UPD_CNT = new long[1] ;
      P005733_n560TBM25_UPD_CNT = new boolean[] {false} ;
      A24TBM25_LIST_CD = "" ;
      A552TBM25_LIST_NM = "" ;
      A553TBM25_DEL_FLG = "" ;
      A554TBM25_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A555TBM25_CRT_USER_ID = "" ;
      A556TBM25_CRT_PROG_NM = "" ;
      A557TBM25_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A558TBM25_UPD_USER_ID = "" ;
      A559TBM25_UPD_PROG_NM = "" ;
      P005735_A35TBM36_STUDY_ID = new long[1] ;
      P005735_A36TBM36_CRF_ID = new short[1] ;
      P005735_A37TBM36_COND_NO = new short[1] ;
      P005735_A38TBM36_SELECT_CRF_ID = new short[1] ;
      P005735_A589TBM36_DEL_FLG = new String[] {""} ;
      P005735_n589TBM36_DEL_FLG = new boolean[] {false} ;
      P005735_A590TBM36_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005735_n590TBM36_CRT_DATETIME = new boolean[] {false} ;
      P005735_A591TBM36_CRT_USER_ID = new String[] {""} ;
      P005735_n591TBM36_CRT_USER_ID = new boolean[] {false} ;
      P005735_A592TBM36_CRT_PROG_NM = new String[] {""} ;
      P005735_n592TBM36_CRT_PROG_NM = new boolean[] {false} ;
      P005735_A593TBM36_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005735_n593TBM36_UPD_DATETIME = new boolean[] {false} ;
      P005735_A594TBM36_UPD_USER_ID = new String[] {""} ;
      P005735_n594TBM36_UPD_USER_ID = new boolean[] {false} ;
      P005735_A595TBM36_UPD_PROG_NM = new String[] {""} ;
      P005735_n595TBM36_UPD_PROG_NM = new boolean[] {false} ;
      P005735_A596TBM36_UPD_CNT = new long[1] ;
      P005735_n596TBM36_UPD_CNT = new boolean[] {false} ;
      A589TBM36_DEL_FLG = "" ;
      A590TBM36_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A591TBM36_CRT_USER_ID = "" ;
      A592TBM36_CRT_PROG_NM = "" ;
      A593TBM36_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A594TBM36_UPD_USER_ID = "" ;
      A595TBM36_UPD_PROG_NM = "" ;
      P005737_A76TBM33_STUDY_ID = new long[1] ;
      P005737_A77TBM33_CRF_ID = new short[1] ;
      P005737_A78TBM33_COND_NO = new short[1] ;
      P005737_A502TBM33_COND_NM = new String[] {""} ;
      P005737_n502TBM33_COND_NM = new boolean[] {false} ;
      P005737_A414TBM33_EXPRESSION = new String[] {""} ;
      P005737_n414TBM33_EXPRESSION = new boolean[] {false} ;
      P005737_A503TBM33_COND_DIV = new String[] {""} ;
      P005737_n503TBM33_COND_DIV = new boolean[] {false} ;
      P005737_A504TBM33_CRF_ITEM_CD = new String[] {""} ;
      P005737_n504TBM33_CRF_ITEM_CD = new boolean[] {false} ;
      P005737_A415TBM33_PRIOR_NO = new short[1] ;
      P005737_n415TBM33_PRIOR_NO = new boolean[] {false} ;
      P005737_A505TBM33_ERR_DIV = new String[] {""} ;
      P005737_n505TBM33_ERR_DIV = new boolean[] {false} ;
      P005737_A506TBM33_ERR_MSG = new String[] {""} ;
      P005737_n506TBM33_ERR_MSG = new boolean[] {false} ;
      P005737_A646TBM33_ENABLED_FLG = new String[] {""} ;
      P005737_n646TBM33_ENABLED_FLG = new boolean[] {false} ;
      P005737_A696TBM33_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005737_n696TBM33_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005737_A697TBM33_NUMERIC_RANGE_FLG = new String[] {""} ;
      P005737_n697TBM33_NUMERIC_RANGE_FLG = new boolean[] {false} ;
      P005737_A416TBM33_DEL_FLG = new String[] {""} ;
      P005737_n416TBM33_DEL_FLG = new boolean[] {false} ;
      P005737_A417TBM33_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005737_n417TBM33_CRT_DATETIME = new boolean[] {false} ;
      P005737_A418TBM33_CRT_USER_ID = new String[] {""} ;
      P005737_n418TBM33_CRT_USER_ID = new boolean[] {false} ;
      P005737_A419TBM33_CRT_PROG_NM = new String[] {""} ;
      P005737_n419TBM33_CRT_PROG_NM = new boolean[] {false} ;
      P005737_A420TBM33_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005737_n420TBM33_UPD_DATETIME = new boolean[] {false} ;
      P005737_A421TBM33_UPD_USER_ID = new String[] {""} ;
      P005737_n421TBM33_UPD_USER_ID = new boolean[] {false} ;
      P005737_A422TBM33_UPD_PROG_NM = new String[] {""} ;
      P005737_n422TBM33_UPD_PROG_NM = new boolean[] {false} ;
      P005737_A423TBM33_UPD_CNT = new long[1] ;
      P005737_n423TBM33_UPD_CNT = new boolean[] {false} ;
      A502TBM33_COND_NM = "" ;
      A414TBM33_EXPRESSION = "" ;
      A503TBM33_COND_DIV = "" ;
      A504TBM33_CRF_ITEM_CD = "" ;
      A505TBM33_ERR_DIV = "" ;
      A506TBM33_ERR_MSG = "" ;
      A646TBM33_ENABLED_FLG = "" ;
      A696TBM33_REQUIRED_INPUT_FLG = "" ;
      A697TBM33_NUMERIC_RANGE_FLG = "" ;
      A416TBM33_DEL_FLG = "" ;
      A417TBM33_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A418TBM33_CRT_USER_ID = "" ;
      A419TBM33_CRT_PROG_NM = "" ;
      A420TBM33_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A421TBM33_UPD_USER_ID = "" ;
      A422TBM33_UPD_PROG_NM = "" ;
      P005739_A70TBM32_STUDY_ID = new long[1] ;
      P005739_A71TBM32_CRF_ID = new short[1] ;
      P005739_A72TBM32_CRF_ITEM_CD = new String[] {""} ;
      P005739_A405TBM32_CRF_ITEM_NM = new String[] {""} ;
      P005739_n405TBM32_CRF_ITEM_NM = new boolean[] {false} ;
      P005739_A74TBM32_CRF_ITEM_DIV = new String[] {""} ;
      P005739_n74TBM32_CRF_ITEM_DIV = new boolean[] {false} ;
      P005739_A73TBM32_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005739_n73TBM32_CRF_ITEM_GRP_CD = new boolean[] {false} ;
      P005739_A507TBM32_CRF_ITEM_GRP_ORDER = new short[1] ;
      P005739_n507TBM32_CRF_ITEM_GRP_ORDER = new boolean[] {false} ;
      P005739_A508TBM32_LOCATION_X = new short[1] ;
      P005739_n508TBM32_LOCATION_X = new boolean[] {false} ;
      P005739_A509TBM32_LOCATION_Y = new short[1] ;
      P005739_n509TBM32_LOCATION_Y = new boolean[] {false} ;
      P005739_A510TBM32_LOCATION_X2 = new short[1] ;
      P005739_n510TBM32_LOCATION_X2 = new boolean[] {false} ;
      P005739_A511TBM32_LOCATION_Y2 = new short[1] ;
      P005739_n511TBM32_LOCATION_Y2 = new boolean[] {false} ;
      P005739_A512TBM32_TEXT_ALIGN_DIV = new String[] {""} ;
      P005739_n512TBM32_TEXT_ALIGN_DIV = new boolean[] {false} ;
      P005739_A516TBM32_TEXT_MAXROWS = new byte[1] ;
      P005739_n516TBM32_TEXT_MAXROWS = new boolean[] {false} ;
      P005739_A517TBM32_TEXT_MAXLENGTH = new short[1] ;
      P005739_n517TBM32_TEXT_MAXLENGTH = new boolean[] {false} ;
      P005739_A518TBM32_DECIMAL_DIGITS = new byte[1] ;
      P005739_n518TBM32_DECIMAL_DIGITS = new boolean[] {false} ;
      P005739_A522TBM32_CHK_TRUE_INNER_VALUE = new String[] {""} ;
      P005739_n522TBM32_CHK_TRUE_INNER_VALUE = new boolean[] {false} ;
      P005739_A523TBM32_CHK_FALSE_INNER_VALUE = new String[] {""} ;
      P005739_n523TBM32_CHK_FALSE_INNER_VALUE = new boolean[] {false} ;
      P005739_A527TBM32_FIXED_VALUE = new String[] {""} ;
      P005739_n527TBM32_FIXED_VALUE = new boolean[] {false} ;
      P005739_A525TBM32_LIST_CD = new String[] {""} ;
      P005739_n525TBM32_LIST_CD = new boolean[] {false} ;
      P005739_A526TBM32_IMAGE_CD = new String[] {""} ;
      P005739_n526TBM32_IMAGE_CD = new boolean[] {false} ;
      P005739_A524TBM32_TEXT = new String[] {""} ;
      P005739_n524TBM32_TEXT = new boolean[] {false} ;
      P005739_A513TBM32_FONT_SIZE = new byte[1] ;
      P005739_n513TBM32_FONT_SIZE = new boolean[] {false} ;
      P005739_A514TBM32_FONT_UL_FLG = new String[] {""} ;
      P005739_n514TBM32_FONT_UL_FLG = new boolean[] {false} ;
      P005739_A515TBM32_FONT_COLOR_DIV = new long[1] ;
      P005739_n515TBM32_FONT_COLOR_DIV = new boolean[] {false} ;
      P005739_A521TBM32_LINE_SIZE_DIV = new byte[1] ;
      P005739_n521TBM32_LINE_SIZE_DIV = new boolean[] {false} ;
      P005739_A689TBM32_LINE_COLOR_DIV = new long[1] ;
      P005739_n689TBM32_LINE_COLOR_DIV = new boolean[] {false} ;
      P005739_A519TBM32_LINE_START_POINT_DIV = new String[] {""} ;
      P005739_n519TBM32_LINE_START_POINT_DIV = new boolean[] {false} ;
      P005739_A520TBM32_LINE_END_POINT_DIV = new String[] {""} ;
      P005739_n520TBM32_LINE_END_POINT_DIV = new boolean[] {false} ;
      P005739_A690TBM32_LINE_ANGLE = new short[1] ;
      P005739_n690TBM32_LINE_ANGLE = new boolean[] {false} ;
      P005739_A644TBM32_AUTH_LVL_MIN = new byte[1] ;
      P005739_n644TBM32_AUTH_LVL_MIN = new boolean[] {false} ;
      P005739_A645TBM32_ZORDER = new short[1] ;
      P005739_n645TBM32_ZORDER = new boolean[] {false} ;
      P005739_A691TBM32_TAB_ORDER = new short[1] ;
      P005739_n691TBM32_TAB_ORDER = new boolean[] {false} ;
      P005739_A692TBM32_TABSTOP_FLG = new String[] {""} ;
      P005739_n692TBM32_TABSTOP_FLG = new boolean[] {false} ;
      P005739_A693TBM32_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005739_n693TBM32_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005739_A694TBM32_MIN_VALUE = new String[] {""} ;
      P005739_n694TBM32_MIN_VALUE = new boolean[] {false} ;
      P005739_A695TBM32_MAX_VALUE = new String[] {""} ;
      P005739_n695TBM32_MAX_VALUE = new boolean[] {false} ;
      P005739_A406TBM32_CRF_ITEM_NOTE = new String[] {""} ;
      P005739_n406TBM32_CRF_ITEM_NOTE = new boolean[] {false} ;
      P005739_A774TBM32_REF_CRF_ID = new short[1] ;
      P005739_n774TBM32_REF_CRF_ID = new boolean[] {false} ;
      P005739_A775TBM32_REF_CRF_ITEM_CD = new String[] {""} ;
      P005739_n775TBM32_REF_CRF_ITEM_CD = new boolean[] {false} ;
      P005739_A75TBM32_DEL_FLG = new String[] {""} ;
      P005739_n75TBM32_DEL_FLG = new boolean[] {false} ;
      P005739_A407TBM32_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005739_n407TBM32_CRT_DATETIME = new boolean[] {false} ;
      P005739_A408TBM32_CRT_USER_ID = new String[] {""} ;
      P005739_n408TBM32_CRT_USER_ID = new boolean[] {false} ;
      P005739_A409TBM32_CRT_PROG_NM = new String[] {""} ;
      P005739_n409TBM32_CRT_PROG_NM = new boolean[] {false} ;
      P005739_A410TBM32_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005739_n410TBM32_UPD_DATETIME = new boolean[] {false} ;
      P005739_A411TBM32_UPD_USER_ID = new String[] {""} ;
      P005739_n411TBM32_UPD_USER_ID = new boolean[] {false} ;
      P005739_A412TBM32_UPD_PROG_NM = new String[] {""} ;
      P005739_n412TBM32_UPD_PROG_NM = new boolean[] {false} ;
      P005739_A413TBM32_UPD_CNT = new long[1] ;
      P005739_n413TBM32_UPD_CNT = new boolean[] {false} ;
      A72TBM32_CRF_ITEM_CD = "" ;
      A405TBM32_CRF_ITEM_NM = "" ;
      A74TBM32_CRF_ITEM_DIV = "" ;
      A73TBM32_CRF_ITEM_GRP_CD = "" ;
      A512TBM32_TEXT_ALIGN_DIV = "" ;
      A522TBM32_CHK_TRUE_INNER_VALUE = "" ;
      A523TBM32_CHK_FALSE_INNER_VALUE = "" ;
      A527TBM32_FIXED_VALUE = "" ;
      A525TBM32_LIST_CD = "" ;
      A526TBM32_IMAGE_CD = "" ;
      A524TBM32_TEXT = "" ;
      A514TBM32_FONT_UL_FLG = "" ;
      A519TBM32_LINE_START_POINT_DIV = "" ;
      A520TBM32_LINE_END_POINT_DIV = "" ;
      A692TBM32_TABSTOP_FLG = "" ;
      A693TBM32_REQUIRED_INPUT_FLG = "" ;
      A694TBM32_MIN_VALUE = "" ;
      A695TBM32_MAX_VALUE = "" ;
      A406TBM32_CRF_ITEM_NOTE = "" ;
      A775TBM32_REF_CRF_ITEM_CD = "" ;
      A75TBM32_DEL_FLG = "" ;
      A407TBM32_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A408TBM32_CRT_USER_ID = "" ;
      A409TBM32_CRT_PROG_NM = "" ;
      A410TBM32_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A411TBM32_UPD_USER_ID = "" ;
      A412TBM32_UPD_PROG_NM = "" ;
      P005741_A28TBM34_STUDY_ID = new long[1] ;
      P005741_A29TBM34_CRF_ID = new short[1] ;
      P005741_A30TBM34_STYDY_AUTH_CD = new String[] {""} ;
      P005741_A571TBM34_DISPLAY_FLG = new String[] {""} ;
      P005741_n571TBM34_DISPLAY_FLG = new boolean[] {false} ;
      P005741_A572TBM34_DEL_FLG = new String[] {""} ;
      P005741_n572TBM34_DEL_FLG = new boolean[] {false} ;
      P005741_A573TBM34_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005741_n573TBM34_CRT_DATETIME = new boolean[] {false} ;
      P005741_A574TBM34_CRT_USER_ID = new String[] {""} ;
      P005741_n574TBM34_CRT_USER_ID = new boolean[] {false} ;
      P005741_A575TBM34_CRT_PROG_NM = new String[] {""} ;
      P005741_n575TBM34_CRT_PROG_NM = new boolean[] {false} ;
      P005741_A576TBM34_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005741_n576TBM34_UPD_DATETIME = new boolean[] {false} ;
      P005741_A577TBM34_UPD_USER_ID = new String[] {""} ;
      P005741_n577TBM34_UPD_USER_ID = new boolean[] {false} ;
      P005741_A578TBM34_UPD_PROG_NM = new String[] {""} ;
      P005741_n578TBM34_UPD_PROG_NM = new boolean[] {false} ;
      P005741_A579TBM34_UPD_CNT = new long[1] ;
      P005741_n579TBM34_UPD_CNT = new boolean[] {false} ;
      A30TBM34_STYDY_AUTH_CD = "" ;
      A571TBM34_DISPLAY_FLG = "" ;
      A572TBM34_DEL_FLG = "" ;
      A573TBM34_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A574TBM34_CRT_USER_ID = "" ;
      A575TBM34_CRT_PROG_NM = "" ;
      A576TBM34_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A577TBM34_UPD_USER_ID = "" ;
      A578TBM34_UPD_PROG_NM = "" ;
      P005743_A68TBM31_STUDY_ID = new long[1] ;
      P005743_A69TBM31_CRF_ID = new short[1] ;
      P005743_A393TBM31_CRF_NM = new String[] {""} ;
      P005743_n393TBM31_CRF_NM = new boolean[] {false} ;
      P005743_A642TBM31_CRF_SNM = new String[] {""} ;
      P005743_n642TBM31_CRF_SNM = new boolean[] {false} ;
      P005743_A394TBM31_GRID_SIZE = new short[1] ;
      P005743_n394TBM31_GRID_SIZE = new boolean[] {false} ;
      P005743_A395TBM31_ORDER = new int[1] ;
      P005743_n395TBM31_ORDER = new boolean[] {false} ;
      P005743_A528TBM31_DEF_VISIT_NO = new int[1] ;
      P005743_n528TBM31_DEF_VISIT_NO = new boolean[] {false} ;
      P005743_A529TBM31_DEF_DOMAIN_CD = new String[] {""} ;
      P005743_n529TBM31_DEF_DOMAIN_CD = new boolean[] {false} ;
      P005743_A643TBM31_STATUS = new String[] {""} ;
      P005743_n643TBM31_STATUS = new boolean[] {false} ;
      P005743_A396TBM31_NOTE = new String[] {""} ;
      P005743_n396TBM31_NOTE = new boolean[] {false} ;
      P005743_A397TBM31_DEL_FLG = new String[] {""} ;
      P005743_n397TBM31_DEL_FLG = new boolean[] {false} ;
      P005743_A398TBM31_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005743_n398TBM31_CRT_DATETIME = new boolean[] {false} ;
      P005743_A399TBM31_CRT_USER_ID = new String[] {""} ;
      P005743_n399TBM31_CRT_USER_ID = new boolean[] {false} ;
      P005743_A400TBM31_CRT_PROG_NM = new String[] {""} ;
      P005743_n400TBM31_CRT_PROG_NM = new boolean[] {false} ;
      P005743_A401TBM31_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005743_n401TBM31_UPD_DATETIME = new boolean[] {false} ;
      P005743_A402TBM31_UPD_USER_ID = new String[] {""} ;
      P005743_n402TBM31_UPD_USER_ID = new boolean[] {false} ;
      P005743_A403TBM31_UPD_PROG_NM = new String[] {""} ;
      P005743_n403TBM31_UPD_PROG_NM = new boolean[] {false} ;
      P005743_A404TBM31_UPD_CNT = new long[1] ;
      P005743_n404TBM31_UPD_CNT = new boolean[] {false} ;
      A393TBM31_CRF_NM = "" ;
      A642TBM31_CRF_SNM = "" ;
      A529TBM31_DEF_DOMAIN_CD = "" ;
      A643TBM31_STATUS = "" ;
      A396TBM31_NOTE = "" ;
      A397TBM31_DEL_FLG = "" ;
      A398TBM31_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A399TBM31_CRT_USER_ID = "" ;
      A400TBM31_CRT_PROG_NM = "" ;
      A401TBM31_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A402TBM31_UPD_USER_ID = "" ;
      A403TBM31_UPD_PROG_NM = "" ;
      GXt_char1 = "" ;
      AV10W_A_LOGIN_SDT = new SdtA_LOGIN_SDT(remoteHandle, context);
      GXv_SdtA_LOGIN_SDT3 = new SdtA_LOGIN_SDT [1] ;
      AV11W_ERRCD = "" ;
      GXv_char2 = new String [1] ;
      GXKey = "" ;
      GXEncryptionTmp = "" ;
      Gx_emsg = "" ;
      pr_default = new DataStoreProvider(context, remoteHandle, new b402_pc19_study_del__default(),
         new Object[] {
             new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            P00579_A31TBM35_STUDY_ID, P00579_A32TBM35_CRF_ID, P00579_A33TBM35_CRF_ITEM_CD, P00579_A34TBM35_STUDY_AUTH_CD, P00579_A580TBM35_DISPLAY_FLG, P00579_n580TBM35_DISPLAY_FLG, P00579_A581TBM35_DEL_FLG, P00579_n581TBM35_DEL_FLG, P00579_A582TBM35_CRT_DATETIME, P00579_n582TBM35_CRT_DATETIME,
            P00579_A583TBM35_CRT_USER_ID, P00579_n583TBM35_CRT_USER_ID, P00579_A584TBM35_CRT_PROG_NM, P00579_n584TBM35_CRT_PROG_NM, P00579_A585TBM35_UPD_DATETIME, P00579_n585TBM35_UPD_DATETIME, P00579_A586TBM35_UPD_USER_ID, P00579_n586TBM35_UPD_USER_ID, P00579_A587TBM35_UPD_PROG_NM, P00579_n587TBM35_UPD_PROG_NM,
            P00579_A588TBM35_UPD_CNT, P00579_n588TBM35_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005711_A19TBM41_STUDY_ID, P005711_A20TBM41_CRF_ID, P005711_A21TBM41_CRF_ITEM_GRP_DIV, P005711_A22TBM41_CRF_ITEM_GRP_CD, P005711_A424TBM41_NCM_METADATA_ID, P005711_n424TBM41_NCM_METADATA_ID, P005711_A425TBM41_DEL_FLG, P005711_n425TBM41_DEL_FLG, P005711_A426TBM41_CRT_DATETIME, P005711_n426TBM41_CRT_DATETIME,
            P005711_A427TBM41_CRT_USER_ID, P005711_n427TBM41_CRT_USER_ID, P005711_A428TBM41_CRT_PROG_NM, P005711_n428TBM41_CRT_PROG_NM, P005711_A429TBM41_UPD_DATETIME, P005711_n429TBM41_UPD_DATETIME, P005711_A430TBM41_UPD_USER_ID, P005711_n430TBM41_UPD_USER_ID, P005711_A431TBM41_UPD_PROG_NM, P005711_n431TBM41_UPD_PROG_NM,
            P005711_A432TBM41_UPD_CNT, P005711_n432TBM41_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005713_A200TBM43_STUDY_ID, P005713_A201TBM43_DOM_CD, P005713_A202TBM43_DOM_VAR_NM, P005713_A910TBM43_VAR_DESC, P005713_n910TBM43_VAR_DESC, P005713_A911TBM43_SDTM_FLG, P005713_n911TBM43_SDTM_FLG, P005713_A912TBM43_CDASH_FLG, P005713_n912TBM43_CDASH_FLG, P005713_A913TBM43_INPUT_TYPE_DIV,
            P005713_n913TBM43_INPUT_TYPE_DIV, P005713_A914TBM43_REQUIRED_FLG, P005713_n914TBM43_REQUIRED_FLG, P005713_A915TBM43_SAS_FIELD_NM, P005713_n915TBM43_SAS_FIELD_NM, P005713_A916TBM43_ODM_DATA_TYPE, P005713_n916TBM43_ODM_DATA_TYPE, P005713_A917TBM43_NOTE, P005713_n917TBM43_NOTE, P005713_A918TBM43_ORDER,
            P005713_n918TBM43_ORDER, P005713_A919TBM43_DEL_FLG, P005713_n919TBM43_DEL_FLG, P005713_A920TBM43_CRT_DATETIME, P005713_n920TBM43_CRT_DATETIME, P005713_A921TBM43_CRT_USER_ID, P005713_n921TBM43_CRT_USER_ID, P005713_A922TBM43_CRT_PROG_NM, P005713_n922TBM43_CRT_PROG_NM, P005713_A923TBM43_UPD_DATETIME,
            P005713_n923TBM43_UPD_DATETIME, P005713_A924TBM43_UPD_USER_ID, P005713_n924TBM43_UPD_USER_ID, P005713_A925TBM43_UPD_PROG_NM, P005713_n925TBM43_UPD_PROG_NM, P005713_A926TBM43_UPD_CNT, P005713_n926TBM43_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005715_A203TBM42_STUDY_ID, P005715_A204TBM42_DOM_CD, P005715_A905TBM42_DOM_ENM, P005715_n905TBM42_DOM_ENM, P005715_A906TBM42_DOM_JNM, P005715_n906TBM42_DOM_JNM, P005715_A907TBM42_DOM_GRP_NM, P005715_n907TBM42_DOM_GRP_NM, P005715_A908TBM42_NOTE, P005715_n908TBM42_NOTE,
            P005715_A909TBM42_ORDER, P005715_n909TBM42_ORDER, P005715_A893TBM42_DEL_FLG, P005715_n893TBM42_DEL_FLG, P005715_A894TBM42_CRT_DATETIME, P005715_n894TBM42_CRT_DATETIME, P005715_A895TBM42_CRT_USER_ID, P005715_n895TBM42_CRT_USER_ID, P005715_A896TBM42_CRT_PROG_NM, P005715_n896TBM42_CRT_PROG_NM,
            P005715_A897TBM42_UPD_DATETIME, P005715_n897TBM42_UPD_DATETIME, P005715_A898TBM42_UPD_USER_ID, P005715_n898TBM42_UPD_USER_ID, P005715_A899TBM42_UPD_PROG_NM, P005715_n899TBM42_UPD_PROG_NM, P005715_A900TBM42_UPD_CNT, P005715_n900TBM42_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005717_A945TBM44_STUDY_ID, P005717_A946TBM44_CRF_ID, P005717_A947TBM44_CRF_EDA_NO, P005717_A948TBM44_VISIT_NO, P005717_n948TBM44_VISIT_NO, P005717_A949TBM44_DEL_FLG, P005717_n949TBM44_DEL_FLG, P005717_A950TBM44_CRT_DATETIME, P005717_n950TBM44_CRT_DATETIME, P005717_A951TBM44_CRT_USER_ID,
            P005717_n951TBM44_CRT_USER_ID, P005717_A952TBM44_CRT_PROG_NM, P005717_n952TBM44_CRT_PROG_NM, P005717_A953TBM44_UPD_DATETIME, P005717_n953TBM44_UPD_DATETIME, P005717_A954TBM44_UPD_USER_ID, P005717_n954TBM44_UPD_USER_ID, P005717_A955TBM44_UPD_PROG_NM, P005717_n955TBM44_UPD_PROG_NM, P005717_A956TBM44_UPD_CNT,
            P005717_n956TBM44_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005719_A977TBM45_STUDY_ID, P005719_A978TBM45_FILTER_NO, P005719_A980TBM45_FILETR_NM, P005719_n980TBM45_FILETR_NM, P005719_A981TBM45_IN_CRF_ID, P005719_n981TBM45_IN_CRF_ID, P005719_A982TBM45_DEL_FLG, P005719_n982TBM45_DEL_FLG, P005719_A983TBM45_CRT_DATETIME, P005719_n983TBM45_CRT_DATETIME,
            P005719_A984TBM45_CRT_USER_ID, P005719_n984TBM45_CRT_USER_ID, P005719_A985TBM45_CRT_PROG_NM, P005719_n985TBM45_CRT_PROG_NM, P005719_A986TBM45_UPD_DATETIME, P005719_n986TBM45_UPD_DATETIME, P005719_A987TBM45_UPD_USER_ID, P005719_n987TBM45_UPD_USER_ID, P005719_A988TBM45_UPD_PROG_NM, P005719_n988TBM45_UPD_PROG_NM,
            P005719_A989TBM45_UPD_CNT, P005719_n989TBM45_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005721_A79TBM37_STUDY_ID, P005721_A80TBM37_CRF_ID, P005721_A81TBM37_CRF_ITEM_GRP_DIV, P005721_A82TBM37_CRF_ITEM_GRP_CD, P005721_A83TBM37_VISIT_NO, P005721_n83TBM37_VISIT_NO, P005721_A84TBM37_DOM_CD, P005721_n84TBM37_DOM_CD, P005721_A500TBM37_DOM_VAR_NM, P005721_n500TBM37_DOM_VAR_NM,
            P005721_A85TBM37_DOM_ITM_GRP_OID, P005721_n85TBM37_DOM_ITM_GRP_OID, P005721_A501TBM37_DOM_ITM_GRP_ATTR_SEQ, P005721_n501TBM37_DOM_ITM_GRP_ATTR_SEQ, P005721_A86TBM37_DOM_ITM_GRP_ROWNO, P005721_n86TBM37_DOM_ITM_GRP_ROWNO, P005721_A433TBM37_DEL_FLG, P005721_n433TBM37_DEL_FLG, P005721_A434TBM37_CRT_DATETIME, P005721_n434TBM37_CRT_DATETIME,
            P005721_A435TBM37_CRT_USER_ID, P005721_n435TBM37_CRT_USER_ID, P005721_A436TBM37_CRT_PROG_NM, P005721_n436TBM37_CRT_PROG_NM, P005721_A437TBM37_UPD_DATETIME, P005721_n437TBM37_UPD_DATETIME, P005721_A438TBM37_UPD_USER_ID, P005721_n438TBM37_UPD_USER_ID, P005721_A439TBM37_UPD_PROG_NM, P005721_n439TBM37_UPD_PROG_NM,
            P005721_A440TBM37_UPD_CNT, P005721_n440TBM37_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005723_A606TBM11_STUDY_ID, P005723_n606TBM11_STUDY_ID, P005723_A62TBM11_IMAGE_CD, P005723_A634TBM11_IMAGE_NM, P005723_n634TBM11_IMAGE_NM, P005723_A534TBM11_FILE_NAME, P005723_n534TBM11_FILE_NAME, P005723_A535TBM11_DEL_FLG, P005723_n535TBM11_DEL_FLG, P005723_A536TBM11_CRT_DATETIME,
            P005723_n536TBM11_CRT_DATETIME, P005723_A537TBM11_CRT_USER_ID, P005723_n537TBM11_CRT_USER_ID, P005723_A538TBM11_CRT_PROG_NM, P005723_n538TBM11_CRT_PROG_NM, P005723_A539TBM11_UPD_DATETIME, P005723_n539TBM11_UPD_DATETIME, P005723_A540TBM11_UPD_USER_ID, P005723_n540TBM11_UPD_USER_ID, P005723_A541TBM11_UPD_PROG_NM,
            P005723_n541TBM11_UPD_PROG_NM, P005723_A542TBM11_UPD_CNT, P005723_n542TBM11_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005725_A64TBM24_STUDY_ID, P005725_A65TBM24_DOM_CD, P005725_A66TBM24_DOM_VAR_NM, P005725_A702TBM24_DOM_ITM_GRP_OID, P005725_n702TBM24_DOM_ITM_GRP_OID, P005725_A703TBM24_DOM_ITM_GRP_ATTR_SEQ, P005725_n703TBM24_DOM_ITM_GRP_ATTR_SEQ, P005725_A704TBM24_DOM_ITM_GRP_ROWNO, P005725_n704TBM24_DOM_ITM_GRP_ROWNO, P005725_A705TBM24_CRF_ITEM_NM,
            P005725_n705TBM24_CRF_ITEM_NM, P005725_A67TBM24_CRF_ITEM_DIV, P005725_A635TBM24_IDENTIFICATION_CD, P005725_n635TBM24_IDENTIFICATION_CD, P005725_A636TBM24_TEXT_MAXLENGTH, P005725_n636TBM24_TEXT_MAXLENGTH, P005725_A637TBM24_TEXT_MAXROWS, P005725_n637TBM24_TEXT_MAXROWS, P005725_A638TBM24_DECIMAL_DIGITS, P005725_n638TBM24_DECIMAL_DIGITS,
            P005725_A639TBM24_TEXT, P005725_n639TBM24_TEXT, P005725_A640TBM24_FIXED_VALUE, P005725_n640TBM24_FIXED_VALUE, P005725_A641TBM24_CHK_FALSE_INNER_VALUE, P005725_n641TBM24_CHK_FALSE_INNER_VALUE, P005725_A706TBM24_REQUIRED_INPUT_FLG, P005725_n706TBM24_REQUIRED_INPUT_FLG, P005725_A707TBM24_MIN_VALUE, P005725_n707TBM24_MIN_VALUE,
            P005725_A708TBM24_MAX_VALUE, P005725_n708TBM24_MAX_VALUE, P005725_A543TBM24_ORDER, P005725_n543TBM24_ORDER, P005725_A544TBM24_DEL_FLG, P005725_n544TBM24_DEL_FLG, P005725_A545TBM24_CRT_DATETIME, P005725_n545TBM24_CRT_DATETIME, P005725_A546TBM24_CRT_USER_ID, P005725_n546TBM24_CRT_USER_ID,
            P005725_A547TBM24_CRT_PROG_NM, P005725_n547TBM24_CRT_PROG_NM, P005725_A548TBM24_UPD_DATETIME, P005725_n548TBM24_UPD_DATETIME, P005725_A549TBM24_UPD_USER_ID, P005725_n549TBM24_UPD_USER_ID, P005725_A550TBM24_UPD_PROG_NM, P005725_n550TBM24_UPD_PROG_NM, P005725_A551TBM24_UPD_CNT, P005725_n551TBM24_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005727_A107TBM23_STUDY_ID, P005727_A108TBM23_USER_ID, P005727_A109TBM23_STYDY_AUTH_CD, P005727_A385TBM23_DEL_FLG, P005727_n385TBM23_DEL_FLG, P005727_A386TBM23_CRT_DATETIME, P005727_n386TBM23_CRT_DATETIME, P005727_A387TBM23_CRT_USER_ID, P005727_n387TBM23_CRT_USER_ID, P005727_A388TBM23_CRT_PROG_NM,
            P005727_n388TBM23_CRT_PROG_NM, P005727_A389TBM23_UPD_DATETIME, P005727_n389TBM23_UPD_DATETIME, P005727_A390TBM23_UPD_USER_ID, P005727_n390TBM23_UPD_USER_ID, P005727_A391TBM23_UPD_PROG_NM, P005727_n391TBM23_UPD_PROG_NM, P005727_A392TBM23_UPD_CNT, P005727_n392TBM23_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005729_A17TBM22_STUDY_ID, P005729_A18TBM22_SITE_ID, P005729_A377TBM22_DEL_FLG, P005729_n377TBM22_DEL_FLG, P005729_A378TBM22_CRT_DATETIME, P005729_n378TBM22_CRT_DATETIME, P005729_A379TBM22_CRT_USER_ID, P005729_n379TBM22_CRT_USER_ID, P005729_A380TBM22_CRT_PROG_NM, P005729_n380TBM22_CRT_PROG_NM,
            P005729_A381TBM22_UPD_DATETIME, P005729_n381TBM22_UPD_DATETIME, P005729_A382TBM22_UPD_USER_ID, P005729_n382TBM22_UPD_USER_ID, P005729_A383TBM22_UPD_PROG_NM, P005729_n383TBM22_UPD_PROG_NM, P005729_A384TBM22_UPD_CNT, P005729_n384TBM22_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005731_A25TBM26_STUDY_ID, P005731_A26TBM26_LIST_CD, P005731_A27TBM26_LIST_ITEM_NO, P005731_A561TBM26_LIST_ITEM_NAME, P005731_n561TBM26_LIST_ITEM_NAME, P005731_A562TBM26_INNER_VALUE, P005731_n562TBM26_INNER_VALUE, P005731_A563TBM26_DEL_FLG, P005731_n563TBM26_DEL_FLG, P005731_A564TBM26_CRT_DATETIME,
            P005731_n564TBM26_CRT_DATETIME, P005731_A565TBM26_CRT_USER_ID, P005731_n565TBM26_CRT_USER_ID, P005731_A566TBM26_CRT_PROG_NM, P005731_n566TBM26_CRT_PROG_NM, P005731_A567TBM26_UPD_DATETIME, P005731_n567TBM26_UPD_DATETIME, P005731_A568TBM26_UPD_USER_ID, P005731_n568TBM26_UPD_USER_ID, P005731_A569TBM26_UPD_PROG_NM,
            P005731_n569TBM26_UPD_PROG_NM, P005731_A570TBM26_UPD_CNT, P005731_n570TBM26_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005733_A23TBM25_STUDY_ID, P005733_A24TBM25_LIST_CD, P005733_A552TBM25_LIST_NM, P005733_n552TBM25_LIST_NM, P005733_A553TBM25_DEL_FLG, P005733_n553TBM25_DEL_FLG, P005733_A554TBM25_CRT_DATETIME, P005733_n554TBM25_CRT_DATETIME, P005733_A555TBM25_CRT_USER_ID, P005733_n555TBM25_CRT_USER_ID,
            P005733_A556TBM25_CRT_PROG_NM, P005733_n556TBM25_CRT_PROG_NM, P005733_A557TBM25_UPD_DATETIME, P005733_n557TBM25_UPD_DATETIME, P005733_A558TBM25_UPD_USER_ID, P005733_n558TBM25_UPD_USER_ID, P005733_A559TBM25_UPD_PROG_NM, P005733_n559TBM25_UPD_PROG_NM, P005733_A560TBM25_UPD_CNT, P005733_n560TBM25_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005735_A35TBM36_STUDY_ID, P005735_A36TBM36_CRF_ID, P005735_A37TBM36_COND_NO, P005735_A38TBM36_SELECT_CRF_ID, P005735_A589TBM36_DEL_FLG, P005735_n589TBM36_DEL_FLG, P005735_A590TBM36_CRT_DATETIME, P005735_n590TBM36_CRT_DATETIME, P005735_A591TBM36_CRT_USER_ID, P005735_n591TBM36_CRT_USER_ID,
            P005735_A592TBM36_CRT_PROG_NM, P005735_n592TBM36_CRT_PROG_NM, P005735_A593TBM36_UPD_DATETIME, P005735_n593TBM36_UPD_DATETIME, P005735_A594TBM36_UPD_USER_ID, P005735_n594TBM36_UPD_USER_ID, P005735_A595TBM36_UPD_PROG_NM, P005735_n595TBM36_UPD_PROG_NM, P005735_A596TBM36_UPD_CNT, P005735_n596TBM36_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005737_A76TBM33_STUDY_ID, P005737_A77TBM33_CRF_ID, P005737_A78TBM33_COND_NO, P005737_A502TBM33_COND_NM, P005737_n502TBM33_COND_NM, P005737_A414TBM33_EXPRESSION, P005737_n414TBM33_EXPRESSION, P005737_A503TBM33_COND_DIV, P005737_n503TBM33_COND_DIV, P005737_A504TBM33_CRF_ITEM_CD,
            P005737_n504TBM33_CRF_ITEM_CD, P005737_A415TBM33_PRIOR_NO, P005737_n415TBM33_PRIOR_NO, P005737_A505TBM33_ERR_DIV, P005737_n505TBM33_ERR_DIV, P005737_A506TBM33_ERR_MSG, P005737_n506TBM33_ERR_MSG, P005737_A646TBM33_ENABLED_FLG, P005737_n646TBM33_ENABLED_FLG, P005737_A696TBM33_REQUIRED_INPUT_FLG,
            P005737_n696TBM33_REQUIRED_INPUT_FLG, P005737_A697TBM33_NUMERIC_RANGE_FLG, P005737_n697TBM33_NUMERIC_RANGE_FLG, P005737_A416TBM33_DEL_FLG, P005737_n416TBM33_DEL_FLG, P005737_A417TBM33_CRT_DATETIME, P005737_n417TBM33_CRT_DATETIME, P005737_A418TBM33_CRT_USER_ID, P005737_n418TBM33_CRT_USER_ID, P005737_A419TBM33_CRT_PROG_NM,
            P005737_n419TBM33_CRT_PROG_NM, P005737_A420TBM33_UPD_DATETIME, P005737_n420TBM33_UPD_DATETIME, P005737_A421TBM33_UPD_USER_ID, P005737_n421TBM33_UPD_USER_ID, P005737_A422TBM33_UPD_PROG_NM, P005737_n422TBM33_UPD_PROG_NM, P005737_A423TBM33_UPD_CNT, P005737_n423TBM33_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005739_A70TBM32_STUDY_ID, P005739_A71TBM32_CRF_ID, P005739_A72TBM32_CRF_ITEM_CD, P005739_A405TBM32_CRF_ITEM_NM, P005739_n405TBM32_CRF_ITEM_NM, P005739_A74TBM32_CRF_ITEM_DIV, P005739_n74TBM32_CRF_ITEM_DIV, P005739_A73TBM32_CRF_ITEM_GRP_CD, P005739_n73TBM32_CRF_ITEM_GRP_CD, P005739_A507TBM32_CRF_ITEM_GRP_ORDER,
            P005739_n507TBM32_CRF_ITEM_GRP_ORDER, P005739_A508TBM32_LOCATION_X, P005739_n508TBM32_LOCATION_X, P005739_A509TBM32_LOCATION_Y, P005739_n509TBM32_LOCATION_Y, P005739_A510TBM32_LOCATION_X2, P005739_n510TBM32_LOCATION_X2, P005739_A511TBM32_LOCATION_Y2, P005739_n511TBM32_LOCATION_Y2, P005739_A512TBM32_TEXT_ALIGN_DIV,
            P005739_n512TBM32_TEXT_ALIGN_DIV, P005739_A516TBM32_TEXT_MAXROWS, P005739_n516TBM32_TEXT_MAXROWS, P005739_A517TBM32_TEXT_MAXLENGTH, P005739_n517TBM32_TEXT_MAXLENGTH, P005739_A518TBM32_DECIMAL_DIGITS, P005739_n518TBM32_DECIMAL_DIGITS, P005739_A522TBM32_CHK_TRUE_INNER_VALUE, P005739_n522TBM32_CHK_TRUE_INNER_VALUE, P005739_A523TBM32_CHK_FALSE_INNER_VALUE,
            P005739_n523TBM32_CHK_FALSE_INNER_VALUE, P005739_A527TBM32_FIXED_VALUE, P005739_n527TBM32_FIXED_VALUE, P005739_A525TBM32_LIST_CD, P005739_n525TBM32_LIST_CD, P005739_A526TBM32_IMAGE_CD, P005739_n526TBM32_IMAGE_CD, P005739_A524TBM32_TEXT, P005739_n524TBM32_TEXT, P005739_A513TBM32_FONT_SIZE,
            P005739_n513TBM32_FONT_SIZE, P005739_A514TBM32_FONT_UL_FLG, P005739_n514TBM32_FONT_UL_FLG, P005739_A515TBM32_FONT_COLOR_DIV, P005739_n515TBM32_FONT_COLOR_DIV, P005739_A521TBM32_LINE_SIZE_DIV, P005739_n521TBM32_LINE_SIZE_DIV, P005739_A689TBM32_LINE_COLOR_DIV, P005739_n689TBM32_LINE_COLOR_DIV, P005739_A519TBM32_LINE_START_POINT_DIV,
            P005739_n519TBM32_LINE_START_POINT_DIV, P005739_A520TBM32_LINE_END_POINT_DIV, P005739_n520TBM32_LINE_END_POINT_DIV, P005739_A690TBM32_LINE_ANGLE, P005739_n690TBM32_LINE_ANGLE, P005739_A644TBM32_AUTH_LVL_MIN, P005739_n644TBM32_AUTH_LVL_MIN, P005739_A645TBM32_ZORDER, P005739_n645TBM32_ZORDER, P005739_A691TBM32_TAB_ORDER,
            P005739_n691TBM32_TAB_ORDER, P005739_A692TBM32_TABSTOP_FLG, P005739_n692TBM32_TABSTOP_FLG, P005739_A693TBM32_REQUIRED_INPUT_FLG, P005739_n693TBM32_REQUIRED_INPUT_FLG, P005739_A694TBM32_MIN_VALUE, P005739_n694TBM32_MIN_VALUE, P005739_A695TBM32_MAX_VALUE, P005739_n695TBM32_MAX_VALUE, P005739_A406TBM32_CRF_ITEM_NOTE,
            P005739_n406TBM32_CRF_ITEM_NOTE, P005739_A774TBM32_REF_CRF_ID, P005739_n774TBM32_REF_CRF_ID, P005739_A775TBM32_REF_CRF_ITEM_CD, P005739_n775TBM32_REF_CRF_ITEM_CD, P005739_A75TBM32_DEL_FLG, P005739_n75TBM32_DEL_FLG, P005739_A407TBM32_CRT_DATETIME, P005739_n407TBM32_CRT_DATETIME, P005739_A408TBM32_CRT_USER_ID,
            P005739_n408TBM32_CRT_USER_ID, P005739_A409TBM32_CRT_PROG_NM, P005739_n409TBM32_CRT_PROG_NM, P005739_A410TBM32_UPD_DATETIME, P005739_n410TBM32_UPD_DATETIME, P005739_A411TBM32_UPD_USER_ID, P005739_n411TBM32_UPD_USER_ID, P005739_A412TBM32_UPD_PROG_NM, P005739_n412TBM32_UPD_PROG_NM, P005739_A413TBM32_UPD_CNT,
            P005739_n413TBM32_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005741_A28TBM34_STUDY_ID, P005741_A29TBM34_CRF_ID, P005741_A30TBM34_STYDY_AUTH_CD, P005741_A571TBM34_DISPLAY_FLG, P005741_n571TBM34_DISPLAY_FLG, P005741_A572TBM34_DEL_FLG, P005741_n572TBM34_DEL_FLG, P005741_A573TBM34_CRT_DATETIME, P005741_n573TBM34_CRT_DATETIME, P005741_A574TBM34_CRT_USER_ID,
            P005741_n574TBM34_CRT_USER_ID, P005741_A575TBM34_CRT_PROG_NM, P005741_n575TBM34_CRT_PROG_NM, P005741_A576TBM34_UPD_DATETIME, P005741_n576TBM34_UPD_DATETIME, P005741_A577TBM34_UPD_USER_ID, P005741_n577TBM34_UPD_USER_ID, P005741_A578TBM34_UPD_PROG_NM, P005741_n578TBM34_UPD_PROG_NM, P005741_A579TBM34_UPD_CNT,
            P005741_n579TBM34_UPD_CNT
            }
            , new Object[] {
            }
            , new Object[] {
            P005743_A68TBM31_STUDY_ID, P005743_A69TBM31_CRF_ID, P005743_A393TBM31_CRF_NM, P005743_n393TBM31_CRF_NM, P005743_A642TBM31_CRF_SNM, P005743_n642TBM31_CRF_SNM, P005743_A394TBM31_GRID_SIZE, P005743_n394TBM31_GRID_SIZE, P005743_A395TBM31_ORDER, P005743_n395TBM31_ORDER,
            P005743_A528TBM31_DEF_VISIT_NO, P005743_n528TBM31_DEF_VISIT_NO, P005743_A529TBM31_DEF_DOMAIN_CD, P005743_n529TBM31_DEF_DOMAIN_CD, P005743_A643TBM31_STATUS, P005743_n643TBM31_STATUS, P005743_A396TBM31_NOTE, P005743_n396TBM31_NOTE, P005743_A397TBM31_DEL_FLG, P005743_n397TBM31_DEL_FLG,
            P005743_A398TBM31_CRT_DATETIME, P005743_n398TBM31_CRT_DATETIME, P005743_A399TBM31_CRT_USER_ID, P005743_n399TBM31_CRT_USER_ID, P005743_A400TBM31_CRT_PROG_NM, P005743_n400TBM31_CRT_PROG_NM, P005743_A401TBM31_UPD_DATETIME, P005743_n401TBM31_UPD_DATETIME, P005743_A402TBM31_UPD_USER_ID, P005743_n402TBM31_UPD_USER_ID,
            P005743_A403TBM31_UPD_PROG_NM, P005743_n403TBM31_UPD_PROG_NM, P005743_A404TBM31_UPD_CNT, P005743_n404TBM31_UPD_CNT
            }
            , new Object[] {
            }
         }
      );
      pr_default.setErrorHandler(this);
      AV25Pgmname = "B402_PC19_STUDY_DEL" ;
      /* GeneXus formulas. */
      AV25Pgmname = "B402_PC19_STUDY_DEL" ;
      Gx_err = (short)(0) ;
   }

   private byte A947TBM44_CRF_EDA_NO ;
   private byte A637TBM24_TEXT_MAXROWS ;
   private byte A638TBM24_DECIMAL_DIGITS ;
   private byte A516TBM32_TEXT_MAXROWS ;
   private byte A518TBM32_DECIMAL_DIGITS ;
   private byte A513TBM32_FONT_SIZE ;
   private byte A521TBM32_LINE_SIZE_DIV ;
   private byte A644TBM32_AUTH_LVL_MIN ;
   private short AV13W_RTN_CD ;
   private short A32TBM35_CRF_ID ;
   private short A20TBM41_CRF_ID ;
   private short A946TBM44_CRF_ID ;
   private short A978TBM45_FILTER_NO ;
   private short A80TBM37_CRF_ID ;
   private short A501TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private short A86TBM37_DOM_ITM_GRP_ROWNO ;
   private short A703TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private short A704TBM24_DOM_ITM_GRP_ROWNO ;
   private short A636TBM24_TEXT_MAXLENGTH ;
   private short A27TBM26_LIST_ITEM_NO ;
   private short A36TBM36_CRF_ID ;
   private short A37TBM36_COND_NO ;
   private short A38TBM36_SELECT_CRF_ID ;
   private short A77TBM33_CRF_ID ;
   private short A78TBM33_COND_NO ;
   private short A415TBM33_PRIOR_NO ;
   private short A71TBM32_CRF_ID ;
   private short A507TBM32_CRF_ITEM_GRP_ORDER ;
   private short A508TBM32_LOCATION_X ;
   private short A509TBM32_LOCATION_Y ;
   private short A510TBM32_LOCATION_X2 ;
   private short A511TBM32_LOCATION_Y2 ;
   private short A517TBM32_TEXT_MAXLENGTH ;
   private short A690TBM32_LINE_ANGLE ;
   private short A645TBM32_ZORDER ;
   private short A691TBM32_TAB_ORDER ;
   private short A774TBM32_REF_CRF_ID ;
   private short A29TBM34_CRF_ID ;
   private short A69TBM31_CRF_ID ;
   private short A394TBM31_GRID_SIZE ;
   private short Gx_err ;
   private int A918TBM43_ORDER ;
   private int A909TBM42_ORDER ;
   private int A948TBM44_VISIT_NO ;
   private int A83TBM37_VISIT_NO ;
   private int A543TBM24_ORDER ;
   private int A395TBM31_ORDER ;
   private int A528TBM31_DEF_VISIT_NO ;
   private int GXActiveErrHndl ;
   private long A31TBM35_STUDY_ID ;
   private long A588TBM35_UPD_CNT ;
   private long A19TBM41_STUDY_ID ;
   private long A432TBM41_UPD_CNT ;
   private long A200TBM43_STUDY_ID ;
   private long A926TBM43_UPD_CNT ;
   private long A203TBM42_STUDY_ID ;
   private long A900TBM42_UPD_CNT ;
   private long A945TBM44_STUDY_ID ;
   private long A956TBM44_UPD_CNT ;
   private long A977TBM45_STUDY_ID ;
   private long A989TBM45_UPD_CNT ;
   private long A79TBM37_STUDY_ID ;
   private long A440TBM37_UPD_CNT ;
   private long A606TBM11_STUDY_ID ;
   private long A542TBM11_UPD_CNT ;
   private long A64TBM24_STUDY_ID ;
   private long A551TBM24_UPD_CNT ;
   private long A107TBM23_STUDY_ID ;
   private long A392TBM23_UPD_CNT ;
   private long A17TBM22_STUDY_ID ;
   private long A384TBM22_UPD_CNT ;
   private long A25TBM26_STUDY_ID ;
   private long A570TBM26_UPD_CNT ;
   private long A23TBM25_STUDY_ID ;
   private long A560TBM25_UPD_CNT ;
   private long A35TBM36_STUDY_ID ;
   private long A596TBM36_UPD_CNT ;
   private long A76TBM33_STUDY_ID ;
   private long A423TBM33_UPD_CNT ;
   private long A70TBM32_STUDY_ID ;
   private long A515TBM32_FONT_COLOR_DIV ;
   private long A689TBM32_LINE_COLOR_DIV ;
   private long A413TBM32_UPD_CNT ;
   private long A28TBM34_STUDY_ID ;
   private long A579TBM34_UPD_CNT ;
   private long A68TBM31_STUDY_ID ;
   private long A404TBM31_UPD_CNT ;
   private String scmdbuf ;
   private String AV25Pgmname ;
   private String GXt_char1 ;
   private String GXv_char2[] ;
   private String GXKey ;
   private String GXEncryptionTmp ;
   private String Gx_emsg ;
   private java.util.Date A582TBM35_CRT_DATETIME ;
   private java.util.Date A585TBM35_UPD_DATETIME ;
   private java.util.Date A426TBM41_CRT_DATETIME ;
   private java.util.Date A429TBM41_UPD_DATETIME ;
   private java.util.Date A920TBM43_CRT_DATETIME ;
   private java.util.Date A923TBM43_UPD_DATETIME ;
   private java.util.Date A894TBM42_CRT_DATETIME ;
   private java.util.Date A897TBM42_UPD_DATETIME ;
   private java.util.Date A950TBM44_CRT_DATETIME ;
   private java.util.Date A953TBM44_UPD_DATETIME ;
   private java.util.Date A983TBM45_CRT_DATETIME ;
   private java.util.Date A986TBM45_UPD_DATETIME ;
   private java.util.Date A434TBM37_CRT_DATETIME ;
   private java.util.Date A437TBM37_UPD_DATETIME ;
   private java.util.Date A536TBM11_CRT_DATETIME ;
   private java.util.Date A539TBM11_UPD_DATETIME ;
   private java.util.Date A545TBM24_CRT_DATETIME ;
   private java.util.Date A548TBM24_UPD_DATETIME ;
   private java.util.Date A386TBM23_CRT_DATETIME ;
   private java.util.Date A389TBM23_UPD_DATETIME ;
   private java.util.Date A378TBM22_CRT_DATETIME ;
   private java.util.Date A381TBM22_UPD_DATETIME ;
   private java.util.Date A564TBM26_CRT_DATETIME ;
   private java.util.Date A567TBM26_UPD_DATETIME ;
   private java.util.Date A554TBM25_CRT_DATETIME ;
   private java.util.Date A557TBM25_UPD_DATETIME ;
   private java.util.Date A590TBM36_CRT_DATETIME ;
   private java.util.Date A593TBM36_UPD_DATETIME ;
   private java.util.Date A417TBM33_CRT_DATETIME ;
   private java.util.Date A420TBM33_UPD_DATETIME ;
   private java.util.Date A407TBM32_CRT_DATETIME ;
   private java.util.Date A410TBM32_UPD_DATETIME ;
   private java.util.Date A573TBM34_CRT_DATETIME ;
   private java.util.Date A576TBM34_UPD_DATETIME ;
   private java.util.Date A398TBM31_CRT_DATETIME ;
   private java.util.Date A401TBM31_UPD_DATETIME ;
   private boolean returnInSub ;
   private boolean n580TBM35_DISPLAY_FLG ;
   private boolean n581TBM35_DEL_FLG ;
   private boolean n582TBM35_CRT_DATETIME ;
   private boolean n583TBM35_CRT_USER_ID ;
   private boolean n584TBM35_CRT_PROG_NM ;
   private boolean n585TBM35_UPD_DATETIME ;
   private boolean n586TBM35_UPD_USER_ID ;
   private boolean n587TBM35_UPD_PROG_NM ;
   private boolean n588TBM35_UPD_CNT ;
   private boolean n424TBM41_NCM_METADATA_ID ;
   private boolean n425TBM41_DEL_FLG ;
   private boolean n426TBM41_CRT_DATETIME ;
   private boolean n427TBM41_CRT_USER_ID ;
   private boolean n428TBM41_CRT_PROG_NM ;
   private boolean n429TBM41_UPD_DATETIME ;
   private boolean n430TBM41_UPD_USER_ID ;
   private boolean n431TBM41_UPD_PROG_NM ;
   private boolean n432TBM41_UPD_CNT ;
   private boolean n910TBM43_VAR_DESC ;
   private boolean n911TBM43_SDTM_FLG ;
   private boolean n912TBM43_CDASH_FLG ;
   private boolean n913TBM43_INPUT_TYPE_DIV ;
   private boolean n914TBM43_REQUIRED_FLG ;
   private boolean n915TBM43_SAS_FIELD_NM ;
   private boolean n916TBM43_ODM_DATA_TYPE ;
   private boolean n917TBM43_NOTE ;
   private boolean n918TBM43_ORDER ;
   private boolean n919TBM43_DEL_FLG ;
   private boolean n920TBM43_CRT_DATETIME ;
   private boolean n921TBM43_CRT_USER_ID ;
   private boolean n922TBM43_CRT_PROG_NM ;
   private boolean n923TBM43_UPD_DATETIME ;
   private boolean n924TBM43_UPD_USER_ID ;
   private boolean n925TBM43_UPD_PROG_NM ;
   private boolean n926TBM43_UPD_CNT ;
   private boolean n905TBM42_DOM_ENM ;
   private boolean n906TBM42_DOM_JNM ;
   private boolean n907TBM42_DOM_GRP_NM ;
   private boolean n908TBM42_NOTE ;
   private boolean n909TBM42_ORDER ;
   private boolean n893TBM42_DEL_FLG ;
   private boolean n894TBM42_CRT_DATETIME ;
   private boolean n895TBM42_CRT_USER_ID ;
   private boolean n896TBM42_CRT_PROG_NM ;
   private boolean n897TBM42_UPD_DATETIME ;
   private boolean n898TBM42_UPD_USER_ID ;
   private boolean n899TBM42_UPD_PROG_NM ;
   private boolean n900TBM42_UPD_CNT ;
   private boolean n948TBM44_VISIT_NO ;
   private boolean n949TBM44_DEL_FLG ;
   private boolean n950TBM44_CRT_DATETIME ;
   private boolean n951TBM44_CRT_USER_ID ;
   private boolean n952TBM44_CRT_PROG_NM ;
   private boolean n953TBM44_UPD_DATETIME ;
   private boolean n954TBM44_UPD_USER_ID ;
   private boolean n955TBM44_UPD_PROG_NM ;
   private boolean n956TBM44_UPD_CNT ;
   private boolean n980TBM45_FILETR_NM ;
   private boolean n981TBM45_IN_CRF_ID ;
   private boolean n982TBM45_DEL_FLG ;
   private boolean n983TBM45_CRT_DATETIME ;
   private boolean n984TBM45_CRT_USER_ID ;
   private boolean n985TBM45_CRT_PROG_NM ;
   private boolean n986TBM45_UPD_DATETIME ;
   private boolean n987TBM45_UPD_USER_ID ;
   private boolean n988TBM45_UPD_PROG_NM ;
   private boolean n989TBM45_UPD_CNT ;
   private boolean n83TBM37_VISIT_NO ;
   private boolean n84TBM37_DOM_CD ;
   private boolean n500TBM37_DOM_VAR_NM ;
   private boolean n85TBM37_DOM_ITM_GRP_OID ;
   private boolean n501TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean n86TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean n433TBM37_DEL_FLG ;
   private boolean n434TBM37_CRT_DATETIME ;
   private boolean n435TBM37_CRT_USER_ID ;
   private boolean n436TBM37_CRT_PROG_NM ;
   private boolean n437TBM37_UPD_DATETIME ;
   private boolean n438TBM37_UPD_USER_ID ;
   private boolean n439TBM37_UPD_PROG_NM ;
   private boolean n440TBM37_UPD_CNT ;
   private boolean n606TBM11_STUDY_ID ;
   private boolean n634TBM11_IMAGE_NM ;
   private boolean n534TBM11_FILE_NAME ;
   private boolean n535TBM11_DEL_FLG ;
   private boolean n536TBM11_CRT_DATETIME ;
   private boolean n537TBM11_CRT_USER_ID ;
   private boolean n538TBM11_CRT_PROG_NM ;
   private boolean n539TBM11_UPD_DATETIME ;
   private boolean n540TBM11_UPD_USER_ID ;
   private boolean n541TBM11_UPD_PROG_NM ;
   private boolean n542TBM11_UPD_CNT ;
   private boolean n702TBM24_DOM_ITM_GRP_OID ;
   private boolean n703TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean n704TBM24_DOM_ITM_GRP_ROWNO ;
   private boolean n705TBM24_CRF_ITEM_NM ;
   private boolean n635TBM24_IDENTIFICATION_CD ;
   private boolean n636TBM24_TEXT_MAXLENGTH ;
   private boolean n637TBM24_TEXT_MAXROWS ;
   private boolean n638TBM24_DECIMAL_DIGITS ;
   private boolean n639TBM24_TEXT ;
   private boolean n640TBM24_FIXED_VALUE ;
   private boolean n641TBM24_CHK_FALSE_INNER_VALUE ;
   private boolean n706TBM24_REQUIRED_INPUT_FLG ;
   private boolean n707TBM24_MIN_VALUE ;
   private boolean n708TBM24_MAX_VALUE ;
   private boolean n543TBM24_ORDER ;
   private boolean n544TBM24_DEL_FLG ;
   private boolean n545TBM24_CRT_DATETIME ;
   private boolean n546TBM24_CRT_USER_ID ;
   private boolean n547TBM24_CRT_PROG_NM ;
   private boolean n548TBM24_UPD_DATETIME ;
   private boolean n549TBM24_UPD_USER_ID ;
   private boolean n550TBM24_UPD_PROG_NM ;
   private boolean n551TBM24_UPD_CNT ;
   private boolean n385TBM23_DEL_FLG ;
   private boolean n386TBM23_CRT_DATETIME ;
   private boolean n387TBM23_CRT_USER_ID ;
   private boolean n388TBM23_CRT_PROG_NM ;
   private boolean n389TBM23_UPD_DATETIME ;
   private boolean n390TBM23_UPD_USER_ID ;
   private boolean n391TBM23_UPD_PROG_NM ;
   private boolean n392TBM23_UPD_CNT ;
   private boolean n377TBM22_DEL_FLG ;
   private boolean n378TBM22_CRT_DATETIME ;
   private boolean n379TBM22_CRT_USER_ID ;
   private boolean n380TBM22_CRT_PROG_NM ;
   private boolean n381TBM22_UPD_DATETIME ;
   private boolean n382TBM22_UPD_USER_ID ;
   private boolean n383TBM22_UPD_PROG_NM ;
   private boolean n384TBM22_UPD_CNT ;
   private boolean n561TBM26_LIST_ITEM_NAME ;
   private boolean n562TBM26_INNER_VALUE ;
   private boolean n563TBM26_DEL_FLG ;
   private boolean n564TBM26_CRT_DATETIME ;
   private boolean n565TBM26_CRT_USER_ID ;
   private boolean n566TBM26_CRT_PROG_NM ;
   private boolean n567TBM26_UPD_DATETIME ;
   private boolean n568TBM26_UPD_USER_ID ;
   private boolean n569TBM26_UPD_PROG_NM ;
   private boolean n570TBM26_UPD_CNT ;
   private boolean n552TBM25_LIST_NM ;
   private boolean n553TBM25_DEL_FLG ;
   private boolean n554TBM25_CRT_DATETIME ;
   private boolean n555TBM25_CRT_USER_ID ;
   private boolean n556TBM25_CRT_PROG_NM ;
   private boolean n557TBM25_UPD_DATETIME ;
   private boolean n558TBM25_UPD_USER_ID ;
   private boolean n559TBM25_UPD_PROG_NM ;
   private boolean n560TBM25_UPD_CNT ;
   private boolean n589TBM36_DEL_FLG ;
   private boolean n590TBM36_CRT_DATETIME ;
   private boolean n591TBM36_CRT_USER_ID ;
   private boolean n592TBM36_CRT_PROG_NM ;
   private boolean n593TBM36_UPD_DATETIME ;
   private boolean n594TBM36_UPD_USER_ID ;
   private boolean n595TBM36_UPD_PROG_NM ;
   private boolean n596TBM36_UPD_CNT ;
   private boolean n502TBM33_COND_NM ;
   private boolean n414TBM33_EXPRESSION ;
   private boolean n503TBM33_COND_DIV ;
   private boolean n504TBM33_CRF_ITEM_CD ;
   private boolean n415TBM33_PRIOR_NO ;
   private boolean n505TBM33_ERR_DIV ;
   private boolean n506TBM33_ERR_MSG ;
   private boolean n646TBM33_ENABLED_FLG ;
   private boolean n696TBM33_REQUIRED_INPUT_FLG ;
   private boolean n697TBM33_NUMERIC_RANGE_FLG ;
   private boolean n416TBM33_DEL_FLG ;
   private boolean n417TBM33_CRT_DATETIME ;
   private boolean n418TBM33_CRT_USER_ID ;
   private boolean n419TBM33_CRT_PROG_NM ;
   private boolean n420TBM33_UPD_DATETIME ;
   private boolean n421TBM33_UPD_USER_ID ;
   private boolean n422TBM33_UPD_PROG_NM ;
   private boolean n423TBM33_UPD_CNT ;
   private boolean n405TBM32_CRF_ITEM_NM ;
   private boolean n74TBM32_CRF_ITEM_DIV ;
   private boolean n73TBM32_CRF_ITEM_GRP_CD ;
   private boolean n507TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean n508TBM32_LOCATION_X ;
   private boolean n509TBM32_LOCATION_Y ;
   private boolean n510TBM32_LOCATION_X2 ;
   private boolean n511TBM32_LOCATION_Y2 ;
   private boolean n512TBM32_TEXT_ALIGN_DIV ;
   private boolean n516TBM32_TEXT_MAXROWS ;
   private boolean n517TBM32_TEXT_MAXLENGTH ;
   private boolean n518TBM32_DECIMAL_DIGITS ;
   private boolean n522TBM32_CHK_TRUE_INNER_VALUE ;
   private boolean n523TBM32_CHK_FALSE_INNER_VALUE ;
   private boolean n527TBM32_FIXED_VALUE ;
   private boolean n525TBM32_LIST_CD ;
   private boolean n526TBM32_IMAGE_CD ;
   private boolean n524TBM32_TEXT ;
   private boolean n513TBM32_FONT_SIZE ;
   private boolean n514TBM32_FONT_UL_FLG ;
   private boolean n515TBM32_FONT_COLOR_DIV ;
   private boolean n521TBM32_LINE_SIZE_DIV ;
   private boolean n689TBM32_LINE_COLOR_DIV ;
   private boolean n519TBM32_LINE_START_POINT_DIV ;
   private boolean n520TBM32_LINE_END_POINT_DIV ;
   private boolean n690TBM32_LINE_ANGLE ;
   private boolean n644TBM32_AUTH_LVL_MIN ;
   private boolean n645TBM32_ZORDER ;
   private boolean n691TBM32_TAB_ORDER ;
   private boolean n692TBM32_TABSTOP_FLG ;
   private boolean n693TBM32_REQUIRED_INPUT_FLG ;
   private boolean n694TBM32_MIN_VALUE ;
   private boolean n695TBM32_MAX_VALUE ;
   private boolean n406TBM32_CRF_ITEM_NOTE ;
   private boolean n774TBM32_REF_CRF_ID ;
   private boolean n775TBM32_REF_CRF_ITEM_CD ;
   private boolean n75TBM32_DEL_FLG ;
   private boolean n407TBM32_CRT_DATETIME ;
   private boolean n408TBM32_CRT_USER_ID ;
   private boolean n409TBM32_CRT_PROG_NM ;
   private boolean n410TBM32_UPD_DATETIME ;
   private boolean n411TBM32_UPD_USER_ID ;
   private boolean n412TBM32_UPD_PROG_NM ;
   private boolean n413TBM32_UPD_CNT ;
   private boolean n571TBM34_DISPLAY_FLG ;
   private boolean n572TBM34_DEL_FLG ;
   private boolean n573TBM34_CRT_DATETIME ;
   private boolean n574TBM34_CRT_USER_ID ;
   private boolean n575TBM34_CRT_PROG_NM ;
   private boolean n576TBM34_UPD_DATETIME ;
   private boolean n577TBM34_UPD_USER_ID ;
   private boolean n578TBM34_UPD_PROG_NM ;
   private boolean n579TBM34_UPD_CNT ;
   private boolean n393TBM31_CRF_NM ;
   private boolean n642TBM31_CRF_SNM ;
   private boolean n394TBM31_GRID_SIZE ;
   private boolean n395TBM31_ORDER ;
   private boolean n528TBM31_DEF_VISIT_NO ;
   private boolean n529TBM31_DEF_DOMAIN_CD ;
   private boolean n643TBM31_STATUS ;
   private boolean n396TBM31_NOTE ;
   private boolean n397TBM31_DEL_FLG ;
   private boolean n398TBM31_CRT_DATETIME ;
   private boolean n399TBM31_CRT_USER_ID ;
   private boolean n400TBM31_CRT_PROG_NM ;
   private boolean n401TBM31_UPD_DATETIME ;
   private boolean n402TBM31_UPD_USER_ID ;
   private boolean n403TBM31_UPD_PROG_NM ;
   private boolean n404TBM31_UPD_CNT ;
   private String AV14W_RTN_MSG ;
   private String AV8C_APP_ID ;
   private String A33TBM35_CRF_ITEM_CD ;
   private String A34TBM35_STUDY_AUTH_CD ;
   private String A580TBM35_DISPLAY_FLG ;
   private String A581TBM35_DEL_FLG ;
   private String A583TBM35_CRT_USER_ID ;
   private String A584TBM35_CRT_PROG_NM ;
   private String A586TBM35_UPD_USER_ID ;
   private String A587TBM35_UPD_PROG_NM ;
   private String A21TBM41_CRF_ITEM_GRP_DIV ;
   private String A22TBM41_CRF_ITEM_GRP_CD ;
   private String A424TBM41_NCM_METADATA_ID ;
   private String A425TBM41_DEL_FLG ;
   private String A427TBM41_CRT_USER_ID ;
   private String A428TBM41_CRT_PROG_NM ;
   private String A430TBM41_UPD_USER_ID ;
   private String A431TBM41_UPD_PROG_NM ;
   private String A201TBM43_DOM_CD ;
   private String A202TBM43_DOM_VAR_NM ;
   private String A910TBM43_VAR_DESC ;
   private String A911TBM43_SDTM_FLG ;
   private String A912TBM43_CDASH_FLG ;
   private String A913TBM43_INPUT_TYPE_DIV ;
   private String A914TBM43_REQUIRED_FLG ;
   private String A915TBM43_SAS_FIELD_NM ;
   private String A916TBM43_ODM_DATA_TYPE ;
   private String A917TBM43_NOTE ;
   private String A919TBM43_DEL_FLG ;
   private String A921TBM43_CRT_USER_ID ;
   private String A922TBM43_CRT_PROG_NM ;
   private String A924TBM43_UPD_USER_ID ;
   private String A925TBM43_UPD_PROG_NM ;
   private String A204TBM42_DOM_CD ;
   private String A905TBM42_DOM_ENM ;
   private String A906TBM42_DOM_JNM ;
   private String A907TBM42_DOM_GRP_NM ;
   private String A908TBM42_NOTE ;
   private String A893TBM42_DEL_FLG ;
   private String A895TBM42_CRT_USER_ID ;
   private String A896TBM42_CRT_PROG_NM ;
   private String A898TBM42_UPD_USER_ID ;
   private String A899TBM42_UPD_PROG_NM ;
   private String A949TBM44_DEL_FLG ;
   private String A951TBM44_CRT_USER_ID ;
   private String A952TBM44_CRT_PROG_NM ;
   private String A954TBM44_UPD_USER_ID ;
   private String A955TBM44_UPD_PROG_NM ;
   private String A980TBM45_FILETR_NM ;
   private String A981TBM45_IN_CRF_ID ;
   private String A982TBM45_DEL_FLG ;
   private String A984TBM45_CRT_USER_ID ;
   private String A985TBM45_CRT_PROG_NM ;
   private String A987TBM45_UPD_USER_ID ;
   private String A988TBM45_UPD_PROG_NM ;
   private String A81TBM37_CRF_ITEM_GRP_DIV ;
   private String A82TBM37_CRF_ITEM_GRP_CD ;
   private String A84TBM37_DOM_CD ;
   private String A500TBM37_DOM_VAR_NM ;
   private String A85TBM37_DOM_ITM_GRP_OID ;
   private String A433TBM37_DEL_FLG ;
   private String A435TBM37_CRT_USER_ID ;
   private String A436TBM37_CRT_PROG_NM ;
   private String A438TBM37_UPD_USER_ID ;
   private String A439TBM37_UPD_PROG_NM ;
   private String A62TBM11_IMAGE_CD ;
   private String A634TBM11_IMAGE_NM ;
   private String A534TBM11_FILE_NAME ;
   private String A535TBM11_DEL_FLG ;
   private String A537TBM11_CRT_USER_ID ;
   private String A538TBM11_CRT_PROG_NM ;
   private String A540TBM11_UPD_USER_ID ;
   private String A541TBM11_UPD_PROG_NM ;
   private String A65TBM24_DOM_CD ;
   private String A66TBM24_DOM_VAR_NM ;
   private String A702TBM24_DOM_ITM_GRP_OID ;
   private String A705TBM24_CRF_ITEM_NM ;
   private String A67TBM24_CRF_ITEM_DIV ;
   private String A635TBM24_IDENTIFICATION_CD ;
   private String A639TBM24_TEXT ;
   private String A640TBM24_FIXED_VALUE ;
   private String A641TBM24_CHK_FALSE_INNER_VALUE ;
   private String A706TBM24_REQUIRED_INPUT_FLG ;
   private String A707TBM24_MIN_VALUE ;
   private String A708TBM24_MAX_VALUE ;
   private String A544TBM24_DEL_FLG ;
   private String A546TBM24_CRT_USER_ID ;
   private String A547TBM24_CRT_PROG_NM ;
   private String A549TBM24_UPD_USER_ID ;
   private String A550TBM24_UPD_PROG_NM ;
   private String A108TBM23_USER_ID ;
   private String A109TBM23_STYDY_AUTH_CD ;
   private String A385TBM23_DEL_FLG ;
   private String A387TBM23_CRT_USER_ID ;
   private String A388TBM23_CRT_PROG_NM ;
   private String A390TBM23_UPD_USER_ID ;
   private String A391TBM23_UPD_PROG_NM ;
   private String A18TBM22_SITE_ID ;
   private String A377TBM22_DEL_FLG ;
   private String A379TBM22_CRT_USER_ID ;
   private String A380TBM22_CRT_PROG_NM ;
   private String A382TBM22_UPD_USER_ID ;
   private String A383TBM22_UPD_PROG_NM ;
   private String A26TBM26_LIST_CD ;
   private String A561TBM26_LIST_ITEM_NAME ;
   private String A562TBM26_INNER_VALUE ;
   private String A563TBM26_DEL_FLG ;
   private String A565TBM26_CRT_USER_ID ;
   private String A566TBM26_CRT_PROG_NM ;
   private String A568TBM26_UPD_USER_ID ;
   private String A569TBM26_UPD_PROG_NM ;
   private String A24TBM25_LIST_CD ;
   private String A552TBM25_LIST_NM ;
   private String A553TBM25_DEL_FLG ;
   private String A555TBM25_CRT_USER_ID ;
   private String A556TBM25_CRT_PROG_NM ;
   private String A558TBM25_UPD_USER_ID ;
   private String A559TBM25_UPD_PROG_NM ;
   private String A589TBM36_DEL_FLG ;
   private String A591TBM36_CRT_USER_ID ;
   private String A592TBM36_CRT_PROG_NM ;
   private String A594TBM36_UPD_USER_ID ;
   private String A595TBM36_UPD_PROG_NM ;
   private String A502TBM33_COND_NM ;
   private String A414TBM33_EXPRESSION ;
   private String A503TBM33_COND_DIV ;
   private String A504TBM33_CRF_ITEM_CD ;
   private String A505TBM33_ERR_DIV ;
   private String A506TBM33_ERR_MSG ;
   private String A646TBM33_ENABLED_FLG ;
   private String A696TBM33_REQUIRED_INPUT_FLG ;
   private String A697TBM33_NUMERIC_RANGE_FLG ;
   private String A416TBM33_DEL_FLG ;
   private String A418TBM33_CRT_USER_ID ;
   private String A419TBM33_CRT_PROG_NM ;
   private String A421TBM33_UPD_USER_ID ;
   private String A422TBM33_UPD_PROG_NM ;
   private String A72TBM32_CRF_ITEM_CD ;
   private String A405TBM32_CRF_ITEM_NM ;
   private String A74TBM32_CRF_ITEM_DIV ;
   private String A73TBM32_CRF_ITEM_GRP_CD ;
   private String A512TBM32_TEXT_ALIGN_DIV ;
   private String A522TBM32_CHK_TRUE_INNER_VALUE ;
   private String A523TBM32_CHK_FALSE_INNER_VALUE ;
   private String A527TBM32_FIXED_VALUE ;
   private String A525TBM32_LIST_CD ;
   private String A526TBM32_IMAGE_CD ;
   private String A524TBM32_TEXT ;
   private String A514TBM32_FONT_UL_FLG ;
   private String A519TBM32_LINE_START_POINT_DIV ;
   private String A520TBM32_LINE_END_POINT_DIV ;
   private String A692TBM32_TABSTOP_FLG ;
   private String A693TBM32_REQUIRED_INPUT_FLG ;
   private String A694TBM32_MIN_VALUE ;
   private String A695TBM32_MAX_VALUE ;
   private String A406TBM32_CRF_ITEM_NOTE ;
   private String A775TBM32_REF_CRF_ITEM_CD ;
   private String A75TBM32_DEL_FLG ;
   private String A408TBM32_CRT_USER_ID ;
   private String A409TBM32_CRT_PROG_NM ;
   private String A411TBM32_UPD_USER_ID ;
   private String A412TBM32_UPD_PROG_NM ;
   private String A30TBM34_STYDY_AUTH_CD ;
   private String A571TBM34_DISPLAY_FLG ;
   private String A572TBM34_DEL_FLG ;
   private String A574TBM34_CRT_USER_ID ;
   private String A575TBM34_CRT_PROG_NM ;
   private String A577TBM34_UPD_USER_ID ;
   private String A578TBM34_UPD_PROG_NM ;
   private String A393TBM31_CRF_NM ;
   private String A642TBM31_CRF_SNM ;
   private String A529TBM31_DEF_DOMAIN_CD ;
   private String A643TBM31_STATUS ;
   private String A396TBM31_NOTE ;
   private String A397TBM31_DEL_FLG ;
   private String A399TBM31_CRT_USER_ID ;
   private String A400TBM31_CRT_PROG_NM ;
   private String A402TBM31_UPD_USER_ID ;
   private String A403TBM31_UPD_PROG_NM ;
   private String AV11W_ERRCD ;
   private short[] aP1 ;
   private String[] aP2 ;
   private IDataStoreProvider pr_default ;
   private long[] P00579_A31TBM35_STUDY_ID ;
   private short[] P00579_A32TBM35_CRF_ID ;
   private String[] P00579_A33TBM35_CRF_ITEM_CD ;
   private String[] P00579_A34TBM35_STUDY_AUTH_CD ;
   private String[] P00579_A580TBM35_DISPLAY_FLG ;
   private boolean[] P00579_n580TBM35_DISPLAY_FLG ;
   private String[] P00579_A581TBM35_DEL_FLG ;
   private boolean[] P00579_n581TBM35_DEL_FLG ;
   private java.util.Date[] P00579_A582TBM35_CRT_DATETIME ;
   private boolean[] P00579_n582TBM35_CRT_DATETIME ;
   private String[] P00579_A583TBM35_CRT_USER_ID ;
   private boolean[] P00579_n583TBM35_CRT_USER_ID ;
   private String[] P00579_A584TBM35_CRT_PROG_NM ;
   private boolean[] P00579_n584TBM35_CRT_PROG_NM ;
   private java.util.Date[] P00579_A585TBM35_UPD_DATETIME ;
   private boolean[] P00579_n585TBM35_UPD_DATETIME ;
   private String[] P00579_A586TBM35_UPD_USER_ID ;
   private boolean[] P00579_n586TBM35_UPD_USER_ID ;
   private String[] P00579_A587TBM35_UPD_PROG_NM ;
   private boolean[] P00579_n587TBM35_UPD_PROG_NM ;
   private long[] P00579_A588TBM35_UPD_CNT ;
   private boolean[] P00579_n588TBM35_UPD_CNT ;
   private long[] P005711_A19TBM41_STUDY_ID ;
   private short[] P005711_A20TBM41_CRF_ID ;
   private String[] P005711_A21TBM41_CRF_ITEM_GRP_DIV ;
   private String[] P005711_A22TBM41_CRF_ITEM_GRP_CD ;
   private String[] P005711_A424TBM41_NCM_METADATA_ID ;
   private boolean[] P005711_n424TBM41_NCM_METADATA_ID ;
   private String[] P005711_A425TBM41_DEL_FLG ;
   private boolean[] P005711_n425TBM41_DEL_FLG ;
   private java.util.Date[] P005711_A426TBM41_CRT_DATETIME ;
   private boolean[] P005711_n426TBM41_CRT_DATETIME ;
   private String[] P005711_A427TBM41_CRT_USER_ID ;
   private boolean[] P005711_n427TBM41_CRT_USER_ID ;
   private String[] P005711_A428TBM41_CRT_PROG_NM ;
   private boolean[] P005711_n428TBM41_CRT_PROG_NM ;
   private java.util.Date[] P005711_A429TBM41_UPD_DATETIME ;
   private boolean[] P005711_n429TBM41_UPD_DATETIME ;
   private String[] P005711_A430TBM41_UPD_USER_ID ;
   private boolean[] P005711_n430TBM41_UPD_USER_ID ;
   private String[] P005711_A431TBM41_UPD_PROG_NM ;
   private boolean[] P005711_n431TBM41_UPD_PROG_NM ;
   private long[] P005711_A432TBM41_UPD_CNT ;
   private boolean[] P005711_n432TBM41_UPD_CNT ;
   private long[] P005713_A200TBM43_STUDY_ID ;
   private String[] P005713_A201TBM43_DOM_CD ;
   private String[] P005713_A202TBM43_DOM_VAR_NM ;
   private String[] P005713_A910TBM43_VAR_DESC ;
   private boolean[] P005713_n910TBM43_VAR_DESC ;
   private String[] P005713_A911TBM43_SDTM_FLG ;
   private boolean[] P005713_n911TBM43_SDTM_FLG ;
   private String[] P005713_A912TBM43_CDASH_FLG ;
   private boolean[] P005713_n912TBM43_CDASH_FLG ;
   private String[] P005713_A913TBM43_INPUT_TYPE_DIV ;
   private boolean[] P005713_n913TBM43_INPUT_TYPE_DIV ;
   private String[] P005713_A914TBM43_REQUIRED_FLG ;
   private boolean[] P005713_n914TBM43_REQUIRED_FLG ;
   private String[] P005713_A915TBM43_SAS_FIELD_NM ;
   private boolean[] P005713_n915TBM43_SAS_FIELD_NM ;
   private String[] P005713_A916TBM43_ODM_DATA_TYPE ;
   private boolean[] P005713_n916TBM43_ODM_DATA_TYPE ;
   private String[] P005713_A917TBM43_NOTE ;
   private boolean[] P005713_n917TBM43_NOTE ;
   private int[] P005713_A918TBM43_ORDER ;
   private boolean[] P005713_n918TBM43_ORDER ;
   private String[] P005713_A919TBM43_DEL_FLG ;
   private boolean[] P005713_n919TBM43_DEL_FLG ;
   private java.util.Date[] P005713_A920TBM43_CRT_DATETIME ;
   private boolean[] P005713_n920TBM43_CRT_DATETIME ;
   private String[] P005713_A921TBM43_CRT_USER_ID ;
   private boolean[] P005713_n921TBM43_CRT_USER_ID ;
   private String[] P005713_A922TBM43_CRT_PROG_NM ;
   private boolean[] P005713_n922TBM43_CRT_PROG_NM ;
   private java.util.Date[] P005713_A923TBM43_UPD_DATETIME ;
   private boolean[] P005713_n923TBM43_UPD_DATETIME ;
   private String[] P005713_A924TBM43_UPD_USER_ID ;
   private boolean[] P005713_n924TBM43_UPD_USER_ID ;
   private String[] P005713_A925TBM43_UPD_PROG_NM ;
   private boolean[] P005713_n925TBM43_UPD_PROG_NM ;
   private long[] P005713_A926TBM43_UPD_CNT ;
   private boolean[] P005713_n926TBM43_UPD_CNT ;
   private long[] P005715_A203TBM42_STUDY_ID ;
   private String[] P005715_A204TBM42_DOM_CD ;
   private String[] P005715_A905TBM42_DOM_ENM ;
   private boolean[] P005715_n905TBM42_DOM_ENM ;
   private String[] P005715_A906TBM42_DOM_JNM ;
   private boolean[] P005715_n906TBM42_DOM_JNM ;
   private String[] P005715_A907TBM42_DOM_GRP_NM ;
   private boolean[] P005715_n907TBM42_DOM_GRP_NM ;
   private String[] P005715_A908TBM42_NOTE ;
   private boolean[] P005715_n908TBM42_NOTE ;
   private int[] P005715_A909TBM42_ORDER ;
   private boolean[] P005715_n909TBM42_ORDER ;
   private String[] P005715_A893TBM42_DEL_FLG ;
   private boolean[] P005715_n893TBM42_DEL_FLG ;
   private java.util.Date[] P005715_A894TBM42_CRT_DATETIME ;
   private boolean[] P005715_n894TBM42_CRT_DATETIME ;
   private String[] P005715_A895TBM42_CRT_USER_ID ;
   private boolean[] P005715_n895TBM42_CRT_USER_ID ;
   private String[] P005715_A896TBM42_CRT_PROG_NM ;
   private boolean[] P005715_n896TBM42_CRT_PROG_NM ;
   private java.util.Date[] P005715_A897TBM42_UPD_DATETIME ;
   private boolean[] P005715_n897TBM42_UPD_DATETIME ;
   private String[] P005715_A898TBM42_UPD_USER_ID ;
   private boolean[] P005715_n898TBM42_UPD_USER_ID ;
   private String[] P005715_A899TBM42_UPD_PROG_NM ;
   private boolean[] P005715_n899TBM42_UPD_PROG_NM ;
   private long[] P005715_A900TBM42_UPD_CNT ;
   private boolean[] P005715_n900TBM42_UPD_CNT ;
   private long[] P005717_A945TBM44_STUDY_ID ;
   private short[] P005717_A946TBM44_CRF_ID ;
   private byte[] P005717_A947TBM44_CRF_EDA_NO ;
   private int[] P005717_A948TBM44_VISIT_NO ;
   private boolean[] P005717_n948TBM44_VISIT_NO ;
   private String[] P005717_A949TBM44_DEL_FLG ;
   private boolean[] P005717_n949TBM44_DEL_FLG ;
   private java.util.Date[] P005717_A950TBM44_CRT_DATETIME ;
   private boolean[] P005717_n950TBM44_CRT_DATETIME ;
   private String[] P005717_A951TBM44_CRT_USER_ID ;
   private boolean[] P005717_n951TBM44_CRT_USER_ID ;
   private String[] P005717_A952TBM44_CRT_PROG_NM ;
   private boolean[] P005717_n952TBM44_CRT_PROG_NM ;
   private java.util.Date[] P005717_A953TBM44_UPD_DATETIME ;
   private boolean[] P005717_n953TBM44_UPD_DATETIME ;
   private String[] P005717_A954TBM44_UPD_USER_ID ;
   private boolean[] P005717_n954TBM44_UPD_USER_ID ;
   private String[] P005717_A955TBM44_UPD_PROG_NM ;
   private boolean[] P005717_n955TBM44_UPD_PROG_NM ;
   private long[] P005717_A956TBM44_UPD_CNT ;
   private boolean[] P005717_n956TBM44_UPD_CNT ;
   private long[] P005719_A977TBM45_STUDY_ID ;
   private short[] P005719_A978TBM45_FILTER_NO ;
   private String[] P005719_A980TBM45_FILETR_NM ;
   private boolean[] P005719_n980TBM45_FILETR_NM ;
   private String[] P005719_A981TBM45_IN_CRF_ID ;
   private boolean[] P005719_n981TBM45_IN_CRF_ID ;
   private String[] P005719_A982TBM45_DEL_FLG ;
   private boolean[] P005719_n982TBM45_DEL_FLG ;
   private java.util.Date[] P005719_A983TBM45_CRT_DATETIME ;
   private boolean[] P005719_n983TBM45_CRT_DATETIME ;
   private String[] P005719_A984TBM45_CRT_USER_ID ;
   private boolean[] P005719_n984TBM45_CRT_USER_ID ;
   private String[] P005719_A985TBM45_CRT_PROG_NM ;
   private boolean[] P005719_n985TBM45_CRT_PROG_NM ;
   private java.util.Date[] P005719_A986TBM45_UPD_DATETIME ;
   private boolean[] P005719_n986TBM45_UPD_DATETIME ;
   private String[] P005719_A987TBM45_UPD_USER_ID ;
   private boolean[] P005719_n987TBM45_UPD_USER_ID ;
   private String[] P005719_A988TBM45_UPD_PROG_NM ;
   private boolean[] P005719_n988TBM45_UPD_PROG_NM ;
   private long[] P005719_A989TBM45_UPD_CNT ;
   private boolean[] P005719_n989TBM45_UPD_CNT ;
   private long[] P005721_A79TBM37_STUDY_ID ;
   private short[] P005721_A80TBM37_CRF_ID ;
   private String[] P005721_A81TBM37_CRF_ITEM_GRP_DIV ;
   private String[] P005721_A82TBM37_CRF_ITEM_GRP_CD ;
   private int[] P005721_A83TBM37_VISIT_NO ;
   private boolean[] P005721_n83TBM37_VISIT_NO ;
   private String[] P005721_A84TBM37_DOM_CD ;
   private boolean[] P005721_n84TBM37_DOM_CD ;
   private String[] P005721_A500TBM37_DOM_VAR_NM ;
   private boolean[] P005721_n500TBM37_DOM_VAR_NM ;
   private String[] P005721_A85TBM37_DOM_ITM_GRP_OID ;
   private boolean[] P005721_n85TBM37_DOM_ITM_GRP_OID ;
   private short[] P005721_A501TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean[] P005721_n501TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private short[] P005721_A86TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean[] P005721_n86TBM37_DOM_ITM_GRP_ROWNO ;
   private String[] P005721_A433TBM37_DEL_FLG ;
   private boolean[] P005721_n433TBM37_DEL_FLG ;
   private java.util.Date[] P005721_A434TBM37_CRT_DATETIME ;
   private boolean[] P005721_n434TBM37_CRT_DATETIME ;
   private String[] P005721_A435TBM37_CRT_USER_ID ;
   private boolean[] P005721_n435TBM37_CRT_USER_ID ;
   private String[] P005721_A436TBM37_CRT_PROG_NM ;
   private boolean[] P005721_n436TBM37_CRT_PROG_NM ;
   private java.util.Date[] P005721_A437TBM37_UPD_DATETIME ;
   private boolean[] P005721_n437TBM37_UPD_DATETIME ;
   private String[] P005721_A438TBM37_UPD_USER_ID ;
   private boolean[] P005721_n438TBM37_UPD_USER_ID ;
   private String[] P005721_A439TBM37_UPD_PROG_NM ;
   private boolean[] P005721_n439TBM37_UPD_PROG_NM ;
   private long[] P005721_A440TBM37_UPD_CNT ;
   private boolean[] P005721_n440TBM37_UPD_CNT ;
   private long[] P005723_A606TBM11_STUDY_ID ;
   private boolean[] P005723_n606TBM11_STUDY_ID ;
   private String[] P005723_A62TBM11_IMAGE_CD ;
   private String[] P005723_A634TBM11_IMAGE_NM ;
   private boolean[] P005723_n634TBM11_IMAGE_NM ;
   private String[] P005723_A534TBM11_FILE_NAME ;
   private boolean[] P005723_n534TBM11_FILE_NAME ;
   private String[] P005723_A535TBM11_DEL_FLG ;
   private boolean[] P005723_n535TBM11_DEL_FLG ;
   private java.util.Date[] P005723_A536TBM11_CRT_DATETIME ;
   private boolean[] P005723_n536TBM11_CRT_DATETIME ;
   private String[] P005723_A537TBM11_CRT_USER_ID ;
   private boolean[] P005723_n537TBM11_CRT_USER_ID ;
   private String[] P005723_A538TBM11_CRT_PROG_NM ;
   private boolean[] P005723_n538TBM11_CRT_PROG_NM ;
   private java.util.Date[] P005723_A539TBM11_UPD_DATETIME ;
   private boolean[] P005723_n539TBM11_UPD_DATETIME ;
   private String[] P005723_A540TBM11_UPD_USER_ID ;
   private boolean[] P005723_n540TBM11_UPD_USER_ID ;
   private String[] P005723_A541TBM11_UPD_PROG_NM ;
   private boolean[] P005723_n541TBM11_UPD_PROG_NM ;
   private long[] P005723_A542TBM11_UPD_CNT ;
   private boolean[] P005723_n542TBM11_UPD_CNT ;
   private long[] P005725_A64TBM24_STUDY_ID ;
   private String[] P005725_A65TBM24_DOM_CD ;
   private String[] P005725_A66TBM24_DOM_VAR_NM ;
   private String[] P005725_A702TBM24_DOM_ITM_GRP_OID ;
   private boolean[] P005725_n702TBM24_DOM_ITM_GRP_OID ;
   private short[] P005725_A703TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean[] P005725_n703TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private short[] P005725_A704TBM24_DOM_ITM_GRP_ROWNO ;
   private boolean[] P005725_n704TBM24_DOM_ITM_GRP_ROWNO ;
   private String[] P005725_A705TBM24_CRF_ITEM_NM ;
   private boolean[] P005725_n705TBM24_CRF_ITEM_NM ;
   private String[] P005725_A67TBM24_CRF_ITEM_DIV ;
   private String[] P005725_A635TBM24_IDENTIFICATION_CD ;
   private boolean[] P005725_n635TBM24_IDENTIFICATION_CD ;
   private short[] P005725_A636TBM24_TEXT_MAXLENGTH ;
   private boolean[] P005725_n636TBM24_TEXT_MAXLENGTH ;
   private byte[] P005725_A637TBM24_TEXT_MAXROWS ;
   private boolean[] P005725_n637TBM24_TEXT_MAXROWS ;
   private byte[] P005725_A638TBM24_DECIMAL_DIGITS ;
   private boolean[] P005725_n638TBM24_DECIMAL_DIGITS ;
   private String[] P005725_A639TBM24_TEXT ;
   private boolean[] P005725_n639TBM24_TEXT ;
   private String[] P005725_A640TBM24_FIXED_VALUE ;
   private boolean[] P005725_n640TBM24_FIXED_VALUE ;
   private String[] P005725_A641TBM24_CHK_FALSE_INNER_VALUE ;
   private boolean[] P005725_n641TBM24_CHK_FALSE_INNER_VALUE ;
   private String[] P005725_A706TBM24_REQUIRED_INPUT_FLG ;
   private boolean[] P005725_n706TBM24_REQUIRED_INPUT_FLG ;
   private String[] P005725_A707TBM24_MIN_VALUE ;
   private boolean[] P005725_n707TBM24_MIN_VALUE ;
   private String[] P005725_A708TBM24_MAX_VALUE ;
   private boolean[] P005725_n708TBM24_MAX_VALUE ;
   private int[] P005725_A543TBM24_ORDER ;
   private boolean[] P005725_n543TBM24_ORDER ;
   private String[] P005725_A544TBM24_DEL_FLG ;
   private boolean[] P005725_n544TBM24_DEL_FLG ;
   private java.util.Date[] P005725_A545TBM24_CRT_DATETIME ;
   private boolean[] P005725_n545TBM24_CRT_DATETIME ;
   private String[] P005725_A546TBM24_CRT_USER_ID ;
   private boolean[] P005725_n546TBM24_CRT_USER_ID ;
   private String[] P005725_A547TBM24_CRT_PROG_NM ;
   private boolean[] P005725_n547TBM24_CRT_PROG_NM ;
   private java.util.Date[] P005725_A548TBM24_UPD_DATETIME ;
   private boolean[] P005725_n548TBM24_UPD_DATETIME ;
   private String[] P005725_A549TBM24_UPD_USER_ID ;
   private boolean[] P005725_n549TBM24_UPD_USER_ID ;
   private String[] P005725_A550TBM24_UPD_PROG_NM ;
   private boolean[] P005725_n550TBM24_UPD_PROG_NM ;
   private long[] P005725_A551TBM24_UPD_CNT ;
   private boolean[] P005725_n551TBM24_UPD_CNT ;
   private long[] P005727_A107TBM23_STUDY_ID ;
   private String[] P005727_A108TBM23_USER_ID ;
   private String[] P005727_A109TBM23_STYDY_AUTH_CD ;
   private String[] P005727_A385TBM23_DEL_FLG ;
   private boolean[] P005727_n385TBM23_DEL_FLG ;
   private java.util.Date[] P005727_A386TBM23_CRT_DATETIME ;
   private boolean[] P005727_n386TBM23_CRT_DATETIME ;
   private String[] P005727_A387TBM23_CRT_USER_ID ;
   private boolean[] P005727_n387TBM23_CRT_USER_ID ;
   private String[] P005727_A388TBM23_CRT_PROG_NM ;
   private boolean[] P005727_n388TBM23_CRT_PROG_NM ;
   private java.util.Date[] P005727_A389TBM23_UPD_DATETIME ;
   private boolean[] P005727_n389TBM23_UPD_DATETIME ;
   private String[] P005727_A390TBM23_UPD_USER_ID ;
   private boolean[] P005727_n390TBM23_UPD_USER_ID ;
   private String[] P005727_A391TBM23_UPD_PROG_NM ;
   private boolean[] P005727_n391TBM23_UPD_PROG_NM ;
   private long[] P005727_A392TBM23_UPD_CNT ;
   private boolean[] P005727_n392TBM23_UPD_CNT ;
   private long[] P005729_A17TBM22_STUDY_ID ;
   private String[] P005729_A18TBM22_SITE_ID ;
   private String[] P005729_A377TBM22_DEL_FLG ;
   private boolean[] P005729_n377TBM22_DEL_FLG ;
   private java.util.Date[] P005729_A378TBM22_CRT_DATETIME ;
   private boolean[] P005729_n378TBM22_CRT_DATETIME ;
   private String[] P005729_A379TBM22_CRT_USER_ID ;
   private boolean[] P005729_n379TBM22_CRT_USER_ID ;
   private String[] P005729_A380TBM22_CRT_PROG_NM ;
   private boolean[] P005729_n380TBM22_CRT_PROG_NM ;
   private java.util.Date[] P005729_A381TBM22_UPD_DATETIME ;
   private boolean[] P005729_n381TBM22_UPD_DATETIME ;
   private String[] P005729_A382TBM22_UPD_USER_ID ;
   private boolean[] P005729_n382TBM22_UPD_USER_ID ;
   private String[] P005729_A383TBM22_UPD_PROG_NM ;
   private boolean[] P005729_n383TBM22_UPD_PROG_NM ;
   private long[] P005729_A384TBM22_UPD_CNT ;
   private boolean[] P005729_n384TBM22_UPD_CNT ;
   private long[] P005731_A25TBM26_STUDY_ID ;
   private String[] P005731_A26TBM26_LIST_CD ;
   private short[] P005731_A27TBM26_LIST_ITEM_NO ;
   private String[] P005731_A561TBM26_LIST_ITEM_NAME ;
   private boolean[] P005731_n561TBM26_LIST_ITEM_NAME ;
   private String[] P005731_A562TBM26_INNER_VALUE ;
   private boolean[] P005731_n562TBM26_INNER_VALUE ;
   private String[] P005731_A563TBM26_DEL_FLG ;
   private boolean[] P005731_n563TBM26_DEL_FLG ;
   private java.util.Date[] P005731_A564TBM26_CRT_DATETIME ;
   private boolean[] P005731_n564TBM26_CRT_DATETIME ;
   private String[] P005731_A565TBM26_CRT_USER_ID ;
   private boolean[] P005731_n565TBM26_CRT_USER_ID ;
   private String[] P005731_A566TBM26_CRT_PROG_NM ;
   private boolean[] P005731_n566TBM26_CRT_PROG_NM ;
   private java.util.Date[] P005731_A567TBM26_UPD_DATETIME ;
   private boolean[] P005731_n567TBM26_UPD_DATETIME ;
   private String[] P005731_A568TBM26_UPD_USER_ID ;
   private boolean[] P005731_n568TBM26_UPD_USER_ID ;
   private String[] P005731_A569TBM26_UPD_PROG_NM ;
   private boolean[] P005731_n569TBM26_UPD_PROG_NM ;
   private long[] P005731_A570TBM26_UPD_CNT ;
   private boolean[] P005731_n570TBM26_UPD_CNT ;
   private long[] P005733_A23TBM25_STUDY_ID ;
   private String[] P005733_A24TBM25_LIST_CD ;
   private String[] P005733_A552TBM25_LIST_NM ;
   private boolean[] P005733_n552TBM25_LIST_NM ;
   private String[] P005733_A553TBM25_DEL_FLG ;
   private boolean[] P005733_n553TBM25_DEL_FLG ;
   private java.util.Date[] P005733_A554TBM25_CRT_DATETIME ;
   private boolean[] P005733_n554TBM25_CRT_DATETIME ;
   private String[] P005733_A555TBM25_CRT_USER_ID ;
   private boolean[] P005733_n555TBM25_CRT_USER_ID ;
   private String[] P005733_A556TBM25_CRT_PROG_NM ;
   private boolean[] P005733_n556TBM25_CRT_PROG_NM ;
   private java.util.Date[] P005733_A557TBM25_UPD_DATETIME ;
   private boolean[] P005733_n557TBM25_UPD_DATETIME ;
   private String[] P005733_A558TBM25_UPD_USER_ID ;
   private boolean[] P005733_n558TBM25_UPD_USER_ID ;
   private String[] P005733_A559TBM25_UPD_PROG_NM ;
   private boolean[] P005733_n559TBM25_UPD_PROG_NM ;
   private long[] P005733_A560TBM25_UPD_CNT ;
   private boolean[] P005733_n560TBM25_UPD_CNT ;
   private long[] P005735_A35TBM36_STUDY_ID ;
   private short[] P005735_A36TBM36_CRF_ID ;
   private short[] P005735_A37TBM36_COND_NO ;
   private short[] P005735_A38TBM36_SELECT_CRF_ID ;
   private String[] P005735_A589TBM36_DEL_FLG ;
   private boolean[] P005735_n589TBM36_DEL_FLG ;
   private java.util.Date[] P005735_A590TBM36_CRT_DATETIME ;
   private boolean[] P005735_n590TBM36_CRT_DATETIME ;
   private String[] P005735_A591TBM36_CRT_USER_ID ;
   private boolean[] P005735_n591TBM36_CRT_USER_ID ;
   private String[] P005735_A592TBM36_CRT_PROG_NM ;
   private boolean[] P005735_n592TBM36_CRT_PROG_NM ;
   private java.util.Date[] P005735_A593TBM36_UPD_DATETIME ;
   private boolean[] P005735_n593TBM36_UPD_DATETIME ;
   private String[] P005735_A594TBM36_UPD_USER_ID ;
   private boolean[] P005735_n594TBM36_UPD_USER_ID ;
   private String[] P005735_A595TBM36_UPD_PROG_NM ;
   private boolean[] P005735_n595TBM36_UPD_PROG_NM ;
   private long[] P005735_A596TBM36_UPD_CNT ;
   private boolean[] P005735_n596TBM36_UPD_CNT ;
   private long[] P005737_A76TBM33_STUDY_ID ;
   private short[] P005737_A77TBM33_CRF_ID ;
   private short[] P005737_A78TBM33_COND_NO ;
   private String[] P005737_A502TBM33_COND_NM ;
   private boolean[] P005737_n502TBM33_COND_NM ;
   private String[] P005737_A414TBM33_EXPRESSION ;
   private boolean[] P005737_n414TBM33_EXPRESSION ;
   private String[] P005737_A503TBM33_COND_DIV ;
   private boolean[] P005737_n503TBM33_COND_DIV ;
   private String[] P005737_A504TBM33_CRF_ITEM_CD ;
   private boolean[] P005737_n504TBM33_CRF_ITEM_CD ;
   private short[] P005737_A415TBM33_PRIOR_NO ;
   private boolean[] P005737_n415TBM33_PRIOR_NO ;
   private String[] P005737_A505TBM33_ERR_DIV ;
   private boolean[] P005737_n505TBM33_ERR_DIV ;
   private String[] P005737_A506TBM33_ERR_MSG ;
   private boolean[] P005737_n506TBM33_ERR_MSG ;
   private String[] P005737_A646TBM33_ENABLED_FLG ;
   private boolean[] P005737_n646TBM33_ENABLED_FLG ;
   private String[] P005737_A696TBM33_REQUIRED_INPUT_FLG ;
   private boolean[] P005737_n696TBM33_REQUIRED_INPUT_FLG ;
   private String[] P005737_A697TBM33_NUMERIC_RANGE_FLG ;
   private boolean[] P005737_n697TBM33_NUMERIC_RANGE_FLG ;
   private String[] P005737_A416TBM33_DEL_FLG ;
   private boolean[] P005737_n416TBM33_DEL_FLG ;
   private java.util.Date[] P005737_A417TBM33_CRT_DATETIME ;
   private boolean[] P005737_n417TBM33_CRT_DATETIME ;
   private String[] P005737_A418TBM33_CRT_USER_ID ;
   private boolean[] P005737_n418TBM33_CRT_USER_ID ;
   private String[] P005737_A419TBM33_CRT_PROG_NM ;
   private boolean[] P005737_n419TBM33_CRT_PROG_NM ;
   private java.util.Date[] P005737_A420TBM33_UPD_DATETIME ;
   private boolean[] P005737_n420TBM33_UPD_DATETIME ;
   private String[] P005737_A421TBM33_UPD_USER_ID ;
   private boolean[] P005737_n421TBM33_UPD_USER_ID ;
   private String[] P005737_A422TBM33_UPD_PROG_NM ;
   private boolean[] P005737_n422TBM33_UPD_PROG_NM ;
   private long[] P005737_A423TBM33_UPD_CNT ;
   private boolean[] P005737_n423TBM33_UPD_CNT ;
   private long[] P005739_A70TBM32_STUDY_ID ;
   private short[] P005739_A71TBM32_CRF_ID ;
   private String[] P005739_A72TBM32_CRF_ITEM_CD ;
   private String[] P005739_A405TBM32_CRF_ITEM_NM ;
   private boolean[] P005739_n405TBM32_CRF_ITEM_NM ;
   private String[] P005739_A74TBM32_CRF_ITEM_DIV ;
   private boolean[] P005739_n74TBM32_CRF_ITEM_DIV ;
   private String[] P005739_A73TBM32_CRF_ITEM_GRP_CD ;
   private boolean[] P005739_n73TBM32_CRF_ITEM_GRP_CD ;
   private short[] P005739_A507TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean[] P005739_n507TBM32_CRF_ITEM_GRP_ORDER ;
   private short[] P005739_A508TBM32_LOCATION_X ;
   private boolean[] P005739_n508TBM32_LOCATION_X ;
   private short[] P005739_A509TBM32_LOCATION_Y ;
   private boolean[] P005739_n509TBM32_LOCATION_Y ;
   private short[] P005739_A510TBM32_LOCATION_X2 ;
   private boolean[] P005739_n510TBM32_LOCATION_X2 ;
   private short[] P005739_A511TBM32_LOCATION_Y2 ;
   private boolean[] P005739_n511TBM32_LOCATION_Y2 ;
   private String[] P005739_A512TBM32_TEXT_ALIGN_DIV ;
   private boolean[] P005739_n512TBM32_TEXT_ALIGN_DIV ;
   private byte[] P005739_A516TBM32_TEXT_MAXROWS ;
   private boolean[] P005739_n516TBM32_TEXT_MAXROWS ;
   private short[] P005739_A517TBM32_TEXT_MAXLENGTH ;
   private boolean[] P005739_n517TBM32_TEXT_MAXLENGTH ;
   private byte[] P005739_A518TBM32_DECIMAL_DIGITS ;
   private boolean[] P005739_n518TBM32_DECIMAL_DIGITS ;
   private String[] P005739_A522TBM32_CHK_TRUE_INNER_VALUE ;
   private boolean[] P005739_n522TBM32_CHK_TRUE_INNER_VALUE ;
   private String[] P005739_A523TBM32_CHK_FALSE_INNER_VALUE ;
   private boolean[] P005739_n523TBM32_CHK_FALSE_INNER_VALUE ;
   private String[] P005739_A527TBM32_FIXED_VALUE ;
   private boolean[] P005739_n527TBM32_FIXED_VALUE ;
   private String[] P005739_A525TBM32_LIST_CD ;
   private boolean[] P005739_n525TBM32_LIST_CD ;
   private String[] P005739_A526TBM32_IMAGE_CD ;
   private boolean[] P005739_n526TBM32_IMAGE_CD ;
   private String[] P005739_A524TBM32_TEXT ;
   private boolean[] P005739_n524TBM32_TEXT ;
   private byte[] P005739_A513TBM32_FONT_SIZE ;
   private boolean[] P005739_n513TBM32_FONT_SIZE ;
   private String[] P005739_A514TBM32_FONT_UL_FLG ;
   private boolean[] P005739_n514TBM32_FONT_UL_FLG ;
   private long[] P005739_A515TBM32_FONT_COLOR_DIV ;
   private boolean[] P005739_n515TBM32_FONT_COLOR_DIV ;
   private byte[] P005739_A521TBM32_LINE_SIZE_DIV ;
   private boolean[] P005739_n521TBM32_LINE_SIZE_DIV ;
   private long[] P005739_A689TBM32_LINE_COLOR_DIV ;
   private boolean[] P005739_n689TBM32_LINE_COLOR_DIV ;
   private String[] P005739_A519TBM32_LINE_START_POINT_DIV ;
   private boolean[] P005739_n519TBM32_LINE_START_POINT_DIV ;
   private String[] P005739_A520TBM32_LINE_END_POINT_DIV ;
   private boolean[] P005739_n520TBM32_LINE_END_POINT_DIV ;
   private short[] P005739_A690TBM32_LINE_ANGLE ;
   private boolean[] P005739_n690TBM32_LINE_ANGLE ;
   private byte[] P005739_A644TBM32_AUTH_LVL_MIN ;
   private boolean[] P005739_n644TBM32_AUTH_LVL_MIN ;
   private short[] P005739_A645TBM32_ZORDER ;
   private boolean[] P005739_n645TBM32_ZORDER ;
   private short[] P005739_A691TBM32_TAB_ORDER ;
   private boolean[] P005739_n691TBM32_TAB_ORDER ;
   private String[] P005739_A692TBM32_TABSTOP_FLG ;
   private boolean[] P005739_n692TBM32_TABSTOP_FLG ;
   private String[] P005739_A693TBM32_REQUIRED_INPUT_FLG ;
   private boolean[] P005739_n693TBM32_REQUIRED_INPUT_FLG ;
   private String[] P005739_A694TBM32_MIN_VALUE ;
   private boolean[] P005739_n694TBM32_MIN_VALUE ;
   private String[] P005739_A695TBM32_MAX_VALUE ;
   private boolean[] P005739_n695TBM32_MAX_VALUE ;
   private String[] P005739_A406TBM32_CRF_ITEM_NOTE ;
   private boolean[] P005739_n406TBM32_CRF_ITEM_NOTE ;
   private short[] P005739_A774TBM32_REF_CRF_ID ;
   private boolean[] P005739_n774TBM32_REF_CRF_ID ;
   private String[] P005739_A775TBM32_REF_CRF_ITEM_CD ;
   private boolean[] P005739_n775TBM32_REF_CRF_ITEM_CD ;
   private String[] P005739_A75TBM32_DEL_FLG ;
   private boolean[] P005739_n75TBM32_DEL_FLG ;
   private java.util.Date[] P005739_A407TBM32_CRT_DATETIME ;
   private boolean[] P005739_n407TBM32_CRT_DATETIME ;
   private String[] P005739_A408TBM32_CRT_USER_ID ;
   private boolean[] P005739_n408TBM32_CRT_USER_ID ;
   private String[] P005739_A409TBM32_CRT_PROG_NM ;
   private boolean[] P005739_n409TBM32_CRT_PROG_NM ;
   private java.util.Date[] P005739_A410TBM32_UPD_DATETIME ;
   private boolean[] P005739_n410TBM32_UPD_DATETIME ;
   private String[] P005739_A411TBM32_UPD_USER_ID ;
   private boolean[] P005739_n411TBM32_UPD_USER_ID ;
   private String[] P005739_A412TBM32_UPD_PROG_NM ;
   private boolean[] P005739_n412TBM32_UPD_PROG_NM ;
   private long[] P005739_A413TBM32_UPD_CNT ;
   private boolean[] P005739_n413TBM32_UPD_CNT ;
   private long[] P005741_A28TBM34_STUDY_ID ;
   private short[] P005741_A29TBM34_CRF_ID ;
   private String[] P005741_A30TBM34_STYDY_AUTH_CD ;
   private String[] P005741_A571TBM34_DISPLAY_FLG ;
   private boolean[] P005741_n571TBM34_DISPLAY_FLG ;
   private String[] P005741_A572TBM34_DEL_FLG ;
   private boolean[] P005741_n572TBM34_DEL_FLG ;
   private java.util.Date[] P005741_A573TBM34_CRT_DATETIME ;
   private boolean[] P005741_n573TBM34_CRT_DATETIME ;
   private String[] P005741_A574TBM34_CRT_USER_ID ;
   private boolean[] P005741_n574TBM34_CRT_USER_ID ;
   private String[] P005741_A575TBM34_CRT_PROG_NM ;
   private boolean[] P005741_n575TBM34_CRT_PROG_NM ;
   private java.util.Date[] P005741_A576TBM34_UPD_DATETIME ;
   private boolean[] P005741_n576TBM34_UPD_DATETIME ;
   private String[] P005741_A577TBM34_UPD_USER_ID ;
   private boolean[] P005741_n577TBM34_UPD_USER_ID ;
   private String[] P005741_A578TBM34_UPD_PROG_NM ;
   private boolean[] P005741_n578TBM34_UPD_PROG_NM ;
   private long[] P005741_A579TBM34_UPD_CNT ;
   private boolean[] P005741_n579TBM34_UPD_CNT ;
   private long[] P005743_A68TBM31_STUDY_ID ;
   private short[] P005743_A69TBM31_CRF_ID ;
   private String[] P005743_A393TBM31_CRF_NM ;
   private boolean[] P005743_n393TBM31_CRF_NM ;
   private String[] P005743_A642TBM31_CRF_SNM ;
   private boolean[] P005743_n642TBM31_CRF_SNM ;
   private short[] P005743_A394TBM31_GRID_SIZE ;
   private boolean[] P005743_n394TBM31_GRID_SIZE ;
   private int[] P005743_A395TBM31_ORDER ;
   private boolean[] P005743_n395TBM31_ORDER ;
   private int[] P005743_A528TBM31_DEF_VISIT_NO ;
   private boolean[] P005743_n528TBM31_DEF_VISIT_NO ;
   private String[] P005743_A529TBM31_DEF_DOMAIN_CD ;
   private boolean[] P005743_n529TBM31_DEF_DOMAIN_CD ;
   private String[] P005743_A643TBM31_STATUS ;
   private boolean[] P005743_n643TBM31_STATUS ;
   private String[] P005743_A396TBM31_NOTE ;
   private boolean[] P005743_n396TBM31_NOTE ;
   private String[] P005743_A397TBM31_DEL_FLG ;
   private boolean[] P005743_n397TBM31_DEL_FLG ;
   private java.util.Date[] P005743_A398TBM31_CRT_DATETIME ;
   private boolean[] P005743_n398TBM31_CRT_DATETIME ;
   private String[] P005743_A399TBM31_CRT_USER_ID ;
   private boolean[] P005743_n399TBM31_CRT_USER_ID ;
   private String[] P005743_A400TBM31_CRT_PROG_NM ;
   private boolean[] P005743_n400TBM31_CRT_PROG_NM ;
   private java.util.Date[] P005743_A401TBM31_UPD_DATETIME ;
   private boolean[] P005743_n401TBM31_UPD_DATETIME ;
   private String[] P005743_A402TBM31_UPD_USER_ID ;
   private boolean[] P005743_n402TBM31_UPD_USER_ID ;
   private String[] P005743_A403TBM31_UPD_PROG_NM ;
   private boolean[] P005743_n403TBM31_UPD_PROG_NM ;
   private long[] P005743_A404TBM31_UPD_CNT ;
   private boolean[] P005743_n404TBM31_UPD_CNT ;
   private GxObjectCollection AV12W_ITEMS ;
   private SdtTBM21_STUDY AV9P_BC_STUDY ;
   private SdtA_LOGIN_SDT AV10W_A_LOGIN_SDT ;
   private SdtA_LOGIN_SDT GXv_SdtA_LOGIN_SDT3[] ;
}

final  class b402_pc19_study_del__default extends DataStoreHelperBase implements ILocalDataStoreHelper
{
   public Cursor[] getCursors( )
   {
      return new Cursor[] {
          new UpdateCursor("P00572", "DELETE FROM `TBT13_CRF_RES_HIS`  WHERE `TBT13_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00573", "DELETE FROM `TBT12_CRF_RESULT`  WHERE `TBT12_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00574", "DELETE FROM `TBT11_CRF_HISTORY`  WHERE `TBT11_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00575", "DELETE FROM `TBT15_CRF_MEMO_LOC`  WHERE `TBT15_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00576", "DELETE FROM `TBT14_CRF_MEMO`  WHERE `TBT14_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00577", "DELETE FROM `TBT02_CRF`  WHERE `TBT02_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00578", "DELETE FROM `TBT01_SUBJECT`  WHERE `TBT01_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P00579", "SELECT `TBM35_STUDY_ID`, `TBM35_CRF_ID`, `TBM35_CRF_ITEM_CD`, `TBM35_STUDY_AUTH_CD`, `TBM35_DISPLAY_FLG`, `TBM35_DEL_FLG`, `TBM35_CRT_DATETIME`, `TBM35_CRT_USER_ID`, `TBM35_CRT_PROG_NM`, `TBM35_UPD_DATETIME`, `TBM35_UPD_USER_ID`, `TBM35_UPD_PROG_NM`, `TBM35_UPD_CNT` FROM `TBM35_CRF_ITEM_AUTH` WHERE `TBM35_STUDY_ID` = ? ORDER BY `TBM35_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005710", "DELETE FROM `TBM35_CRF_ITEM_AUTH`  WHERE `TBM35_STUDY_ID` = ? AND `TBM35_CRF_ID` = ? AND `TBM35_CRF_ITEM_CD` = ? AND `TBM35_STUDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005711", "SELECT `TBM41_STUDY_ID`, `TBM41_CRF_ID`, `TBM41_CRF_ITEM_GRP_DIV`, `TBM41_CRF_ITEM_GRP_CD`, `TBM41_NCM_METADATA_ID`, `TBM41_DEL_FLG`, `TBM41_CRT_DATETIME`, `TBM41_CRT_USER_ID`, `TBM41_CRT_PROG_NM`, `TBM41_UPD_DATETIME`, `TBM41_UPD_USER_ID`, `TBM41_UPD_PROG_NM`, `TBM41_UPD_CNT` FROM `TBM41_CRF_NCM_MAP` WHERE `TBM41_STUDY_ID` = ? ORDER BY `TBM41_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005712", "DELETE FROM `TBM41_CRF_NCM_MAP`  WHERE `TBM41_STUDY_ID` = ? AND `TBM41_CRF_ID` = ? AND `TBM41_CRF_ITEM_GRP_DIV` = ? AND `TBM41_CRF_ITEM_GRP_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005713", "SELECT `TBM43_STUDY_ID`, `TBM43_DOM_CD`, `TBM43_DOM_VAR_NM`, `TBM43_VAR_DESC`, `TBM43_SDTM_FLG`, `TBM43_CDASH_FLG`, `TBM43_INPUT_TYPE_DIV`, `TBM43_REQUIRED_FLG`, `TBM43_SAS_FIELD_NM`, `TBM43_ODM_DATA_TYPE`, `TBM43_NOTE`, `TBM43_ORDER`, `TBM43_DEL_FLG`, `TBM43_CRT_DATETIME`, `TBM43_CRT_USER_ID`, `TBM43_CRT_PROG_NM`, `TBM43_UPD_DATETIME`, `TBM43_UPD_USER_ID`, `TBM43_UPD_PROG_NM`, `TBM43_UPD_CNT` FROM `TBM43_STUDY_CDISC_ITEM` WHERE `TBM43_STUDY_ID` = ? ORDER BY `TBM43_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005714", "DELETE FROM `TBM43_STUDY_CDISC_ITEM`  WHERE `TBM43_STUDY_ID` = ? AND `TBM43_DOM_CD` = ? AND `TBM43_DOM_VAR_NM` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005715", "SELECT `TBM42_STUDY_ID`, `TBM42_DOM_CD`, `TBM42_DOM_ENM`, `TBM42_DOM_JNM`, `TBM42_DOM_GRP_NM`, `TBM42_NOTE`, `TBM42_ORDER`, `TBM42_DEL_FLG`, `TBM42_CRT_DATETIME`, `TBM42_CRT_USER_ID`, `TBM42_CRT_PROG_NM`, `TBM42_UPD_DATETIME`, `TBM42_UPD_USER_ID`, `TBM42_UPD_PROG_NM`, `TBM42_UPD_CNT` FROM `TBM42_STUDY_CDISC_DOMAIN` WHERE `TBM42_STUDY_ID` = ? ORDER BY `TBM42_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005716", "DELETE FROM `TBM42_STUDY_CDISC_DOMAIN`  WHERE `TBM42_STUDY_ID` = ? AND `TBM42_DOM_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005717", "SELECT `TBM44_STUDY_ID`, `TBM44_CRF_ID`, `TBM44_CRF_EDA_NO`, `TBM44_VISIT_NO`, `TBM44_DEL_FLG`, `TBM44_CRT_DATETIME`, `TBM44_CRT_USER_ID`, `TBM44_CRT_PROG_NM`, `TBM44_UPD_DATETIME`, `TBM44_UPD_USER_ID`, `TBM44_UPD_PROG_NM`, `TBM44_UPD_CNT` FROM `TBM44_CRF_VISIT` WHERE `TBM44_STUDY_ID` = ? ORDER BY `TBM44_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005718", "DELETE FROM `TBM44_CRF_VISIT`  WHERE `TBM44_STUDY_ID` = ? AND `TBM44_CRF_ID` = ? AND `TBM44_CRF_EDA_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005719", "SELECT `TBM45_STUDY_ID`, `TBM45_FILTER_NO`, `TBM45_FILETR_NM`, `TBM45_IN_CRF_ID`, `TBM45_DEL_FLG`, `TBM45_CRT_DATETIME`, `TBM45_CRT_USER_ID`, `TBM45_CRT_PROG_NM`, `TBM45_UPD_DATETIME`, `TBM45_UPD_USER_ID`, `TBM45_UPD_PROG_NM`, `TBM45_UPD_CNT` FROM `TBM45_CRF_FILETR` WHERE `TBM45_STUDY_ID` = ? ORDER BY `TBM45_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005720", "DELETE FROM `TBM45_CRF_FILETR`  WHERE `TBM45_STUDY_ID` = ? AND `TBM45_FILTER_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005721", "SELECT `TBM37_STUDY_ID`, `TBM37_CRF_ID`, `TBM37_CRF_ITEM_GRP_DIV`, `TBM37_CRF_ITEM_GRP_CD`, `TBM37_VISIT_NO`, `TBM37_DOM_CD`, `TBM37_DOM_VAR_NM`, `TBM37_DOM_ITM_GRP_OID`, `TBM37_DOM_ITM_GRP_ATTR_SEQ`, `TBM37_DOM_ITM_GRP_ROWNO`, `TBM37_DEL_FLG`, `TBM37_CRT_DATETIME`, `TBM37_CRT_USER_ID`, `TBM37_CRT_PROG_NM`, `TBM37_UPD_DATETIME`, `TBM37_UPD_USER_ID`, `TBM37_UPD_PROG_NM`, `TBM37_UPD_CNT` FROM `TBM37_CRF_DOM_MAP` WHERE `TBM37_STUDY_ID` = ? ORDER BY `TBM37_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005722", "DELETE FROM `TBM37_CRF_DOM_MAP`  WHERE `TBM37_STUDY_ID` = ? AND `TBM37_CRF_ID` = ? AND `TBM37_CRF_ITEM_GRP_DIV` = ? AND `TBM37_CRF_ITEM_GRP_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005723", "SELECT `TBM11_STUDY_ID`, `TBM11_IMAGE_CD`, `TBM11_IMAGE_NM`, `TBM11_FILE_NAME`, `TBM11_DEL_FLG`, `TBM11_CRT_DATETIME`, `TBM11_CRT_USER_ID`, `TBM11_CRT_PROG_NM`, `TBM11_UPD_DATETIME`, `TBM11_UPD_USER_ID`, `TBM11_UPD_PROG_NM`, `TBM11_UPD_CNT` FROM `TBM11_IMAGE` WHERE `TBM11_STUDY_ID` = ? ORDER BY `TBM11_IMAGE_CD`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005724", "DELETE FROM `TBM11_IMAGE`  WHERE `TBM11_IMAGE_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005725", "SELECT `TBM24_STUDY_ID`, `TBM24_DOM_CD`, `TBM24_DOM_VAR_NM`, `TBM24_DOM_ITM_GRP_OID`, `TBM24_DOM_ITM_GRP_ATTR_SEQ`, `TBM24_DOM_ITM_GRP_ROWNO`, `TBM24_CRF_ITEM_NM`, `TBM24_CRF_ITEM_DIV`, `TBM24_IDENTIFICATION_CD`, `TBM24_TEXT_MAXLENGTH`, `TBM24_TEXT_MAXROWS`, `TBM24_DECIMAL_DIGITS`, `TBM24_TEXT`, `TBM24_FIXED_VALUE`, `TBM24_CHK_FALSE_INNER_VALUE`, `TBM24_REQUIRED_INPUT_FLG`, `TBM24_MIN_VALUE`, `TBM24_MAX_VALUE`, `TBM24_ORDER`, `TBM24_DEL_FLG`, `TBM24_CRT_DATETIME`, `TBM24_CRT_USER_ID`, `TBM24_CRT_PROG_NM`, `TBM24_UPD_DATETIME`, `TBM24_UPD_USER_ID`, `TBM24_UPD_PROG_NM`, `TBM24_UPD_CNT` FROM `TBM24_MAP_ITEM` WHERE `TBM24_STUDY_ID` = ? ORDER BY `TBM24_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005726", "DELETE FROM `TBM24_MAP_ITEM`  WHERE `TBM24_STUDY_ID` = ? AND `TBM24_DOM_CD` = ? AND `TBM24_DOM_VAR_NM` = ? AND `TBM24_CRF_ITEM_DIV` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005727", "SELECT `TBM23_STUDY_ID`, `TBM23_USER_ID`, `TBM23_STYDY_AUTH_CD`, `TBM23_DEL_FLG`, `TBM23_CRT_DATETIME`, `TBM23_CRT_USER_ID`, `TBM23_CRT_PROG_NM`, `TBM23_UPD_DATETIME`, `TBM23_UPD_USER_ID`, `TBM23_UPD_PROG_NM`, `TBM23_UPD_CNT` FROM `TBM23_STUDY_STAFF` WHERE `TBM23_STUDY_ID` = ? ORDER BY `TBM23_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005728", "DELETE FROM `TBM23_STUDY_STAFF`  WHERE `TBM23_STUDY_ID` = ? AND `TBM23_USER_ID` = ? AND `TBM23_STYDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005729", "SELECT `TBM22_STUDY_ID`, `TBM22_SITE_ID`, `TBM22_DEL_FLG`, `TBM22_CRT_DATETIME`, `TBM22_CRT_USER_ID`, `TBM22_CRT_PROG_NM`, `TBM22_UPD_DATETIME`, `TBM22_UPD_USER_ID`, `TBM22_UPD_PROG_NM`, `TBM22_UPD_CNT` FROM `TBM22_STUDY_SITE` WHERE `TBM22_STUDY_ID` = ? ORDER BY `TBM22_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005730", "DELETE FROM `TBM22_STUDY_SITE`  WHERE `TBM22_STUDY_ID` = ? AND `TBM22_SITE_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005731", "SELECT `TBM26_STUDY_ID`, `TBM26_LIST_CD`, `TBM26_LIST_ITEM_NO`, `TBM26_LIST_ITEM_NAME`, `TBM26_INNER_VALUE`, `TBM26_DEL_FLG`, `TBM26_CRT_DATETIME`, `TBM26_CRT_USER_ID`, `TBM26_CRT_PROG_NM`, `TBM26_UPD_DATETIME`, `TBM26_UPD_USER_ID`, `TBM26_UPD_PROG_NM`, `TBM26_UPD_CNT` FROM `TBM26_SEL_LIST_ITEM` WHERE `TBM26_STUDY_ID` = ? ORDER BY `TBM26_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005732", "DELETE FROM `TBM26_SEL_LIST_ITEM`  WHERE `TBM26_STUDY_ID` = ? AND `TBM26_LIST_CD` = ? AND `TBM26_LIST_ITEM_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005733", "SELECT `TBM25_STUDY_ID`, `TBM25_LIST_CD`, `TBM25_LIST_NM`, `TBM25_DEL_FLG`, `TBM25_CRT_DATETIME`, `TBM25_CRT_USER_ID`, `TBM25_CRT_PROG_NM`, `TBM25_UPD_DATETIME`, `TBM25_UPD_USER_ID`, `TBM25_UPD_PROG_NM`, `TBM25_UPD_CNT` FROM `TBM25_SEL_LIST` WHERE `TBM25_STUDY_ID` = ? ORDER BY `TBM25_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005734", "DELETE FROM `TBM25_SEL_LIST`  WHERE `TBM25_STUDY_ID` = ? AND `TBM25_LIST_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005735", "SELECT `TBM36_STUDY_ID`, `TBM36_CRF_ID`, `TBM36_COND_NO`, `TBM36_SELECT_CRF_ID`, `TBM36_DEL_FLG`, `TBM36_CRT_DATETIME`, `TBM36_CRT_USER_ID`, `TBM36_CRT_PROG_NM`, `TBM36_UPD_DATETIME`, `TBM36_UPD_USER_ID`, `TBM36_UPD_PROG_NM`, `TBM36_UPD_CNT` FROM `TBM36_CRF_SELECT` WHERE `TBM36_STUDY_ID` = ? ORDER BY `TBM36_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005736", "DELETE FROM `TBM36_CRF_SELECT`  WHERE `TBM36_STUDY_ID` = ? AND `TBM36_CRF_ID` = ? AND `TBM36_COND_NO` = ? AND `TBM36_SELECT_CRF_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005737", "SELECT `TBM33_STUDY_ID`, `TBM33_CRF_ID`, `TBM33_COND_NO`, `TBM33_COND_NM`, `TBM33_EXPRESSION`, `TBM33_COND_DIV`, `TBM33_CRF_ITEM_CD`, `TBM33_PRIOR_NO`, `TBM33_ERR_DIV`, `TBM33_ERR_MSG`, `TBM33_ENABLED_FLG`, `TBM33_REQUIRED_INPUT_FLG`, `TBM33_NUMERIC_RANGE_FLG`, `TBM33_DEL_FLG`, `TBM33_CRT_DATETIME`, `TBM33_CRT_USER_ID`, `TBM33_CRT_PROG_NM`, `TBM33_UPD_DATETIME`, `TBM33_UPD_USER_ID`, `TBM33_UPD_PROG_NM`, `TBM33_UPD_CNT` FROM `TBM33_CRF_COND` WHERE `TBM33_STUDY_ID` = ? ORDER BY `TBM33_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005738", "DELETE FROM `TBM33_CRF_COND`  WHERE `TBM33_STUDY_ID` = ? AND `TBM33_CRF_ID` = ? AND `TBM33_COND_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005739", "SELECT `TBM32_STUDY_ID`, `TBM32_CRF_ID`, `TBM32_CRF_ITEM_CD`, `TBM32_CRF_ITEM_NM`, `TBM32_CRF_ITEM_DIV`, `TBM32_CRF_ITEM_GRP_CD`, `TBM32_CRF_ITEM_GRP_ORDER`, `TBM32_LOCATION_X`, `TBM32_LOCATION_Y`, `TBM32_LOCATION_X2`, `TBM32_LOCATION_Y2`, `TBM32_TEXT_ALIGN_DIV`, `TBM32_TEXT_MAXROWS`, `TBM32_TEXT_MAXLENGTH`, `TBM32_DECIMAL_DIGITS`, `TBM32_CHK_TRUE_INNER_VALUE`, `TBM32_CHK_FALSE_INNER_VALUE`, `TBM32_FIXED_VALUE`, `TBM32_LIST_CD`, `TBM32_IMAGE_CD`, `TBM32_TEXT`, `TBM32_FONT_SIZE`, `TBM32_FONT_UL_FLG`, `TBM32_FONT_COLOR_DIV`, `TBM32_LINE_SIZE_DIV`, `TBM32_LINE_COLOR_DIV`, `TBM32_LINE_START_POINT_DIV`, `TBM32_LINE_END_POINT_DIV`, `TBM32_LINE_ANGLE`, `TBM32_AUTH_LVL_MIN`, `TBM32_ZORDER`, `TBM32_TAB_ORDER`, `TBM32_TABSTOP_FLG`, `TBM32_REQUIRED_INPUT_FLG`, `TBM32_MIN_VALUE`, `TBM32_MAX_VALUE`, `TBM32_CRF_ITEM_NOTE`, `TBM32_REF_CRF_ID`, `TBM32_REF_CRF_ITEM_CD`, `TBM32_DEL_FLG`, `TBM32_CRT_DATETIME`, `TBM32_CRT_USER_ID`, `TBM32_CRT_PROG_NM`, `TBM32_UPD_DATETIME`, `TBM32_UPD_USER_ID`, `TBM32_UPD_PROG_NM`, `TBM32_UPD_CNT` FROM `TBM32_CRF_ITEM` WHERE `TBM32_STUDY_ID` = ? ORDER BY `TBM32_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005740", "DELETE FROM `TBM32_CRF_ITEM`  WHERE `TBM32_STUDY_ID` = ? AND `TBM32_CRF_ID` = ? AND `TBM32_CRF_ITEM_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005741", "SELECT `TBM34_STUDY_ID`, `TBM34_CRF_ID`, `TBM34_STYDY_AUTH_CD`, `TBM34_DISPLAY_FLG`, `TBM34_DEL_FLG`, `TBM34_CRT_DATETIME`, `TBM34_CRT_USER_ID`, `TBM34_CRT_PROG_NM`, `TBM34_UPD_DATETIME`, `TBM34_UPD_USER_ID`, `TBM34_UPD_PROG_NM`, `TBM34_UPD_CNT` FROM `TBM34_CRF_AUTH` WHERE `TBM34_STUDY_ID` = ? ORDER BY `TBM34_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005742", "DELETE FROM `TBM34_CRF_AUTH`  WHERE `TBM34_STUDY_ID` = ? AND `TBM34_CRF_ID` = ? AND `TBM34_STYDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005743", "SELECT `TBM31_STUDY_ID`, `TBM31_CRF_ID`, `TBM31_CRF_NM`, `TBM31_CRF_SNM`, `TBM31_GRID_SIZE`, `TBM31_ORDER`, `TBM31_DEF_VISIT_NO`, `TBM31_DEF_DOMAIN_CD`, `TBM31_STATUS`, `TBM31_NOTE`, `TBM31_DEL_FLG`, `TBM31_CRT_DATETIME`, `TBM31_CRT_USER_ID`, `TBM31_CRT_PROG_NM`, `TBM31_UPD_DATETIME`, `TBM31_UPD_USER_ID`, `TBM31_UPD_PROG_NM`, `TBM31_UPD_CNT` FROM `TBM31_CRF` WHERE `TBM31_STUDY_ID` = ? ORDER BY `TBM31_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005744", "DELETE FROM `TBM31_CRF`  WHERE `TBM31_STUDY_ID` = ? AND `TBM31_CRF_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
      };
   }

   public void getResults( int cursor ,
                           IFieldGetter rslt ,
                           Object[] buf ) throws SQLException
   {
      switch ( cursor )
      {
            case 7 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[8])[0] = rslt.getGXDateTime(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((long[]) buf[20])[0] = rslt.getLong(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               return;
            case 9 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[8])[0] = rslt.getGXDateTime(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((long[]) buf[20])[0] = rslt.getLong(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               return;
            case 11 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((int[]) buf[19])[0] = rslt.getInt(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((String[]) buf[21])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[23])[0] = rslt.getGXDateTime(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((String[]) buf[25])[0] = rslt.getVarchar(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[29])[0] = rslt.getGXDateTime(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((String[]) buf[31])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((long[]) buf[35])[0] = rslt.getLong(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               return;
            case 13 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((int[]) buf[10])[0] = rslt.getInt(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[20])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((long[]) buf[26])[0] = rslt.getLong(15) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               return;
            case 15 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((byte[]) buf[2])[0] = rslt.getByte(3) ;
               ((int[]) buf[3])[0] = rslt.getInt(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[7])[0] = rslt.getGXDateTime(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[13])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((long[]) buf[19])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               return;
            case 17 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[8])[0] = rslt.getGXDateTime(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((long[]) buf[20])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               return;
            case 19 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((int[]) buf[4])[0] = rslt.getInt(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((short[]) buf[12])[0] = rslt.getShort(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((short[]) buf[14])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[18])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((String[]) buf[20])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[24])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((String[]) buf[26])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((long[]) buf[30])[0] = rslt.getLong(18) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               return;
            case 21 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((boolean[]) buf[1])[0] = rslt.wasNull();
               ((String[]) buf[2])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[9])[0] = rslt.getGXDateTime(6) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[15])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((long[]) buf[21])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               return;
            case 23 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((short[]) buf[5])[0] = rslt.getShort(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((short[]) buf[7])[0] = rslt.getShort(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((short[]) buf[14])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((byte[]) buf[16])[0] = rslt.getByte(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((byte[]) buf[18])[0] = rslt.getByte(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((String[]) buf[20])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(15) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((String[]) buf[26])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((String[]) buf[30])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               ((int[]) buf[32])[0] = rslt.getInt(19) ;
               ((boolean[]) buf[33])[0] = rslt.wasNull();
               ((String[]) buf[34])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[35])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[36])[0] = rslt.getGXDateTime(21) ;
               ((boolean[]) buf[37])[0] = rslt.wasNull();
               ((String[]) buf[38])[0] = rslt.getVarchar(22) ;
               ((boolean[]) buf[39])[0] = rslt.wasNull();
               ((String[]) buf[40])[0] = rslt.getVarchar(23) ;
               ((boolean[]) buf[41])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[42])[0] = rslt.getGXDateTime(24) ;
               ((boolean[]) buf[43])[0] = rslt.wasNull();
               ((String[]) buf[44])[0] = rslt.getVarchar(25) ;
               ((boolean[]) buf[45])[0] = rslt.wasNull();
               ((String[]) buf[46])[0] = rslt.getVarchar(26) ;
               ((boolean[]) buf[47])[0] = rslt.wasNull();
               ((long[]) buf[48])[0] = rslt.getLong(27) ;
               ((boolean[]) buf[49])[0] = rslt.wasNull();
               return;
            case 25 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[5])[0] = rslt.getGXDateTime(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[11])[0] = rslt.getGXDateTime(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((long[]) buf[17])[0] = rslt.getLong(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               return;
            case 27 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[4])[0] = rslt.getGXDateTime(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[10])[0] = rslt.getGXDateTime(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((long[]) buf[16])[0] = rslt.getLong(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               return;
            case 29 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[9])[0] = rslt.getGXDateTime(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[15])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((long[]) buf[21])[0] = rslt.getLong(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               return;
            case 31 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[6])[0] = rslt.getGXDateTime(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[12])[0] = rslt.getGXDateTime(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((long[]) buf[18])[0] = rslt.getLong(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               return;
            case 33 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((short[]) buf[3])[0] = rslt.getShort(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[6])[0] = rslt.getGXDateTime(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[12])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((long[]) buf[18])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               return;
            case 35 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((short[]) buf[11])[0] = rslt.getShort(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((String[]) buf[21])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((String[]) buf[23])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[25])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((String[]) buf[29])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[31])[0] = rslt.getGXDateTime(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((String[]) buf[35])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               ((long[]) buf[37])[0] = rslt.getLong(21) ;
               ((boolean[]) buf[38])[0] = rslt.wasNull();
               return;
            case 37 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((short[]) buf[9])[0] = rslt.getShort(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((short[]) buf[11])[0] = rslt.getShort(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((short[]) buf[13])[0] = rslt.getShort(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((short[]) buf[15])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((short[]) buf[17])[0] = rslt.getShort(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((byte[]) buf[21])[0] = rslt.getByte(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((short[]) buf[23])[0] = rslt.getShort(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((byte[]) buf[25])[0] = rslt.getByte(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((String[]) buf[29])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((String[]) buf[31])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((String[]) buf[35])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               ((String[]) buf[37])[0] = rslt.getVarchar(21) ;
               ((boolean[]) buf[38])[0] = rslt.wasNull();
               ((byte[]) buf[39])[0] = rslt.getByte(22) ;
               ((boolean[]) buf[40])[0] = rslt.wasNull();
               ((String[]) buf[41])[0] = rslt.getVarchar(23) ;
               ((boolean[]) buf[42])[0] = rslt.wasNull();
               ((long[]) buf[43])[0] = rslt.getLong(24) ;
               ((boolean[]) buf[44])[0] = rslt.wasNull();
               ((byte[]) buf[45])[0] = rslt.getByte(25) ;
               ((boolean[]) buf[46])[0] = rslt.wasNull();
               ((long[]) buf[47])[0] = rslt.getLong(26) ;
               ((boolean[]) buf[48])[0] = rslt.wasNull();
               ((String[]) buf[49])[0] = rslt.getVarchar(27) ;
               ((boolean[]) buf[50])[0] = rslt.wasNull();
               ((String[]) buf[51])[0] = rslt.getVarchar(28) ;
               ((boolean[]) buf[52])[0] = rslt.wasNull();
               ((short[]) buf[53])[0] = rslt.getShort(29) ;
               ((boolean[]) buf[54])[0] = rslt.wasNull();
               ((byte[]) buf[55])[0] = rslt.getByte(30) ;
               ((boolean[]) buf[56])[0] = rslt.wasNull();
               ((short[]) buf[57])[0] = rslt.getShort(31) ;
               ((boolean[]) buf[58])[0] = rslt.wasNull();
               ((short[]) buf[59])[0] = rslt.getShort(32) ;
               ((boolean[]) buf[60])[0] = rslt.wasNull();
               ((String[]) buf[61])[0] = rslt.getVarchar(33) ;
               ((boolean[]) buf[62])[0] = rslt.wasNull();
               ((String[]) buf[63])[0] = rslt.getVarchar(34) ;
               ((boolean[]) buf[64])[0] = rslt.wasNull();
               ((String[]) buf[65])[0] = rslt.getVarchar(35) ;
               ((boolean[]) buf[66])[0] = rslt.wasNull();
               ((String[]) buf[67])[0] = rslt.getVarchar(36) ;
               ((boolean[]) buf[68])[0] = rslt.wasNull();
               ((String[]) buf[69])[0] = rslt.getVarchar(37) ;
               ((boolean[]) buf[70])[0] = rslt.wasNull();
               ((short[]) buf[71])[0] = rslt.getShort(38) ;
               ((boolean[]) buf[72])[0] = rslt.wasNull();
               ((String[]) buf[73])[0] = rslt.getVarchar(39) ;
               ((boolean[]) buf[74])[0] = rslt.wasNull();
               ((String[]) buf[75])[0] = rslt.getVarchar(40) ;
               ((boolean[]) buf[76])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[77])[0] = rslt.getGXDateTime(41) ;
               ((boolean[]) buf[78])[0] = rslt.wasNull();
               ((String[]) buf[79])[0] = rslt.getVarchar(42) ;
               ((boolean[]) buf[80])[0] = rslt.wasNull();
               ((String[]) buf[81])[0] = rslt.getVarchar(43) ;
               ((boolean[]) buf[82])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[83])[0] = rslt.getGXDateTime(44) ;
               ((boolean[]) buf[84])[0] = rslt.wasNull();
               ((String[]) buf[85])[0] = rslt.getVarchar(45) ;
               ((boolean[]) buf[86])[0] = rslt.wasNull();
               ((String[]) buf[87])[0] = rslt.getVarchar(46) ;
               ((boolean[]) buf[88])[0] = rslt.wasNull();
               ((long[]) buf[89])[0] = rslt.getLong(47) ;
               ((boolean[]) buf[90])[0] = rslt.wasNull();
               return;
            case 39 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[7])[0] = rslt.getGXDateTime(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[13])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((long[]) buf[19])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               return;
            case 41 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((short[]) buf[6])[0] = rslt.getShort(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((int[]) buf[8])[0] = rslt.getInt(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((int[]) buf[10])[0] = rslt.getInt(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[20])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[26])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((String[]) buf[30])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               ((long[]) buf[32])[0] = rslt.getLong(18) ;
               ((boolean[]) buf[33])[0] = rslt.wasNull();
               return;
      }
   }

   public void setParameters( int cursor ,
                              IFieldSetter stmt ,
                              Object[] parms ) throws SQLException
   {
      switch ( cursor )
      {
            case 0 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 1 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 2 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 3 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 4 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 5 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 6 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 7 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 8 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 50, false);
               stmt.setVarchar(4, (String)parms[3], 2, false);
               return;
            case 9 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 10 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 1, false);
               stmt.setVarchar(4, (String)parms[3], 50, false);
               return;
            case 11 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 12 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 16, false);
               stmt.setVarchar(3, (String)parms[2], 50, false);
               return;
            case 13 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 14 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 16, false);
               return;
            case 15 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 16 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setByte(3, ((Number) parms[2]).byteValue());
               return;
            case 17 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 18 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               return;
            case 19 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 20 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 1, false);
               stmt.setVarchar(4, (String)parms[3], 50, false);
               return;
            case 21 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 22 :
               stmt.setVarchar(1, (String)parms[0], 50, false);
               return;
            case 23 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 24 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 16, false);
               stmt.setVarchar(3, (String)parms[2], 50, false);
               stmt.setVarchar(4, (String)parms[3], 20, false);
               return;
            case 25 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 26 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 128, false);
               stmt.setVarchar(3, (String)parms[2], 2, false);
               return;
            case 27 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 28 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               return;
            case 29 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
      }
      setparameters30( cursor, stmt, parms) ;
   }

   public void setparameters30( int cursor ,
                                IFieldSetter stmt ,
                                Object[] parms ) throws SQLException
   {
      switch ( cursor )
      {
            case 30 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               return;
            case 31 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 32 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               return;
            case 33 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 34 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               stmt.setShort(4, ((Number) parms[3]).shortValue());
               return;
            case 35 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 36 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               return;
            case 37 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 38 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 50, false);
               return;
            case 39 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 40 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 2, false);
               return;
            case 41 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
            case 42 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               return;
      }
   }

}

