/*
               File: ab402_pc21_crf_def_csv_output_impl
        Description: CRFíËã`çœCSVèoóÕ
             Author: GeneXus Java Generator version 10_3_3-92797
       Generated on: July 15, 2020 13:16:56.71
       Program type: Main program
          Main DBMS: mysql
*/
import com.genexus.*;
import com.genexus.db.*;
import com.genexus.distributed.*;
import com.genexus.webpanels.*;
import java.sql.*;
import com.genexus.search.*;

public final  class ab402_pc21_crf_def_csv_output_impl extends GXWebProcedure
{
   public ab402_pc21_crf_def_csv_output_impl( com.genexus.internet.HttpContext context )
   {
      super(context);
   }

   public void webExecute( )
   {
      GXKey = context.getSiteKey( ) ;
      if ( GxWebError == 0 )
      {
         GXDecQS = com.genexus.util.Encryption.uridecrypt64( httpContext.getQueryString( ), GXKey) ;
         if ( ( GXutil.strcmp(GXutil.right( GXDecQS, 6), com.genexus.util.Encryption.checksum( GXutil.left( GXDecQS, GXutil.len( GXDecQS)-6), 6)) == 0 ) && ( GXutil.strcmp(GXutil.substring( GXDecQS, 1, GXutil.len( "ab402_pc21_crf_def_csv_output")), "ab402_pc21_crf_def_csv_output") == 0 ) )
         {
            httpContext.setQueryString( GXutil.right( GXutil.left( GXDecQS, GXutil.len( GXDecQS)-6), GXutil.len( GXutil.left( GXDecQS, GXutil.len( GXDecQS)-6))-GXutil.len( "ab402_pc21_crf_def_csv_output"))) ;
         }
         else
         {
            GxWebError = (byte)(1) ;
            httpContext.sendError( 403 );
            GXutil.writeLog("send_http_error_code 403");
         }
      }
      entryPointCalled = false ;
      gxfirstwebparm = httpContext.GetNextPar( ) ;
      if ( ! entryPointCalled )
      {
         AV9P_STUDY_ID = GXutil.lval( gxfirstwebparm) ;
         if ( GXutil.strcmp(gxfirstwebparm, "viewer") != 0 )
         {
            AV19W_RTN_CD = (short)(GXutil.lval( httpContext.GetNextPar( ))) ;
            AV20W_RTN_MSG = httpContext.GetNextPar( ) ;
         }
      }
      /* GeneXus formulas */
      /* Output device settings */
      privateExecute();
   }

   private void privateExecute( )
   {
      AV8C_TAM02_APP_ID = "B402" ;
      /* Execute user subroutine: S111 */
      S111 ();
      if ( returnInSub )
      {
         returnInSub = true;
         cleanup();
         if (true) return;
      }
      AV19W_RTN_CD = (short)(0) ;
      AV20W_RTN_MSG = "" ;
      AV14W_CSV_KAK = ".CSV" ;
      AV13W_CSV_CNT = 0 ;
      AV16W_FILE_NAME = GXutil.str( AV9P_STUDY_ID, 10, 0) + "_crf_def" + AV14W_CSV_KAK ;
      AV21W_B402_SD21_CRF_DEF.clear();
      /* Using cursor P00552 */
      pr_default.execute(0, new Object[] {new Long(AV9P_STUDY_ID)});
      while ( (pr_default.getStatus(0) != 101) )
      {
         A788VBM01_TBM32_STUDY_ID = P00552_A788VBM01_TBM32_STUDY_ID[0] ;
         n788VBM01_TBM32_STUDY_ID = P00552_n788VBM01_TBM32_STUDY_ID[0] ;
         A789VBM01_TBM32_CRF_ID = P00552_A789VBM01_TBM32_CRF_ID[0] ;
         n789VBM01_TBM32_CRF_ID = P00552_n789VBM01_TBM32_CRF_ID[0] ;
         A790VBM01_TBM31_CRF_SNM = P00552_A790VBM01_TBM31_CRF_SNM[0] ;
         n790VBM01_TBM31_CRF_SNM = P00552_n790VBM01_TBM31_CRF_SNM[0] ;
         A791VBM01_TBM32_CRF_ITEM_CD = P00552_A791VBM01_TBM32_CRF_ITEM_CD[0] ;
         n791VBM01_TBM32_CRF_ITEM_CD = P00552_n791VBM01_TBM32_CRF_ITEM_CD[0] ;
         A792VBM01_TBM32_CRF_ITEM_NM = P00552_A792VBM01_TBM32_CRF_ITEM_NM[0] ;
         n792VBM01_TBM32_CRF_ITEM_NM = P00552_n792VBM01_TBM32_CRF_ITEM_NM[0] ;
         A793VBM01_TBM32_CRF_ITEM_DIV = P00552_A793VBM01_TBM32_CRF_ITEM_DIV[0] ;
         n793VBM01_TBM32_CRF_ITEM_DIV = P00552_n793VBM01_TBM32_CRF_ITEM_DIV[0] ;
         A794VBM01_TBM32_CRF_ITEM_GRP_CD = P00552_A794VBM01_TBM32_CRF_ITEM_GRP_CD[0] ;
         n794VBM01_TBM32_CRF_ITEM_GRP_CD = P00552_n794VBM01_TBM32_CRF_ITEM_GRP_CD[0] ;
         A795VBM01_TBM32_CRF_ITEM_GRP_ORDER = P00552_A795VBM01_TBM32_CRF_ITEM_GRP_ORDER[0] ;
         n795VBM01_TBM32_CRF_ITEM_GRP_ORDER = P00552_n795VBM01_TBM32_CRF_ITEM_GRP_ORDER[0] ;
         A796VBM01_TBM32_LOCATION_X = P00552_A796VBM01_TBM32_LOCATION_X[0] ;
         n796VBM01_TBM32_LOCATION_X = P00552_n796VBM01_TBM32_LOCATION_X[0] ;
         A797VBM01_TBM32_LOCATION_Y = P00552_A797VBM01_TBM32_LOCATION_Y[0] ;
         n797VBM01_TBM32_LOCATION_Y = P00552_n797VBM01_TBM32_LOCATION_Y[0] ;
         A798VBM01_TBM32_LOCATION_X2 = P00552_A798VBM01_TBM32_LOCATION_X2[0] ;
         n798VBM01_TBM32_LOCATION_X2 = P00552_n798VBM01_TBM32_LOCATION_X2[0] ;
         A799VBM01_TBM32_LOCATION_Y2 = P00552_A799VBM01_TBM32_LOCATION_Y2[0] ;
         n799VBM01_TBM32_LOCATION_Y2 = P00552_n799VBM01_TBM32_LOCATION_Y2[0] ;
         A800VBM01_TBM32_TEXT_ALIGN_DIV = P00552_A800VBM01_TBM32_TEXT_ALIGN_DIV[0] ;
         n800VBM01_TBM32_TEXT_ALIGN_DIV = P00552_n800VBM01_TBM32_TEXT_ALIGN_DIV[0] ;
         A801VBM01_TBM32_TEXT_MAXROWS = P00552_A801VBM01_TBM32_TEXT_MAXROWS[0] ;
         n801VBM01_TBM32_TEXT_MAXROWS = P00552_n801VBM01_TBM32_TEXT_MAXROWS[0] ;
         A802VBM01_TBM32_TEXT_MAXLENGTH = P00552_A802VBM01_TBM32_TEXT_MAXLENGTH[0] ;
         n802VBM01_TBM32_TEXT_MAXLENGTH = P00552_n802VBM01_TBM32_TEXT_MAXLENGTH[0] ;
         A803VBM01_TBM32_DECIMAL_DIGITS = P00552_A803VBM01_TBM32_DECIMAL_DIGITS[0] ;
         n803VBM01_TBM32_DECIMAL_DIGITS = P00552_n803VBM01_TBM32_DECIMAL_DIGITS[0] ;
         A804VBM01_TBM32_CHK_TRUE_INNER_VAL = P00552_A804VBM01_TBM32_CHK_TRUE_INNER_VAL[0] ;
         n804VBM01_TBM32_CHK_TRUE_INNER_VAL = P00552_n804VBM01_TBM32_CHK_TRUE_INNER_VAL[0] ;
         A805VBM01_TBM32_CHK_FALSE_INNER_VA = P00552_A805VBM01_TBM32_CHK_FALSE_INNER_VA[0] ;
         n805VBM01_TBM32_CHK_FALSE_INNER_VA = P00552_n805VBM01_TBM32_CHK_FALSE_INNER_VA[0] ;
         A806VBM01_TBM32_FIXED_VALUE = P00552_A806VBM01_TBM32_FIXED_VALUE[0] ;
         n806VBM01_TBM32_FIXED_VALUE = P00552_n806VBM01_TBM32_FIXED_VALUE[0] ;
         A807VBM01_TBM32_LIST_CD = P00552_A807VBM01_TBM32_LIST_CD[0] ;
         n807VBM01_TBM32_LIST_CD = P00552_n807VBM01_TBM32_LIST_CD[0] ;
         A808VBM01_TBM25_LIST_NM = P00552_A808VBM01_TBM25_LIST_NM[0] ;
         n808VBM01_TBM25_LIST_NM = P00552_n808VBM01_TBM25_LIST_NM[0] ;
         A809VBM01_TBM32_IMAGE_CD = P00552_A809VBM01_TBM32_IMAGE_CD[0] ;
         n809VBM01_TBM32_IMAGE_CD = P00552_n809VBM01_TBM32_IMAGE_CD[0] ;
         A810VBM01_TBM32_TEXT = P00552_A810VBM01_TBM32_TEXT[0] ;
         n810VBM01_TBM32_TEXT = P00552_n810VBM01_TBM32_TEXT[0] ;
         A811VBM01_TBM32_FONT_SIZE = P00552_A811VBM01_TBM32_FONT_SIZE[0] ;
         n811VBM01_TBM32_FONT_SIZE = P00552_n811VBM01_TBM32_FONT_SIZE[0] ;
         A812VBM01_TBM32_FONT_UL_FLG = P00552_A812VBM01_TBM32_FONT_UL_FLG[0] ;
         n812VBM01_TBM32_FONT_UL_FLG = P00552_n812VBM01_TBM32_FONT_UL_FLG[0] ;
         A813VBM01_TBM32_FONT_COLOR_DIV = P00552_A813VBM01_TBM32_FONT_COLOR_DIV[0] ;
         n813VBM01_TBM32_FONT_COLOR_DIV = P00552_n813VBM01_TBM32_FONT_COLOR_DIV[0] ;
         A814VBM01_TBM32_LINE_SIZE_DIV = P00552_A814VBM01_TBM32_LINE_SIZE_DIV[0] ;
         n814VBM01_TBM32_LINE_SIZE_DIV = P00552_n814VBM01_TBM32_LINE_SIZE_DIV[0] ;
         A815VBM01_TBM32_LINE_COLOR_DIV = P00552_A815VBM01_TBM32_LINE_COLOR_DIV[0] ;
         n815VBM01_TBM32_LINE_COLOR_DIV = P00552_n815VBM01_TBM32_LINE_COLOR_DIV[0] ;
         A816VBM01_TBM32_LINE_START_POINT_D = P00552_A816VBM01_TBM32_LINE_START_POINT_D[0] ;
         n816VBM01_TBM32_LINE_START_POINT_D = P00552_n816VBM01_TBM32_LINE_START_POINT_D[0] ;
         A817VBM01_TBM32_LINE_END_POINT_DIV = P00552_A817VBM01_TBM32_LINE_END_POINT_DIV[0] ;
         n817VBM01_TBM32_LINE_END_POINT_DIV = P00552_n817VBM01_TBM32_LINE_END_POINT_DIV[0] ;
         A818VBM01_TBM32_LINE_ANGLE = P00552_A818VBM01_TBM32_LINE_ANGLE[0] ;
         n818VBM01_TBM32_LINE_ANGLE = P00552_n818VBM01_TBM32_LINE_ANGLE[0] ;
         A819VBM01_TBM32_AUTH_LVL_MIN = P00552_A819VBM01_TBM32_AUTH_LVL_MIN[0] ;
         n819VBM01_TBM32_AUTH_LVL_MIN = P00552_n819VBM01_TBM32_AUTH_LVL_MIN[0] ;
         A820VBM01_TBM32_ZORDER = P00552_A820VBM01_TBM32_ZORDER[0] ;
         n820VBM01_TBM32_ZORDER = P00552_n820VBM01_TBM32_ZORDER[0] ;
         A821VBM01_TBM32_TAB_ORDER = P00552_A821VBM01_TBM32_TAB_ORDER[0] ;
         n821VBM01_TBM32_TAB_ORDER = P00552_n821VBM01_TBM32_TAB_ORDER[0] ;
         A822VBM01_TBM32_TABSTOP_FLG = P00552_A822VBM01_TBM32_TABSTOP_FLG[0] ;
         n822VBM01_TBM32_TABSTOP_FLG = P00552_n822VBM01_TBM32_TABSTOP_FLG[0] ;
         A823VBM01_TBM32_REQUIRED_INPUT_FLG = P00552_A823VBM01_TBM32_REQUIRED_INPUT_FLG[0] ;
         n823VBM01_TBM32_REQUIRED_INPUT_FLG = P00552_n823VBM01_TBM32_REQUIRED_INPUT_FLG[0] ;
         A824VBM01_TBM32_MIN_VALUE = P00552_A824VBM01_TBM32_MIN_VALUE[0] ;
         n824VBM01_TBM32_MIN_VALUE = P00552_n824VBM01_TBM32_MIN_VALUE[0] ;
         A825VBM01_TBM32_MAX_VALUE = P00552_A825VBM01_TBM32_MAX_VALUE[0] ;
         n825VBM01_TBM32_MAX_VALUE = P00552_n825VBM01_TBM32_MAX_VALUE[0] ;
         A826VBM01_TBM32_CRF_ITEM_NOTE = P00552_A826VBM01_TBM32_CRF_ITEM_NOTE[0] ;
         n826VBM01_TBM32_CRF_ITEM_NOTE = P00552_n826VBM01_TBM32_CRF_ITEM_NOTE[0] ;
         A827VBM01_TBM32_REF_CRF_ID = P00552_A827VBM01_TBM32_REF_CRF_ID[0] ;
         n827VBM01_TBM32_REF_CRF_ID = P00552_n827VBM01_TBM32_REF_CRF_ID[0] ;
         A828VBM01_TBM32_REF_CRF_ITEM_CD = P00552_A828VBM01_TBM32_REF_CRF_ITEM_CD[0] ;
         n828VBM01_TBM32_REF_CRF_ITEM_CD = P00552_n828VBM01_TBM32_REF_CRF_ITEM_CD[0] ;
         A829VBM01_TBM37_VISIT_NO = P00552_A829VBM01_TBM37_VISIT_NO[0] ;
         n829VBM01_TBM37_VISIT_NO = P00552_n829VBM01_TBM37_VISIT_NO[0] ;
         A830VBM01_TBM37_DOM_CD = P00552_A830VBM01_TBM37_DOM_CD[0] ;
         n830VBM01_TBM37_DOM_CD = P00552_n830VBM01_TBM37_DOM_CD[0] ;
         A831VBM01_TBM37_DOM_VAR_NM = P00552_A831VBM01_TBM37_DOM_VAR_NM[0] ;
         n831VBM01_TBM37_DOM_VAR_NM = P00552_n831VBM01_TBM37_DOM_VAR_NM[0] ;
         A832VBM01_TBM37_DOM_ITM_GRP_OID = P00552_A832VBM01_TBM37_DOM_ITM_GRP_OID[0] ;
         n832VBM01_TBM37_DOM_ITM_GRP_OID = P00552_n832VBM01_TBM37_DOM_ITM_GRP_OID[0] ;
         A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S = P00552_A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S[0] ;
         n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S = P00552_n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S[0] ;
         A834VBM01_TBM37_DOM_ITM_GRP_ROWNO = P00552_A834VBM01_TBM37_DOM_ITM_GRP_ROWNO[0] ;
         n834VBM01_TBM37_DOM_ITM_GRP_ROWNO = P00552_n834VBM01_TBM37_DOM_ITM_GRP_ROWNO[0] ;
         A835VBM01_TBM41_NCM_METADATA_ID = P00552_A835VBM01_TBM41_NCM_METADATA_ID[0] ;
         n835VBM01_TBM41_NCM_METADATA_ID = P00552_n835VBM01_TBM41_NCM_METADATA_ID[0] ;
         AV22W_B402_SD21_CRF_DEF_ITEM = (SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem)new SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem(remoteHandle, context);
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_study_id( A788VBM01_TBM32_STUDY_ID );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_id( A789VBM01_TBM32_CRF_ID );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm31_crf_snm( A790VBM01_TBM31_CRF_SNM );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_cd( A791VBM01_TBM32_CRF_ITEM_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Sort_crf_item_cd( GXutil.lval( GXutil.strReplace( A791VBM01_TBM32_CRF_ITEM_CD, "CRFItem_", "")) );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_nm( A792VBM01_TBM32_CRF_ITEM_NM );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_div( A793VBM01_TBM32_CRF_ITEM_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_grp_cd( A794VBM01_TBM32_CRF_ITEM_GRP_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_grp_order( A795VBM01_TBM32_CRF_ITEM_GRP_ORDER );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_x( A796VBM01_TBM32_LOCATION_X );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_y( A797VBM01_TBM32_LOCATION_Y );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_x2( A798VBM01_TBM32_LOCATION_X2 );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_y2( A799VBM01_TBM32_LOCATION_Y2 );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_align_div( A800VBM01_TBM32_TEXT_ALIGN_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_maxrows( A801VBM01_TBM32_TEXT_MAXROWS );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_maxlength( A802VBM01_TBM32_TEXT_MAXLENGTH );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_decimal_digits( A803VBM01_TBM32_DECIMAL_DIGITS );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_chk_true_inner_value( A804VBM01_TBM32_CHK_TRUE_INNER_VAL );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_chk_false_inner_value( A805VBM01_TBM32_CHK_FALSE_INNER_VA );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_fixed_value( A806VBM01_TBM32_FIXED_VALUE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_list_cd( A807VBM01_TBM32_LIST_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm25_list_nm( A808VBM01_TBM25_LIST_NM );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_image_cd( A809VBM01_TBM32_IMAGE_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text( A810VBM01_TBM32_TEXT );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_size( A811VBM01_TBM32_FONT_SIZE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_ul_flg( A812VBM01_TBM32_FONT_UL_FLG );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_color_div( A813VBM01_TBM32_FONT_COLOR_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_size_div( A814VBM01_TBM32_LINE_SIZE_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_color_div( A815VBM01_TBM32_LINE_COLOR_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_start_point_div( A816VBM01_TBM32_LINE_START_POINT_D );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_end_point_div( A817VBM01_TBM32_LINE_END_POINT_DIV );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_angle( A818VBM01_TBM32_LINE_ANGLE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_auth_lvl_min( A819VBM01_TBM32_AUTH_LVL_MIN );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_zorder( A820VBM01_TBM32_ZORDER );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_tab_order( A821VBM01_TBM32_TAB_ORDER );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_tabstop_flg( A822VBM01_TBM32_TABSTOP_FLG );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_required_input_flg( A823VBM01_TBM32_REQUIRED_INPUT_FLG );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_min_value( A824VBM01_TBM32_MIN_VALUE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_max_value( A825VBM01_TBM32_MAX_VALUE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_note( A826VBM01_TBM32_CRF_ITEM_NOTE );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_ref_crf_id( A827VBM01_TBM32_REF_CRF_ID );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_ref_crf_item_cd( A828VBM01_TBM32_REF_CRF_ITEM_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_visit_no( A829VBM01_TBM37_VISIT_NO );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_cd( A830VBM01_TBM37_DOM_CD );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_var_nm( A831VBM01_TBM37_DOM_VAR_NM );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_oid( A832VBM01_TBM37_DOM_ITM_GRP_OID );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_attr_seq( A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_rowno( A834VBM01_TBM37_DOM_ITM_GRP_ROWNO );
         AV22W_B402_SD21_CRF_DEF_ITEM.setgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm41_ncm_metadata_id( A835VBM01_TBM41_NCM_METADATA_ID );
         AV21W_B402_SD21_CRF_DEF.add(AV22W_B402_SD21_CRF_DEF_ITEM, 0);
         pr_default.readNext(0);
      }
      pr_default.close(0);
      AV21W_B402_SD21_CRF_DEF.sort("VBM01_TBM32_CRF_ID,SORT_CRF_ITEM_CD,VBM01_TBM37_VISIT_NO,VBM01_TBM37_DOM_CD,VBM01_TBM37_DOM_VAR_NM,VBM01_TBM37_DOM_ITM_GRP_OID,VBM01_TBM37_DOM_ITM_GRP_ROWNO");
      AV11W_A812_SD01_CSV_OUTPUT.clear();
      AV12W_A812_SD01_CSV_OUTPUT_ITEM = (SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem)new SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem(remoteHandle, context);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ééå±ID", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFID", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFó™èÃ", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFçÄñ⁄ÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFçÄñ⁄ñº", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFçÄñ⁄ãÊï™", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("CRFçÄñ⁄ÉOÉãÅ[ÉvÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ìØàÍçÄñ⁄ÉOÉãÅ[Évì‡åãçáèá", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("äJénç¿ïWX", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("äJénç¿ïWY", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("èIóπç¿ïWX", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("èIóπç¿ïWY", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉeÉLÉXÉgà íuãÊï™", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉeÉLÉXÉgç≈ëÂçsêî", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉeÉLÉXÉgç≈ëÂï∂éöêî", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("è¨êîì_à»â∫åÖêî", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("É`ÉFÉbÉNÉ{ÉbÉNÉXÅEÉâÉWÉItrueéûì‡ïîíl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("É`ÉFÉbÉNÉ{ÉbÉNÉXfalseéûì‡ïîíl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("å≈íËíl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ëIëÉäÉXÉgÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ëIëÉäÉXÉgñº", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("âÊëúÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ï\é¶ÉeÉLÉXÉg", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉtÉHÉìÉgÉTÉCÉY", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉtÉHÉìÉgÉAÉìÉ_Å[ÉâÉCÉìÉtÉâÉO", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉtÉHÉìÉgÉJÉâÅ[", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉâÉCÉìëæÇ≥", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉâÉCÉìÉJÉâÅ[", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉâÉCÉìäJénì_ÉXÉ^ÉCÉããÊï™", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉâÉCÉìèIóπì_ÉXÉ^ÉCÉããÊï™", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉâÉCÉìäpìx", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ç≈í·ì¸óÕå†å¿ÉåÉxÉã", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("èdÇ»ÇËèá", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("É^Éuà⁄ìÆèá", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("É^ÉuÉXÉgÉbÉvÉtÉâÉO", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ïKê{ì¸óÕÉtÉâÉO", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ì¸óÕâ∫å¿íl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ì¸óÕè„å¿íl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("îıçl", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("éQè∆êÊCRFID", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("éQè∆êÊCRFçÄñ⁄ÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("VISITî‘çÜ", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉhÉÅÉCÉìÉRÅ[Éh", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉhÉÅÉCÉìïœêîñº", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉhÉÅÉCÉìì‡çÄñ⁄ÉOÉãÅ[ÉvOID", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("ÉhÉÅÉCÉìì‡çÄñ⁄ÉOÉãÅ[Évì‡òAî‘", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("çÄñ⁄ÉOÉãÅ[Évçsî‘çÜ", 0);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add("NetCommonsÉÅÉ^ÉfÅ[É^ID", 0);
      AV11W_A812_SD01_CSV_OUTPUT.add(AV12W_A812_SD01_CSV_OUTPUT_ITEM, 0);
      AV26GXV1 = 1 ;
      while ( AV26GXV1 <= AV21W_B402_SD21_CRF_DEF.size() )
      {
         AV22W_B402_SD21_CRF_DEF_ITEM = (SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem)((SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem)AV21W_B402_SD21_CRF_DEF.elementAt(-1+AV26GXV1));
         AV13W_CSV_CNT = (long)(AV13W_CSV_CNT+1) ;
         AV12W_A812_SD01_CSV_OUTPUT_ITEM = (SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem)new SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem(remoteHandle, context);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_study_id(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_id(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm31_crf_snm(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_nm(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_div(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_grp_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_grp_order(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_x(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_y(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_x2(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_location_y2(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_align_div(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_maxrows(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text_maxlength(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_decimal_digits(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_chk_true_inner_value(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_chk_false_inner_value(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_fixed_value(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_list_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm25_list_nm(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_image_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_text(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_size(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_ul_flg(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_font_color_div(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_size_div(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_color_div(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_start_point_div(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_end_point_div(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_line_angle(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_auth_lvl_min(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_zorder(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_tab_order(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_tabstop_flg(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_required_input_flg(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_min_value(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_max_value(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_crf_item_note(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_ref_crf_id(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm32_ref_crf_item_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_visit_no(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_cd(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_var_nm(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_oid(), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_attr_seq(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( GXutil.str( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm37_dom_itm_grp_rowno(), 10, 0)), 0);
         AV12W_A812_SD01_CSV_OUTPUT_ITEM.getgxTv_SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem_Csv_data().add(GXutil.trim( AV22W_B402_SD21_CRF_DEF_ITEM.getgxTv_SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem_Vbm01_tbm41_ncm_metadata_id()), 0);
         AV11W_A812_SD01_CSV_OUTPUT.add(AV12W_A812_SD01_CSV_OUTPUT_ITEM, 0);
         AV26GXV1 = (int)(AV26GXV1+1) ;
      }
      if ( AV13W_CSV_CNT > 0 )
      {
         /* Execute user subroutine: S131 */
         S131 ();
         if ( returnInSub )
         {
            returnInSub = true;
            cleanup();
            if (true) return;
         }
         new a804_pc01_syslog(remoteHandle, context).execute( AV27Pgmname, "INF", GXutil.trim( GXutil.str( context.globals.Gx_dbe, 10, 0))+":"+context.globals.Gx_dbt) ;
         /* Execute user subroutine: S141 */
         S141 ();
         if ( returnInSub )
         {
            returnInSub = true;
            cleanup();
            if (true) return;
         }
      }
      else
      {
         GXt_char1 = AV20W_RTN_MSG ;
         GXv_char2[0] = GXt_char1 ;
         new a805_pc01_msg_get(remoteHandle, context).execute( "AE00004", "", "", "", "", "", GXv_char2) ;
         ab402_pc21_crf_def_csv_output_impl.this.GXt_char1 = GXv_char2[0] ;
         AV20W_RTN_MSG = GXt_char1 ;
      }
      if ( ! (GXutil.strcmp("", httpContext.wjLoc)==0) )
      {
         httpContext.redirect( httpContext.wjLoc );
         httpContext.wjLoc = "" ;
      }
      cleanup();
   }

   public void S111( )
   {
      /* 'SUB_INIT' Routine */
      GXActiveErrHndl = 1 ;
      GXv_SdtA_LOGIN_SDT3[0] = AV10W_A_LOGIN_SDT;
      GXv_char2[0] = AV15W_ERRCD ;
      new a401_pc01_login_check(remoteHandle, context).execute( GXv_SdtA_LOGIN_SDT3, GXv_char2) ;
      AV10W_A_LOGIN_SDT = GXv_SdtA_LOGIN_SDT3[0] ;
      ab402_pc21_crf_def_csv_output_impl.this.AV15W_ERRCD = GXv_char2[0] ;
      if ( GXutil.strcmp(AV15W_ERRCD, "0") != 0 )
      {
         GXKey = context.getSiteKey( ) ;
         GXEncryptionTmp = "a105_wp01_error"+GXutil.URLEncode(GXutil.rtrim("1")) ;
         httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
         httpContext.wjLocDisableFrm = (byte)(1) ;
      }
   }

   public void S121( )
   {
      /* 'SUB_ERROR' Routine */
      new a804_pc01_syslog(remoteHandle, context).execute( AV27Pgmname, "ERR", GXutil.trim( GXutil.str( context.globals.Gx_dbe, 10, 0))+":"+context.globals.Gx_dbt) ;
      GXKey = context.getSiteKey( ) ;
      GXEncryptionTmp = "a105_wp01_error"+GXutil.URLEncode(GXutil.rtrim("9")) ;
      httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
      httpContext.wjLocDisableFrm = (byte)(1) ;
      httpContext.nUserReturn = (byte)(1) ;
      returnInSub = true;
      if (true) return;
   }

   public void S131( )
   {
      /* 'SUB_CSV_OUTPUT' Routine */
      GXv_char2[0] = AV17W_FILE_PATH ;
      GXv_char4[0] = AV20W_RTN_MSG ;
      new a812_pc03_csv_output_utf8b(remoteHandle, context).execute( AV10W_A_LOGIN_SDT, "", AV11W_A812_SD01_CSV_OUTPUT, AV16W_FILE_NAME, GXv_char2, GXv_char4) ;
      ab402_pc21_crf_def_csv_output_impl.this.AV17W_FILE_PATH = GXv_char2[0] ;
      ab402_pc21_crf_def_csv_output_impl.this.AV20W_RTN_MSG = GXv_char4[0] ;
      if ( ! (GXutil.strcmp("", AV20W_RTN_MSG)==0) )
      {
         httpContext.GX_msglist.addItem(AV20W_RTN_MSG);
         httpContext.nUserReturn = (byte)(1) ;
         returnInSub = true;
         if (true) return;
      }
   }

   public void S141( )
   {
      /* 'SUB_CSV_DAWNLOAD' Routine */
      GXKey = context.getSiteKey( ) ;
      GXEncryptionTmp = "aa811_pc01_download_dialog"+GXutil.URLEncode(GXutil.rtrim(AV17W_FILE_PATH)) + "," + GXutil.URLEncode(GXutil.rtrim(AV16W_FILE_NAME)) ;
      httpContext.wjLoc = formatLink("aa811_pc01_download_dialog") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
      httpContext.wjLocDisableFrm = (byte)(0) ;
   }

   protected boolean IntegratedSecurityEnabled( )
   {
      return false;
   }

   protected int IntegratedSecurityLevel( )
   {
      return 0;
   }

   protected String IntegratedSecurityPermissionPrefix( )
   {
      return "";
   }

   protected void cleanup( )
   {
      CloseOpenCursors();
      super.cleanup();
   }

   protected void CloseOpenCursors( )
   {
   }

   /* Aggregate/select formulas */
   /* Error handler code */
   public void handleError( )
   {
      if ( context.globals.getErr( ) != 0 )
      {
         Gx_err = context.globals.getErr( ) ;
         Gx_emsg = context.globals.getErrMsg( ) ;
         switch ( GXActiveErrHndl )
         {
               case 1 :
                  /* Execute user subroutine: S121 */
                  S121 ();
                  if ( returnInSub )
                  {
                     returnInSub = true;
                     cleanup();
                     if (true) return;
                  }
                  break;
         }
      }
   }

   public void initialize( )
   {
      GXKey = "" ;
      GXDecQS = "" ;
      gxfirstwebparm = "" ;
      AV20W_RTN_MSG = "" ;
      AV8C_TAM02_APP_ID = "" ;
      AV14W_CSV_KAK = "" ;
      AV16W_FILE_NAME = "" ;
      AV21W_B402_SD21_CRF_DEF = new GxObjectCollection(SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem.class, "B402_SD21_CRF_DEF.B402_SD21_CRF_DEFItem", "tablet-EDC_GXXEV3U3", remoteHandle);
      scmdbuf = "" ;
      P00552_A788VBM01_TBM32_STUDY_ID = new long[1] ;
      P00552_n788VBM01_TBM32_STUDY_ID = new boolean[] {false} ;
      P00552_A789VBM01_TBM32_CRF_ID = new long[1] ;
      P00552_n789VBM01_TBM32_CRF_ID = new boolean[] {false} ;
      P00552_A790VBM01_TBM31_CRF_SNM = new String[] {""} ;
      P00552_n790VBM01_TBM31_CRF_SNM = new boolean[] {false} ;
      P00552_A791VBM01_TBM32_CRF_ITEM_CD = new String[] {""} ;
      P00552_n791VBM01_TBM32_CRF_ITEM_CD = new boolean[] {false} ;
      P00552_A792VBM01_TBM32_CRF_ITEM_NM = new String[] {""} ;
      P00552_n792VBM01_TBM32_CRF_ITEM_NM = new boolean[] {false} ;
      P00552_A793VBM01_TBM32_CRF_ITEM_DIV = new String[] {""} ;
      P00552_n793VBM01_TBM32_CRF_ITEM_DIV = new boolean[] {false} ;
      P00552_A794VBM01_TBM32_CRF_ITEM_GRP_CD = new String[] {""} ;
      P00552_n794VBM01_TBM32_CRF_ITEM_GRP_CD = new boolean[] {false} ;
      P00552_A795VBM01_TBM32_CRF_ITEM_GRP_ORDER = new long[1] ;
      P00552_n795VBM01_TBM32_CRF_ITEM_GRP_ORDER = new boolean[] {false} ;
      P00552_A796VBM01_TBM32_LOCATION_X = new long[1] ;
      P00552_n796VBM01_TBM32_LOCATION_X = new boolean[] {false} ;
      P00552_A797VBM01_TBM32_LOCATION_Y = new long[1] ;
      P00552_n797VBM01_TBM32_LOCATION_Y = new boolean[] {false} ;
      P00552_A798VBM01_TBM32_LOCATION_X2 = new long[1] ;
      P00552_n798VBM01_TBM32_LOCATION_X2 = new boolean[] {false} ;
      P00552_A799VBM01_TBM32_LOCATION_Y2 = new long[1] ;
      P00552_n799VBM01_TBM32_LOCATION_Y2 = new boolean[] {false} ;
      P00552_A800VBM01_TBM32_TEXT_ALIGN_DIV = new String[] {""} ;
      P00552_n800VBM01_TBM32_TEXT_ALIGN_DIV = new boolean[] {false} ;
      P00552_A801VBM01_TBM32_TEXT_MAXROWS = new long[1] ;
      P00552_n801VBM01_TBM32_TEXT_MAXROWS = new boolean[] {false} ;
      P00552_A802VBM01_TBM32_TEXT_MAXLENGTH = new long[1] ;
      P00552_n802VBM01_TBM32_TEXT_MAXLENGTH = new boolean[] {false} ;
      P00552_A803VBM01_TBM32_DECIMAL_DIGITS = new long[1] ;
      P00552_n803VBM01_TBM32_DECIMAL_DIGITS = new boolean[] {false} ;
      P00552_A804VBM01_TBM32_CHK_TRUE_INNER_VAL = new String[] {""} ;
      P00552_n804VBM01_TBM32_CHK_TRUE_INNER_VAL = new boolean[] {false} ;
      P00552_A805VBM01_TBM32_CHK_FALSE_INNER_VA = new String[] {""} ;
      P00552_n805VBM01_TBM32_CHK_FALSE_INNER_VA = new boolean[] {false} ;
      P00552_A806VBM01_TBM32_FIXED_VALUE = new String[] {""} ;
      P00552_n806VBM01_TBM32_FIXED_VALUE = new boolean[] {false} ;
      P00552_A807VBM01_TBM32_LIST_CD = new String[] {""} ;
      P00552_n807VBM01_TBM32_LIST_CD = new boolean[] {false} ;
      P00552_A808VBM01_TBM25_LIST_NM = new String[] {""} ;
      P00552_n808VBM01_TBM25_LIST_NM = new boolean[] {false} ;
      P00552_A809VBM01_TBM32_IMAGE_CD = new String[] {""} ;
      P00552_n809VBM01_TBM32_IMAGE_CD = new boolean[] {false} ;
      P00552_A810VBM01_TBM32_TEXT = new String[] {""} ;
      P00552_n810VBM01_TBM32_TEXT = new boolean[] {false} ;
      P00552_A811VBM01_TBM32_FONT_SIZE = new long[1] ;
      P00552_n811VBM01_TBM32_FONT_SIZE = new boolean[] {false} ;
      P00552_A812VBM01_TBM32_FONT_UL_FLG = new String[] {""} ;
      P00552_n812VBM01_TBM32_FONT_UL_FLG = new boolean[] {false} ;
      P00552_A813VBM01_TBM32_FONT_COLOR_DIV = new long[1] ;
      P00552_n813VBM01_TBM32_FONT_COLOR_DIV = new boolean[] {false} ;
      P00552_A814VBM01_TBM32_LINE_SIZE_DIV = new long[1] ;
      P00552_n814VBM01_TBM32_LINE_SIZE_DIV = new boolean[] {false} ;
      P00552_A815VBM01_TBM32_LINE_COLOR_DIV = new long[1] ;
      P00552_n815VBM01_TBM32_LINE_COLOR_DIV = new boolean[] {false} ;
      P00552_A816VBM01_TBM32_LINE_START_POINT_D = new String[] {""} ;
      P00552_n816VBM01_TBM32_LINE_START_POINT_D = new boolean[] {false} ;
      P00552_A817VBM01_TBM32_LINE_END_POINT_DIV = new String[] {""} ;
      P00552_n817VBM01_TBM32_LINE_END_POINT_DIV = new boolean[] {false} ;
      P00552_A818VBM01_TBM32_LINE_ANGLE = new long[1] ;
      P00552_n818VBM01_TBM32_LINE_ANGLE = new boolean[] {false} ;
      P00552_A819VBM01_TBM32_AUTH_LVL_MIN = new long[1] ;
      P00552_n819VBM01_TBM32_AUTH_LVL_MIN = new boolean[] {false} ;
      P00552_A820VBM01_TBM32_ZORDER = new long[1] ;
      P00552_n820VBM01_TBM32_ZORDER = new boolean[] {false} ;
      P00552_A821VBM01_TBM32_TAB_ORDER = new long[1] ;
      P00552_n821VBM01_TBM32_TAB_ORDER = new boolean[] {false} ;
      P00552_A822VBM01_TBM32_TABSTOP_FLG = new String[] {""} ;
      P00552_n822VBM01_TBM32_TABSTOP_FLG = new boolean[] {false} ;
      P00552_A823VBM01_TBM32_REQUIRED_INPUT_FLG = new String[] {""} ;
      P00552_n823VBM01_TBM32_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P00552_A824VBM01_TBM32_MIN_VALUE = new String[] {""} ;
      P00552_n824VBM01_TBM32_MIN_VALUE = new boolean[] {false} ;
      P00552_A825VBM01_TBM32_MAX_VALUE = new String[] {""} ;
      P00552_n825VBM01_TBM32_MAX_VALUE = new boolean[] {false} ;
      P00552_A826VBM01_TBM32_CRF_ITEM_NOTE = new String[] {""} ;
      P00552_n826VBM01_TBM32_CRF_ITEM_NOTE = new boolean[] {false} ;
      P00552_A827VBM01_TBM32_REF_CRF_ID = new long[1] ;
      P00552_n827VBM01_TBM32_REF_CRF_ID = new boolean[] {false} ;
      P00552_A828VBM01_TBM32_REF_CRF_ITEM_CD = new String[] {""} ;
      P00552_n828VBM01_TBM32_REF_CRF_ITEM_CD = new boolean[] {false} ;
      P00552_A829VBM01_TBM37_VISIT_NO = new long[1] ;
      P00552_n829VBM01_TBM37_VISIT_NO = new boolean[] {false} ;
      P00552_A830VBM01_TBM37_DOM_CD = new String[] {""} ;
      P00552_n830VBM01_TBM37_DOM_CD = new boolean[] {false} ;
      P00552_A831VBM01_TBM37_DOM_VAR_NM = new String[] {""} ;
      P00552_n831VBM01_TBM37_DOM_VAR_NM = new boolean[] {false} ;
      P00552_A832VBM01_TBM37_DOM_ITM_GRP_OID = new String[] {""} ;
      P00552_n832VBM01_TBM37_DOM_ITM_GRP_OID = new boolean[] {false} ;
      P00552_A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S = new long[1] ;
      P00552_n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S = new boolean[] {false} ;
      P00552_A834VBM01_TBM37_DOM_ITM_GRP_ROWNO = new long[1] ;
      P00552_n834VBM01_TBM37_DOM_ITM_GRP_ROWNO = new boolean[] {false} ;
      P00552_A835VBM01_TBM41_NCM_METADATA_ID = new String[] {""} ;
      P00552_n835VBM01_TBM41_NCM_METADATA_ID = new boolean[] {false} ;
      A790VBM01_TBM31_CRF_SNM = "" ;
      A791VBM01_TBM32_CRF_ITEM_CD = "" ;
      A792VBM01_TBM32_CRF_ITEM_NM = "" ;
      A793VBM01_TBM32_CRF_ITEM_DIV = "" ;
      A794VBM01_TBM32_CRF_ITEM_GRP_CD = "" ;
      A800VBM01_TBM32_TEXT_ALIGN_DIV = "" ;
      A804VBM01_TBM32_CHK_TRUE_INNER_VAL = "" ;
      A805VBM01_TBM32_CHK_FALSE_INNER_VA = "" ;
      A806VBM01_TBM32_FIXED_VALUE = "" ;
      A807VBM01_TBM32_LIST_CD = "" ;
      A808VBM01_TBM25_LIST_NM = "" ;
      A809VBM01_TBM32_IMAGE_CD = "" ;
      A810VBM01_TBM32_TEXT = "" ;
      A812VBM01_TBM32_FONT_UL_FLG = "" ;
      A816VBM01_TBM32_LINE_START_POINT_D = "" ;
      A817VBM01_TBM32_LINE_END_POINT_DIV = "" ;
      A822VBM01_TBM32_TABSTOP_FLG = "" ;
      A823VBM01_TBM32_REQUIRED_INPUT_FLG = "" ;
      A824VBM01_TBM32_MIN_VALUE = "" ;
      A825VBM01_TBM32_MAX_VALUE = "" ;
      A826VBM01_TBM32_CRF_ITEM_NOTE = "" ;
      A828VBM01_TBM32_REF_CRF_ITEM_CD = "" ;
      A830VBM01_TBM37_DOM_CD = "" ;
      A831VBM01_TBM37_DOM_VAR_NM = "" ;
      A832VBM01_TBM37_DOM_ITM_GRP_OID = "" ;
      A835VBM01_TBM41_NCM_METADATA_ID = "" ;
      AV22W_B402_SD21_CRF_DEF_ITEM = new SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem(remoteHandle, context);
      AV11W_A812_SD01_CSV_OUTPUT = new GxObjectCollection(SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem.class, "A812_SD01_CSV_OUTPUT.A812_SD01_CSV_OUTPUTItem", "tablet-EDC_GXXEV3U3", remoteHandle);
      AV12W_A812_SD01_CSV_OUTPUT_ITEM = new SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem(remoteHandle, context);
      AV27Pgmname = "" ;
      GXt_char1 = "" ;
      AV10W_A_LOGIN_SDT = new SdtA_LOGIN_SDT(remoteHandle, context);
      GXv_SdtA_LOGIN_SDT3 = new SdtA_LOGIN_SDT [1] ;
      AV15W_ERRCD = "" ;
      GXEncryptionTmp = "" ;
      AV17W_FILE_PATH = "" ;
      GXv_char2 = new String [1] ;
      GXv_char4 = new String [1] ;
      Gx_emsg = "" ;
      pr_default = new DataStoreProvider(context, remoteHandle, new ab402_pc21_crf_def_csv_output__default(),
         new Object[] {
             new Object[] {
            P00552_A788VBM01_TBM32_STUDY_ID, P00552_n788VBM01_TBM32_STUDY_ID, P00552_A789VBM01_TBM32_CRF_ID, P00552_n789VBM01_TBM32_CRF_ID, P00552_A790VBM01_TBM31_CRF_SNM, P00552_n790VBM01_TBM31_CRF_SNM, P00552_A791VBM01_TBM32_CRF_ITEM_CD, P00552_n791VBM01_TBM32_CRF_ITEM_CD, P00552_A792VBM01_TBM32_CRF_ITEM_NM, P00552_n792VBM01_TBM32_CRF_ITEM_NM,
            P00552_A793VBM01_TBM32_CRF_ITEM_DIV, P00552_n793VBM01_TBM32_CRF_ITEM_DIV, P00552_A794VBM01_TBM32_CRF_ITEM_GRP_CD, P00552_n794VBM01_TBM32_CRF_ITEM_GRP_CD, P00552_A795VBM01_TBM32_CRF_ITEM_GRP_ORDER, P00552_n795VBM01_TBM32_CRF_ITEM_GRP_ORDER, P00552_A796VBM01_TBM32_LOCATION_X, P00552_n796VBM01_TBM32_LOCATION_X, P00552_A797VBM01_TBM32_LOCATION_Y, P00552_n797VBM01_TBM32_LOCATION_Y,
            P00552_A798VBM01_TBM32_LOCATION_X2, P00552_n798VBM01_TBM32_LOCATION_X2, P00552_A799VBM01_TBM32_LOCATION_Y2, P00552_n799VBM01_TBM32_LOCATION_Y2, P00552_A800VBM01_TBM32_TEXT_ALIGN_DIV, P00552_n800VBM01_TBM32_TEXT_ALIGN_DIV, P00552_A801VBM01_TBM32_TEXT_MAXROWS, P00552_n801VBM01_TBM32_TEXT_MAXROWS, P00552_A802VBM01_TBM32_TEXT_MAXLENGTH, P00552_n802VBM01_TBM32_TEXT_MAXLENGTH,
            P00552_A803VBM01_TBM32_DECIMAL_DIGITS, P00552_n803VBM01_TBM32_DECIMAL_DIGITS, P00552_A804VBM01_TBM32_CHK_TRUE_INNER_VAL, P00552_n804VBM01_TBM32_CHK_TRUE_INNER_VAL, P00552_A805VBM01_TBM32_CHK_FALSE_INNER_VA, P00552_n805VBM01_TBM32_CHK_FALSE_INNER_VA, P00552_A806VBM01_TBM32_FIXED_VALUE, P00552_n806VBM01_TBM32_FIXED_VALUE, P00552_A807VBM01_TBM32_LIST_CD, P00552_n807VBM01_TBM32_LIST_CD,
            P00552_A808VBM01_TBM25_LIST_NM, P00552_n808VBM01_TBM25_LIST_NM, P00552_A809VBM01_TBM32_IMAGE_CD, P00552_n809VBM01_TBM32_IMAGE_CD, P00552_A810VBM01_TBM32_TEXT, P00552_n810VBM01_TBM32_TEXT, P00552_A811VBM01_TBM32_FONT_SIZE, P00552_n811VBM01_TBM32_FONT_SIZE, P00552_A812VBM01_TBM32_FONT_UL_FLG, P00552_n812VBM01_TBM32_FONT_UL_FLG,
            P00552_A813VBM01_TBM32_FONT_COLOR_DIV, P00552_n813VBM01_TBM32_FONT_COLOR_DIV, P00552_A814VBM01_TBM32_LINE_SIZE_DIV, P00552_n814VBM01_TBM32_LINE_SIZE_DIV, P00552_A815VBM01_TBM32_LINE_COLOR_DIV, P00552_n815VBM01_TBM32_LINE_COLOR_DIV, P00552_A816VBM01_TBM32_LINE_START_POINT_D, P00552_n816VBM01_TBM32_LINE_START_POINT_D, P00552_A817VBM01_TBM32_LINE_END_POINT_DIV, P00552_n817VBM01_TBM32_LINE_END_POINT_DIV,
            P00552_A818VBM01_TBM32_LINE_ANGLE, P00552_n818VBM01_TBM32_LINE_ANGLE, P00552_A819VBM01_TBM32_AUTH_LVL_MIN, P00552_n819VBM01_TBM32_AUTH_LVL_MIN, P00552_A820VBM01_TBM32_ZORDER, P00552_n820VBM01_TBM32_ZORDER, P00552_A821VBM01_TBM32_TAB_ORDER, P00552_n821VBM01_TBM32_TAB_ORDER, P00552_A822VBM01_TBM32_TABSTOP_FLG, P00552_n822VBM01_TBM32_TABSTOP_FLG,
            P00552_A823VBM01_TBM32_REQUIRED_INPUT_FLG, P00552_n823VBM01_TBM32_REQUIRED_INPUT_FLG, P00552_A824VBM01_TBM32_MIN_VALUE, P00552_n824VBM01_TBM32_MIN_VALUE, P00552_A825VBM01_TBM32_MAX_VALUE, P00552_n825VBM01_TBM32_MAX_VALUE, P00552_A826VBM01_TBM32_CRF_ITEM_NOTE, P00552_n826VBM01_TBM32_CRF_ITEM_NOTE, P00552_A827VBM01_TBM32_REF_CRF_ID, P00552_n827VBM01_TBM32_REF_CRF_ID,
            P00552_A828VBM01_TBM32_REF_CRF_ITEM_CD, P00552_n828VBM01_TBM32_REF_CRF_ITEM_CD, P00552_A829VBM01_TBM37_VISIT_NO, P00552_n829VBM01_TBM37_VISIT_NO, P00552_A830VBM01_TBM37_DOM_CD, P00552_n830VBM01_TBM37_DOM_CD, P00552_A831VBM01_TBM37_DOM_VAR_NM, P00552_n831VBM01_TBM37_DOM_VAR_NM, P00552_A832VBM01_TBM37_DOM_ITM_GRP_OID, P00552_n832VBM01_TBM37_DOM_ITM_GRP_OID,
            P00552_A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S, P00552_n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S, P00552_A834VBM01_TBM37_DOM_ITM_GRP_ROWNO, P00552_n834VBM01_TBM37_DOM_ITM_GRP_ROWNO, P00552_A835VBM01_TBM41_NCM_METADATA_ID, P00552_n835VBM01_TBM41_NCM_METADATA_ID
            }
         }
      );
      pr_default.setErrorHandler(this);
      AV27Pgmname = "AB402_PC21_CRF_DEF_CSV_OUTPUT" ;
      /* GeneXus formulas. */
      AV27Pgmname = "AB402_PC21_CRF_DEF_CSV_OUTPUT" ;
      Gx_err = (short)(0) ;
   }

   private byte GxWebError ;
   private short AV19W_RTN_CD ;
   private short Gx_err ;
   private int AV26GXV1 ;
   private int GXActiveErrHndl ;
   private long AV9P_STUDY_ID ;
   private long AV13W_CSV_CNT ;
   private long A788VBM01_TBM32_STUDY_ID ;
   private long A789VBM01_TBM32_CRF_ID ;
   private long A795VBM01_TBM32_CRF_ITEM_GRP_ORDER ;
   private long A796VBM01_TBM32_LOCATION_X ;
   private long A797VBM01_TBM32_LOCATION_Y ;
   private long A798VBM01_TBM32_LOCATION_X2 ;
   private long A799VBM01_TBM32_LOCATION_Y2 ;
   private long A801VBM01_TBM32_TEXT_MAXROWS ;
   private long A802VBM01_TBM32_TEXT_MAXLENGTH ;
   private long A803VBM01_TBM32_DECIMAL_DIGITS ;
   private long A811VBM01_TBM32_FONT_SIZE ;
   private long A813VBM01_TBM32_FONT_COLOR_DIV ;
   private long A814VBM01_TBM32_LINE_SIZE_DIV ;
   private long A815VBM01_TBM32_LINE_COLOR_DIV ;
   private long A818VBM01_TBM32_LINE_ANGLE ;
   private long A819VBM01_TBM32_AUTH_LVL_MIN ;
   private long A820VBM01_TBM32_ZORDER ;
   private long A821VBM01_TBM32_TAB_ORDER ;
   private long A827VBM01_TBM32_REF_CRF_ID ;
   private long A829VBM01_TBM37_VISIT_NO ;
   private long A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S ;
   private long A834VBM01_TBM37_DOM_ITM_GRP_ROWNO ;
   private String GXKey ;
   private String GXDecQS ;
   private String gxfirstwebparm ;
   private String scmdbuf ;
   private String AV27Pgmname ;
   private String GXt_char1 ;
   private String GXEncryptionTmp ;
   private String GXv_char2[] ;
   private String GXv_char4[] ;
   private String Gx_emsg ;
   private boolean entryPointCalled ;
   private boolean returnInSub ;
   private boolean n788VBM01_TBM32_STUDY_ID ;
   private boolean n789VBM01_TBM32_CRF_ID ;
   private boolean n790VBM01_TBM31_CRF_SNM ;
   private boolean n791VBM01_TBM32_CRF_ITEM_CD ;
   private boolean n792VBM01_TBM32_CRF_ITEM_NM ;
   private boolean n793VBM01_TBM32_CRF_ITEM_DIV ;
   private boolean n794VBM01_TBM32_CRF_ITEM_GRP_CD ;
   private boolean n795VBM01_TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean n796VBM01_TBM32_LOCATION_X ;
   private boolean n797VBM01_TBM32_LOCATION_Y ;
   private boolean n798VBM01_TBM32_LOCATION_X2 ;
   private boolean n799VBM01_TBM32_LOCATION_Y2 ;
   private boolean n800VBM01_TBM32_TEXT_ALIGN_DIV ;
   private boolean n801VBM01_TBM32_TEXT_MAXROWS ;
   private boolean n802VBM01_TBM32_TEXT_MAXLENGTH ;
   private boolean n803VBM01_TBM32_DECIMAL_DIGITS ;
   private boolean n804VBM01_TBM32_CHK_TRUE_INNER_VAL ;
   private boolean n805VBM01_TBM32_CHK_FALSE_INNER_VA ;
   private boolean n806VBM01_TBM32_FIXED_VALUE ;
   private boolean n807VBM01_TBM32_LIST_CD ;
   private boolean n808VBM01_TBM25_LIST_NM ;
   private boolean n809VBM01_TBM32_IMAGE_CD ;
   private boolean n810VBM01_TBM32_TEXT ;
   private boolean n811VBM01_TBM32_FONT_SIZE ;
   private boolean n812VBM01_TBM32_FONT_UL_FLG ;
   private boolean n813VBM01_TBM32_FONT_COLOR_DIV ;
   private boolean n814VBM01_TBM32_LINE_SIZE_DIV ;
   private boolean n815VBM01_TBM32_LINE_COLOR_DIV ;
   private boolean n816VBM01_TBM32_LINE_START_POINT_D ;
   private boolean n817VBM01_TBM32_LINE_END_POINT_DIV ;
   private boolean n818VBM01_TBM32_LINE_ANGLE ;
   private boolean n819VBM01_TBM32_AUTH_LVL_MIN ;
   private boolean n820VBM01_TBM32_ZORDER ;
   private boolean n821VBM01_TBM32_TAB_ORDER ;
   private boolean n822VBM01_TBM32_TABSTOP_FLG ;
   private boolean n823VBM01_TBM32_REQUIRED_INPUT_FLG ;
   private boolean n824VBM01_TBM32_MIN_VALUE ;
   private boolean n825VBM01_TBM32_MAX_VALUE ;
   private boolean n826VBM01_TBM32_CRF_ITEM_NOTE ;
   private boolean n827VBM01_TBM32_REF_CRF_ID ;
   private boolean n828VBM01_TBM32_REF_CRF_ITEM_CD ;
   private boolean n829VBM01_TBM37_VISIT_NO ;
   private boolean n830VBM01_TBM37_DOM_CD ;
   private boolean n831VBM01_TBM37_DOM_VAR_NM ;
   private boolean n832VBM01_TBM37_DOM_ITM_GRP_OID ;
   private boolean n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S ;
   private boolean n834VBM01_TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean n835VBM01_TBM41_NCM_METADATA_ID ;
   private String AV20W_RTN_MSG ;
   private String AV8C_TAM02_APP_ID ;
   private String AV14W_CSV_KAK ;
   private String AV16W_FILE_NAME ;
   private String A790VBM01_TBM31_CRF_SNM ;
   private String A791VBM01_TBM32_CRF_ITEM_CD ;
   private String A792VBM01_TBM32_CRF_ITEM_NM ;
   private String A793VBM01_TBM32_CRF_ITEM_DIV ;
   private String A794VBM01_TBM32_CRF_ITEM_GRP_CD ;
   private String A800VBM01_TBM32_TEXT_ALIGN_DIV ;
   private String A804VBM01_TBM32_CHK_TRUE_INNER_VAL ;
   private String A805VBM01_TBM32_CHK_FALSE_INNER_VA ;
   private String A806VBM01_TBM32_FIXED_VALUE ;
   private String A807VBM01_TBM32_LIST_CD ;
   private String A808VBM01_TBM25_LIST_NM ;
   private String A809VBM01_TBM32_IMAGE_CD ;
   private String A810VBM01_TBM32_TEXT ;
   private String A812VBM01_TBM32_FONT_UL_FLG ;
   private String A816VBM01_TBM32_LINE_START_POINT_D ;
   private String A817VBM01_TBM32_LINE_END_POINT_DIV ;
   private String A822VBM01_TBM32_TABSTOP_FLG ;
   private String A823VBM01_TBM32_REQUIRED_INPUT_FLG ;
   private String A824VBM01_TBM32_MIN_VALUE ;
   private String A825VBM01_TBM32_MAX_VALUE ;
   private String A826VBM01_TBM32_CRF_ITEM_NOTE ;
   private String A828VBM01_TBM32_REF_CRF_ITEM_CD ;
   private String A830VBM01_TBM37_DOM_CD ;
   private String A831VBM01_TBM37_DOM_VAR_NM ;
   private String A832VBM01_TBM37_DOM_ITM_GRP_OID ;
   private String A835VBM01_TBM41_NCM_METADATA_ID ;
   private String AV15W_ERRCD ;
   private String AV17W_FILE_PATH ;
   private IDataStoreProvider pr_default ;
   private long[] P00552_A788VBM01_TBM32_STUDY_ID ;
   private boolean[] P00552_n788VBM01_TBM32_STUDY_ID ;
   private long[] P00552_A789VBM01_TBM32_CRF_ID ;
   private boolean[] P00552_n789VBM01_TBM32_CRF_ID ;
   private String[] P00552_A790VBM01_TBM31_CRF_SNM ;
   private boolean[] P00552_n790VBM01_TBM31_CRF_SNM ;
   private String[] P00552_A791VBM01_TBM32_CRF_ITEM_CD ;
   private boolean[] P00552_n791VBM01_TBM32_CRF_ITEM_CD ;
   private String[] P00552_A792VBM01_TBM32_CRF_ITEM_NM ;
   private boolean[] P00552_n792VBM01_TBM32_CRF_ITEM_NM ;
   private String[] P00552_A793VBM01_TBM32_CRF_ITEM_DIV ;
   private boolean[] P00552_n793VBM01_TBM32_CRF_ITEM_DIV ;
   private String[] P00552_A794VBM01_TBM32_CRF_ITEM_GRP_CD ;
   private boolean[] P00552_n794VBM01_TBM32_CRF_ITEM_GRP_CD ;
   private long[] P00552_A795VBM01_TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean[] P00552_n795VBM01_TBM32_CRF_ITEM_GRP_ORDER ;
   private long[] P00552_A796VBM01_TBM32_LOCATION_X ;
   private boolean[] P00552_n796VBM01_TBM32_LOCATION_X ;
   private long[] P00552_A797VBM01_TBM32_LOCATION_Y ;
   private boolean[] P00552_n797VBM01_TBM32_LOCATION_Y ;
   private long[] P00552_A798VBM01_TBM32_LOCATION_X2 ;
   private boolean[] P00552_n798VBM01_TBM32_LOCATION_X2 ;
   private long[] P00552_A799VBM01_TBM32_LOCATION_Y2 ;
   private boolean[] P00552_n799VBM01_TBM32_LOCATION_Y2 ;
   private String[] P00552_A800VBM01_TBM32_TEXT_ALIGN_DIV ;
   private boolean[] P00552_n800VBM01_TBM32_TEXT_ALIGN_DIV ;
   private long[] P00552_A801VBM01_TBM32_TEXT_MAXROWS ;
   private boolean[] P00552_n801VBM01_TBM32_TEXT_MAXROWS ;
   private long[] P00552_A802VBM01_TBM32_TEXT_MAXLENGTH ;
   private boolean[] P00552_n802VBM01_TBM32_TEXT_MAXLENGTH ;
   private long[] P00552_A803VBM01_TBM32_DECIMAL_DIGITS ;
   private boolean[] P00552_n803VBM01_TBM32_DECIMAL_DIGITS ;
   private String[] P00552_A804VBM01_TBM32_CHK_TRUE_INNER_VAL ;
   private boolean[] P00552_n804VBM01_TBM32_CHK_TRUE_INNER_VAL ;
   private String[] P00552_A805VBM01_TBM32_CHK_FALSE_INNER_VA ;
   private boolean[] P00552_n805VBM01_TBM32_CHK_FALSE_INNER_VA ;
   private String[] P00552_A806VBM01_TBM32_FIXED_VALUE ;
   private boolean[] P00552_n806VBM01_TBM32_FIXED_VALUE ;
   private String[] P00552_A807VBM01_TBM32_LIST_CD ;
   private boolean[] P00552_n807VBM01_TBM32_LIST_CD ;
   private String[] P00552_A808VBM01_TBM25_LIST_NM ;
   private boolean[] P00552_n808VBM01_TBM25_LIST_NM ;
   private String[] P00552_A809VBM01_TBM32_IMAGE_CD ;
   private boolean[] P00552_n809VBM01_TBM32_IMAGE_CD ;
   private String[] P00552_A810VBM01_TBM32_TEXT ;
   private boolean[] P00552_n810VBM01_TBM32_TEXT ;
   private long[] P00552_A811VBM01_TBM32_FONT_SIZE ;
   private boolean[] P00552_n811VBM01_TBM32_FONT_SIZE ;
   private String[] P00552_A812VBM01_TBM32_FONT_UL_FLG ;
   private boolean[] P00552_n812VBM01_TBM32_FONT_UL_FLG ;
   private long[] P00552_A813VBM01_TBM32_FONT_COLOR_DIV ;
   private boolean[] P00552_n813VBM01_TBM32_FONT_COLOR_DIV ;
   private long[] P00552_A814VBM01_TBM32_LINE_SIZE_DIV ;
   private boolean[] P00552_n814VBM01_TBM32_LINE_SIZE_DIV ;
   private long[] P00552_A815VBM01_TBM32_LINE_COLOR_DIV ;
   private boolean[] P00552_n815VBM01_TBM32_LINE_COLOR_DIV ;
   private String[] P00552_A816VBM01_TBM32_LINE_START_POINT_D ;
   private boolean[] P00552_n816VBM01_TBM32_LINE_START_POINT_D ;
   private String[] P00552_A817VBM01_TBM32_LINE_END_POINT_DIV ;
   private boolean[] P00552_n817VBM01_TBM32_LINE_END_POINT_DIV ;
   private long[] P00552_A818VBM01_TBM32_LINE_ANGLE ;
   private boolean[] P00552_n818VBM01_TBM32_LINE_ANGLE ;
   private long[] P00552_A819VBM01_TBM32_AUTH_LVL_MIN ;
   private boolean[] P00552_n819VBM01_TBM32_AUTH_LVL_MIN ;
   private long[] P00552_A820VBM01_TBM32_ZORDER ;
   private boolean[] P00552_n820VBM01_TBM32_ZORDER ;
   private long[] P00552_A821VBM01_TBM32_TAB_ORDER ;
   private boolean[] P00552_n821VBM01_TBM32_TAB_ORDER ;
   private String[] P00552_A822VBM01_TBM32_TABSTOP_FLG ;
   private boolean[] P00552_n822VBM01_TBM32_TABSTOP_FLG ;
   private String[] P00552_A823VBM01_TBM32_REQUIRED_INPUT_FLG ;
   private boolean[] P00552_n823VBM01_TBM32_REQUIRED_INPUT_FLG ;
   private String[] P00552_A824VBM01_TBM32_MIN_VALUE ;
   private boolean[] P00552_n824VBM01_TBM32_MIN_VALUE ;
   private String[] P00552_A825VBM01_TBM32_MAX_VALUE ;
   private boolean[] P00552_n825VBM01_TBM32_MAX_VALUE ;
   private String[] P00552_A826VBM01_TBM32_CRF_ITEM_NOTE ;
   private boolean[] P00552_n826VBM01_TBM32_CRF_ITEM_NOTE ;
   private long[] P00552_A827VBM01_TBM32_REF_CRF_ID ;
   private boolean[] P00552_n827VBM01_TBM32_REF_CRF_ID ;
   private String[] P00552_A828VBM01_TBM32_REF_CRF_ITEM_CD ;
   private boolean[] P00552_n828VBM01_TBM32_REF_CRF_ITEM_CD ;
   private long[] P00552_A829VBM01_TBM37_VISIT_NO ;
   private boolean[] P00552_n829VBM01_TBM37_VISIT_NO ;
   private String[] P00552_A830VBM01_TBM37_DOM_CD ;
   private boolean[] P00552_n830VBM01_TBM37_DOM_CD ;
   private String[] P00552_A831VBM01_TBM37_DOM_VAR_NM ;
   private boolean[] P00552_n831VBM01_TBM37_DOM_VAR_NM ;
   private String[] P00552_A832VBM01_TBM37_DOM_ITM_GRP_OID ;
   private boolean[] P00552_n832VBM01_TBM37_DOM_ITM_GRP_OID ;
   private long[] P00552_A833VBM01_TBM37_DOM_ITM_GRP_ATTR_S ;
   private boolean[] P00552_n833VBM01_TBM37_DOM_ITM_GRP_ATTR_S ;
   private long[] P00552_A834VBM01_TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean[] P00552_n834VBM01_TBM37_DOM_ITM_GRP_ROWNO ;
   private String[] P00552_A835VBM01_TBM41_NCM_METADATA_ID ;
   private boolean[] P00552_n835VBM01_TBM41_NCM_METADATA_ID ;
   private GxObjectCollection AV21W_B402_SD21_CRF_DEF ;
   private GxObjectCollection AV11W_A812_SD01_CSV_OUTPUT ;
   private SdtA_LOGIN_SDT AV10W_A_LOGIN_SDT ;
   private SdtA_LOGIN_SDT GXv_SdtA_LOGIN_SDT3[] ;
   private SdtA812_SD01_CSV_OUTPUT_A812_SD01_CSV_OUTPUTItem AV12W_A812_SD01_CSV_OUTPUT_ITEM ;
   private SdtB402_SD21_CRF_DEF_B402_SD21_CRF_DEFItem AV22W_B402_SD21_CRF_DEF_ITEM ;
}

final  class ab402_pc21_crf_def_csv_output__default extends DataStoreHelperBase implements ILocalDataStoreHelper
{
   public Cursor[] getCursors( )
   {
      return new Cursor[] {
          new ForEachCursor("P00552", "SELECT `VBM01_TBM32_STUDY_ID`, `VBM01_TBM32_CRF_ID`, `VBM01_TBM31_CRF_SNM`, `VBM01_TBM32_CRF_ITEM_CD`, `VBM01_TBM32_CRF_ITEM_NM`, `VBM01_TBM32_CRF_ITEM_DIV`, `VBM01_TBM32_CRF_ITEM_GRP_CD`, `VBM01_TBM32_CRF_ITEM_GRP_ORDER`, `VBM01_TBM32_LOCATION_X`, `VBM01_TBM32_LOCATION_Y`, `VBM01_TBM32_LOCATION_X2`, `VBM01_TBM32_LOCATION_Y2`, `VBM01_TBM32_TEXT_ALIGN_DIV`, `VBM01_TBM32_TEXT_MAXROWS`, `VBM01_TBM32_TEXT_MAXLENGTH`, `VBM01_TBM32_DECIMAL_DIGITS`, `VBM01_TBM32_CHK_TRUE_INNER_VALUE`, `VBM01_TBM32_CHK_FALSE_INNER_VALUE`, `VBM01_TBM32_FIXED_VALUE`, `VBM01_TBM32_LIST_CD`, `VBM01_TBM25_LIST_NM`, `VBM01_TBM32_IMAGE_CD`, `VBM01_TBM32_TEXT`, `VBM01_TBM32_FONT_SIZE`, `VBM01_TBM32_FONT_UL_FLG`, `VBM01_TBM32_FONT_COLOR_DIV`, `VBM01_TBM32_LINE_SIZE_DIV`, `VBM01_TBM32_LINE_COLOR_DIV`, `VBM01_TBM32_LINE_START_POINT_DIV`, `VBM01_TBM32_LINE_END_POINT_DIV`, `VBM01_TBM32_LINE_ANGLE`, `VBM01_TBM32_AUTH_LVL_MIN`, `VBM01_TBM32_ZORDER`, `VBM01_TBM32_TAB_ORDER`, `VBM01_TBM32_TABSTOP_FLG`, `VBM01_TBM32_REQUIRED_INPUT_FLG`, `VBM01_TBM32_MIN_VALUE`, `VBM01_TBM32_MAX_VALUE`, `VBM01_TBM32_CRF_ITEM_NOTE`, `VBM01_TBM32_REF_CRF_ID`, `VBM01_TBM32_REF_CRF_ITEM_CD`, `VBM01_TBM37_VISIT_NO`, `VBM01_TBM37_DOM_CD`, `VBM01_TBM37_DOM_VAR_NM`, `VBM01_TBM37_DOM_ITM_GRP_OID`, `VBM01_TBM37_DOM_ITM_GRP_ATTR_SEQ`, `VBM01_TBM37_DOM_ITM_GRP_ROWNO`, `VBM01_TBM41_NCM_METADATA_ID` FROM `vbm01_crf_def_inf` WHERE `VBM01_TBM32_STUDY_ID` = ? ",false, GX_NOMASK + GX_MASKLOOPLOCK, false, this,100,0,false )
      };
   }

   public void getResults( int cursor ,
                           IFieldGetter rslt ,
                           Object[] buf ) throws SQLException
   {
      switch ( cursor )
      {
            case 0 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((boolean[]) buf[1])[0] = rslt.wasNull();
               ((long[]) buf[2])[0] = rslt.getLong(2) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((long[]) buf[14])[0] = rslt.getLong(8) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((long[]) buf[16])[0] = rslt.getLong(9) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((long[]) buf[18])[0] = rslt.getLong(10) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((long[]) buf[20])[0] = rslt.getLong(11) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((long[]) buf[22])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((long[]) buf[26])[0] = rslt.getLong(14) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((long[]) buf[28])[0] = rslt.getLong(15) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((long[]) buf[30])[0] = rslt.getLong(16) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               ((String[]) buf[32])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[33])[0] = rslt.wasNull();
               ((String[]) buf[34])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[35])[0] = rslt.wasNull();
               ((String[]) buf[36])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[37])[0] = rslt.wasNull();
               ((String[]) buf[38])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[39])[0] = rslt.wasNull();
               ((String[]) buf[40])[0] = rslt.getVarchar(21) ;
               ((boolean[]) buf[41])[0] = rslt.wasNull();
               ((String[]) buf[42])[0] = rslt.getVarchar(22) ;
               ((boolean[]) buf[43])[0] = rslt.wasNull();
               ((String[]) buf[44])[0] = rslt.getVarchar(23) ;
               ((boolean[]) buf[45])[0] = rslt.wasNull();
               ((long[]) buf[46])[0] = rslt.getLong(24) ;
               ((boolean[]) buf[47])[0] = rslt.wasNull();
               ((String[]) buf[48])[0] = rslt.getVarchar(25) ;
               ((boolean[]) buf[49])[0] = rslt.wasNull();
               ((long[]) buf[50])[0] = rslt.getLong(26) ;
               ((boolean[]) buf[51])[0] = rslt.wasNull();
               ((long[]) buf[52])[0] = rslt.getLong(27) ;
               ((boolean[]) buf[53])[0] = rslt.wasNull();
               ((long[]) buf[54])[0] = rslt.getLong(28) ;
               ((boolean[]) buf[55])[0] = rslt.wasNull();
               ((String[]) buf[56])[0] = rslt.getVarchar(29) ;
               ((boolean[]) buf[57])[0] = rslt.wasNull();
               ((String[]) buf[58])[0] = rslt.getVarchar(30) ;
               ((boolean[]) buf[59])[0] = rslt.wasNull();
               ((long[]) buf[60])[0] = rslt.getLong(31) ;
               ((boolean[]) buf[61])[0] = rslt.wasNull();
               ((long[]) buf[62])[0] = rslt.getLong(32) ;
               ((boolean[]) buf[63])[0] = rslt.wasNull();
               ((long[]) buf[64])[0] = rslt.getLong(33) ;
               ((boolean[]) buf[65])[0] = rslt.wasNull();
               ((long[]) buf[66])[0] = rslt.getLong(34) ;
               ((boolean[]) buf[67])[0] = rslt.wasNull();
               ((String[]) buf[68])[0] = rslt.getVarchar(35) ;
               ((boolean[]) buf[69])[0] = rslt.wasNull();
               ((String[]) buf[70])[0] = rslt.getVarchar(36) ;
               ((boolean[]) buf[71])[0] = rslt.wasNull();
               ((String[]) buf[72])[0] = rslt.getVarchar(37) ;
               ((boolean[]) buf[73])[0] = rslt.wasNull();
               ((String[]) buf[74])[0] = rslt.getVarchar(38) ;
               ((boolean[]) buf[75])[0] = rslt.wasNull();
               ((String[]) buf[76])[0] = rslt.getVarchar(39) ;
               ((boolean[]) buf[77])[0] = rslt.wasNull();
               ((long[]) buf[78])[0] = rslt.getLong(40) ;
               ((boolean[]) buf[79])[0] = rslt.wasNull();
               ((String[]) buf[80])[0] = rslt.getVarchar(41) ;
               ((boolean[]) buf[81])[0] = rslt.wasNull();
               ((long[]) buf[82])[0] = rslt.getLong(42) ;
               ((boolean[]) buf[83])[0] = rslt.wasNull();
               ((String[]) buf[84])[0] = rslt.getVarchar(43) ;
               ((boolean[]) buf[85])[0] = rslt.wasNull();
               ((String[]) buf[86])[0] = rslt.getVarchar(44) ;
               ((boolean[]) buf[87])[0] = rslt.wasNull();
               ((String[]) buf[88])[0] = rslt.getVarchar(45) ;
               ((boolean[]) buf[89])[0] = rslt.wasNull();
               ((long[]) buf[90])[0] = rslt.getLong(46) ;
               ((boolean[]) buf[91])[0] = rslt.wasNull();
               ((long[]) buf[92])[0] = rslt.getLong(47) ;
               ((boolean[]) buf[93])[0] = rslt.wasNull();
               ((String[]) buf[94])[0] = rslt.getVarchar(48) ;
               ((boolean[]) buf[95])[0] = rslt.wasNull();
               return;
      }
   }

   public void setParameters( int cursor ,
                              IFieldSetter stmt ,
                              Object[] parms ) throws SQLException
   {
      switch ( cursor )
      {
            case 0 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               return;
      }
   }

}

